_:N2f815407007a42868b57cf0b11f0b5b4 <http://example.org/has_score> "0.71914566"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IOM10> .
_:N24b2e07630f44206882af6e26ed22592 <http://example.org/has_chunk> ". (See also: MSF-Discrete)\n7. Cuts, backtracking, and non-determinism.\n8. Closed-world vs open-world assumptions.\nNon-core:\n9. Memory overhead of variable copying in handling iterative programs.\n10. Programming constructs to store partial computation and pruning search trees.\n11. Mixing functional programming and logic programming using concepts such as equational logic,\nnarrowing, residuation, and semantic unification. (See also: FPL-Functional)\n12. Higher-order, constraint, and inductive logic programming" <http://example.org/course/X3IOM10> .
_:N2f815407007a42868b57cf0b11f0b5b4 <http://example.org/has_chunk> "AI-Search: Search\nCS Core:\n1. State space representation of a problem\na. Specifying states, goals, and operators\nb. Factoring states into representations (hypothesis spaces)\nc. Problem solving by graph search\ni. e.g., Graphs as a space, and tree traversals as exploration of that space\nii. Dynamic construction of the graph (not given upfront)\n2. Uninformed graph search for problem solving (See also: AL-Foundational)\na. Breadth-first search\nb. Depth-first search\ni. With iterative deepening\nc" <http://example.org/course/X3IOM10> .
_:N2f815407007a42868b57cf0b11f0b5b4 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI_Search_Search.txt> <http://example.org/course/X3IOM10> .
_:N24b2e07630f44206882af6e26ed22592 <http://example.org/has_score> "0.7305043"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IOM10> .
_:N906361c6ff4649c78d0459fa141e3567 <http://example.org/has_score> "0.70657253"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IOM10> .
_:N906361c6ff4649c78d0459fa141e3567 <http://example.org/has_chunk> ".\n2. Given a problem, develop an appropriate automaton that addresses the problem.\n3. Develop a regular expression for a given regular language expressed in natural language.\n4. Explain the difference between regular expressions (Type-3 acceptors) and the regular expressions\n(Type-2 acceptors) used in programming languages.\n5. For each formal model in this unit:\na. Explain its definition comparing its characteristics with the others in this unit,\nb" <http://example.org/course/X3IOM10> .
<http://example.org/course/X3IOM10> <http://example.org/is_aligned_with> _:N2f815407007a42868b57cf0b11f0b5b4 <http://example.org/course/X3IOM10> .
_:N24b2e07630f44206882af6e26ed22592 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Logic_Logic_Programming.txt> <http://example.org/course/X3IOM10> .
<http://example.org/course/X3IOM10> <http://example.org/is_aligned_with> _:N906361c6ff4649c78d0459fa141e3567 <http://example.org/course/X3IOM10> .
<http://example.org/course/X3IOM10> <http://example.org/is_aligned_with> _:N24b2e07630f44206882af6e26ed22592 <http://example.org/course/X3IOM10> .
_:N906361c6ff4649c78d0459fa141e3567 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Models_Computational_Models_and_Formal_Languages.txt> <http://example.org/course/X3IOM10> .
<http://example.org/course/X2I1010> <http://example.org/is_aligned_with> _:N80e252e1fd774979aa4f142e9a38f8cd <http://example.org/course/X2I1010> .
_:N80e252e1fd774979aa4f142e9a38f8cd <http://example.org/has_score> "0.6980145"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I1010> .
_:N12b5d9a3f739453399372abd514066a0 <http://example.org/has_score> "0.6981317"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I1010> .
_:Na83dd78cc5e84b49b3b574f7fcf1f751 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Date_Management_DM/DM-NoSQL_NoSQL_Systems.txt> <http://example.org/course/X2I1010> .
_:Na83dd78cc5e84b49b3b574f7fcf1f751 <http://example.org/has_score> "0.69569504"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I1010> .
_:N80e252e1fd774979aa4f142e9a38f8cd <http://example.org/has_chunk> ".\n8. Compare and contrast stateful vs stateless execution.\n9. Define and use iterators and other operations on aggregates, including operations that take\nfunctions as arguments, in multiple programming languages, selecting the most natural idioms for\neach language. (See also: FPL-OOP)\nNon-core:\n10. Illustrate graph reduction using a λ-expression using a shared subexpression.\n11. Illustrate the execution of a simple nested λ-expression using an abstract machine, such as an ABC\nmachine.\n12" <http://example.org/course/X2I1010> .
<http://example.org/course/X2I1010> <http://example.org/is_aligned_with> _:Na83dd78cc5e84b49b3b574f7fcf1f751 <http://example.org/course/X2I1010> .
_:N12b5d9a3f739453399372abd514066a0 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://example.org/course/X2I1010> .
<http://example.org/course/X2I1010> <http://example.org/is_aligned_with> _:N12b5d9a3f739453399372abd514066a0 <http://example.org/course/X2I1010> .
_:N80e252e1fd774979aa4f142e9a38f8cd <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Functional_Functional_Programming.txt> <http://example.org/course/X2I1010> .
_:N12b5d9a3f739453399372abd514066a0 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://example.org/course/X2I1010> .
_:Na83dd78cc5e84b49b3b574f7fcf1f751 <http://example.org/has_chunk> ". Processing model (e.g., Map-Reduce, multi-stage map-reduce, incremental map-reduce) (See also:\nPDC-Communication)\n8. Case Studies: Cloud storage system (e.g., S3); Graph databases; “When not to use NoSQL” (See\nalso: SPD-Web)\nIllustrative Learning Outcomes:\nKA Core:\n1. Develop a use case for the use of NoSQL over RDBMS.\n2. Describe the defining characteristics behind Key-Value and Document-based data models." <http://example.org/course/X2I1010> .
_:Ncaeca0d3989947a59b4be05b9c261d50 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-SEP_Society_Ethics_and_the_Profession.txt> <http://example.org/course/X1I2030> .
_:N0978abead0b04d05afbf73c946db9a86 <http://example.org/has_score> "0.62622577"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I2030> .
_:Ncaeca0d3989947a59b4be05b9c261d50 <http://example.org/has_score> "0.6347029"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I2030> .
_:N0978abead0b04d05afbf73c946db9a86 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Development_Fundamentals_SDF/SDF-Algorithms.txt> <http://example.org/course/X1I2030> .
_:N9d4bf61293d04472b8d86fc5a619faa4 <http://example.org/has_chunk> ". Practice identifying problem characteristics in example environments\n8. Additional depth on nature of agents with examples\n9. Additional depth on AI Applications, Growth, and Impact (economic, societal, ethics, security)\nNon-core:\n10. Philosophical issues\n11. History of AI\nIllustrative Learning Outcomes:\n1. Describe the Turing test and the “Chinese Room” thought experiment.\n2. Differentiate between optimal reasoning/behavior and human-like reasoning/behavior.\n3" <http://example.org/course/X1I2030> .
_:Ncaeca0d3989947a59b4be05b9c261d50 <http://example.org/has_chunk> ". Develop algorithmic solutions to real-world societal problems, such as routing an ambulance to a\nhospital.\n2. Explain the impact that an algorithm may have on the environment and society when used to solve\na real-world problem while considering its sustainability and that it can affect different societal\ngroups in different ways.\n3. Prepare a presentation that justifies the selection of appropriate data structures and/or algorithms to\nsolve a given real-world problem.\n4" <http://example.org/course/X1I2030> .
<http://example.org/course/X1I2030> <http://example.org/is_aligned_with> _:N0978abead0b04d05afbf73c946db9a86 <http://example.org/course/X1I2030> .
_:N9d4bf61293d04472b8d86fc5a619faa4 <http://example.org/has_score> "0.6246798"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I2030> .
_:N9d4bf61293d04472b8d86fc5a619faa4 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-Introduction_Fundamental_Issues.txt> <http://example.org/course/X1I2030> .
<http://example.org/course/X1I2030> <http://example.org/is_aligned_with> _:N9d4bf61293d04472b8d86fc5a619faa4 <http://example.org/course/X1I2030> .
_:N0978abead0b04d05afbf73c946db9a86 <http://example.org/has_chunk> "Illustrative Learning Outcomes: \nCS Core: \n1. Explain the role of algorithms for writing programs.  \n2. Demonstrate how a problem may be solved by different algorithms, each with different properties. \n3. Explain some common algorithms (e.g., sorting, searching, tree traversal, graph traversal). \n4. Explain the impact on space/time performance of some algorithms." <http://example.org/course/X1I2030> .
<http://example.org/course/X1I2030> <http://example.org/is_aligned_with> _:Ncaeca0d3989947a59b4be05b9c261d50 <http://example.org/course/X1I2030> .
<http://example.org/course/X3IA080> <http://example.org/is_aligned_with> _:Nc07d1edbe6334f74983e27f7d8680168 <http://example.org/course/X3IA080> .
_:Nc07d1edbe6334f74983e27f7d8680168 <http://example.org/has_chunk> ". (See also: AI-LRR)\n13. Integration with other programming paradigms such as object-oriented programming.\n14. Advance programming constructs such as difference-lists, creating user defined data structures, set\nof, etc.\nIllustrative learning outcomes:\nKA Core:\n1. Use a logic language to implement a conventional algorithm.\n2. Use a logic language to implement an algorithm employing implicit search using clauses, relations,\nand cuts.\n3" <http://example.org/course/X3IA080> .
_:N2b0b93ec0f104f1f9aa5c5509ca96915 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Development_Fundamentals_SDF/SDF-Fundamental_Programming_Concepts_and_Practices.txt> <http://example.org/course/X3IA080> .
<http://example.org/course/X3IA080> <http://example.org/is_aligned_with> _:Ncbb8482789134aca9c751b4443050d1a <http://example.org/course/X3IA080> .
_:Ncbb8482789134aca9c751b4443050d1a <http://example.org/has_chunk> ". Layering principles (e.g., encapsulation and hourglass model) (See also: SF-Foundations)\n6. Network elements (e.g., routers, switches, hubs, access points, and hosts)\n7. Basic queueing concepts (e.g., relationship with latency, congestion, service levels, etc.)\nIllustrative Learning Outcomes:\nCS Core:\n1. Articulate the organization of the internet.\n2. List and define the appropriate network terminology\n3. Describe the layered structure of a typical networked architecture.\n4" <http://example.org/course/X3IA080> .
<http://example.org/course/X3IA080> <http://example.org/is_aligned_with> _:N2b0b93ec0f104f1f9aa5c5509ca96915 <http://example.org/course/X3IA080> .
_:Ncbb8482789134aca9c751b4443050d1a <http://example.org/has_score> "0.6765176"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA080> .
_:Ncbb8482789134aca9c751b4443050d1a <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Networking_and_Communication_NC/NC-Fundamentals_Fundamentals.txt> <http://example.org/course/X3IA080> .
_:Nc07d1edbe6334f74983e27f7d8680168 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Logic_Logic_Programming.txt> <http://example.org/course/X3IA080> .
_:N2b0b93ec0f104f1f9aa5c5509ca96915 <http://example.org/has_score> "0.6725154"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA080> .
_:N2b0b93ec0f104f1f9aa5c5509ca96915 <http://example.org/has_chunk> ". Key modularity constructs such as functions (and methods and classes, if supported in the language) and related concepts like parameter passing, scope, abstraction, data encapsulation (See also: FPL-OOP)\n5. Input and output using files and APIs \n6. Structured data types available in the chosen programming language like sequences (e.g., arrays, lists), associative containers (e.g., dictionaries, maps), others (e.g., sets, tuples) and when and how to use them (See also: AL-Foundational) \n7" <http://example.org/course/X3IA080> .
_:Nc07d1edbe6334f74983e27f7d8680168 <http://example.org/has_score> "0.6768736"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA080> .
_:N8133a6dab8414e08913205ac97ddfd9e <http://example.org/has_score> "0.6808642"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZCAICD> .
_:N6a4995b6bcfc451e9eae4ba2c521ce29 <http://example.org/has_chunk> ". Asynchronous group communication (e.g., email, forums, social networks)\nd. Social media, social computing, and social network analysis\ne. Online collaboration\nf. Social coordination and online communities\ng. Avatars, characters, and virtual worlds\nNon-core:\n6. Multi-user systems\nIllustrative Learning Outcomes:\nCS Core:\n1. Conduct a user-centered design process that is integrated into a project.\nKA Core:\n2. Compare and contrast the needs of users with those of designers.\n3" <http://example.org/course/ZZCAICD> .
_:N6a4995b6bcfc451e9eae4ba2c521ce29 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Human_Computer_Interaction_HCI/HCI-User_Understanding_the_User_Individual_goals_and_interactions_with_others.txt> <http://example.org/course/ZZCAICD> .
_:N8133a6dab8414e08913205ac97ddfd9e <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Date_Management_DM/DM-Modeling_Data_Modeling.txt> <http://example.org/course/ZZCAICD> .
<http://example.org/course/ZZCAICD> <http://example.org/is_aligned_with> _:N6a4995b6bcfc451e9eae4ba2c521ce29 <http://example.org/course/ZZCAICD> .
<http://example.org/course/ZZCAICD> <http://example.org/is_aligned_with> _:N8133a6dab8414e08913205ac97ddfd9e <http://example.org/course/ZZCAICD> .
_:N23fcd15cc1c94a0ea53554bcabbe2461 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Discrete_Discrete_Mathematics.txt> <http://example.org/course/ZZCAICD> .
<http://example.org/course/ZZCAICD> <http://example.org/is_aligned_with> _:N23fcd15cc1c94a0ea53554bcabbe2461 <http://example.org/course/ZZCAICD> .
_:N6a4995b6bcfc451e9eae4ba2c521ce29 <http://example.org/has_score> "0.67860395"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZCAICD> .
_:N8133a6dab8414e08913205ac97ddfd9e <http://example.org/has_chunk> "DM-Modeling: Data Modeling\nCS Core:\n1. Data modeling (See also: SE-Requirements)\n2. Relational data model (See also: MSF-Discrete)\nKA Core:\n3. Conceptual models (e.g., entity-relationship, UML diagrams)\n4. Semi-structured data models (expressed using DTD, XML, or JSON Schema, for example)\nNon-core:\n5. Spreadsheet models\n6. Object-oriented models (See also: FPL-OOP)\na. GraphQL\n7. New features in SQL\n8. Specialized Data Modeling topics\na. Time series data (aggregation, join)\nb. Graph data (link traversal)\nc" <http://example.org/course/ZZCAICD> .
_:N23fcd15cc1c94a0ea53554bcabbe2461 <http://example.org/has_chunk> "MSF-Discrete: Discrete Mathematics\nCS Core:\n1. Sets, relations, functions, cardinality\n2. Recursive mathematical definitions\n3. Proof techniques (induction, proof by contradiction)\n4. Permutations, combinations, counting, pigeonhole principle\n5. Modular arithmetic\n6. Logic: truth tables, connectives (operators), inference rules, formulas, normal forms, simple\npredicate logic\n7. Graphs: basic definitions\n8. Order notation\nIllustrative Learning Outcomes:\nCS Core:\n1" <http://example.org/course/ZZCAICD> .
_:N23fcd15cc1c94a0ea53554bcabbe2461 <http://example.org/has_score> "0.6805158"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZCAICD> .
_:Nb77158ccf4774ed29cf280b0df2e5863 <http://example.org/has_chunk> ". (See also: GIT-Rendering) \nc. Common Contexts for Algorithms, Data Structures, and Mathematical Functions (e.g., game loops; spatial partitioning, viewport culling, and level of detail; collision detection and resolution; physical simulation; behavior for intelligent agents; procedural content generation) (See also: MSF-Discrete, AL-Foundational) \nd. Media representations (e.g., I/O, and computation techniques for virtual worlds: audio; music; sprites; models and textures; text; dialogue; multimedia (e.g" <http://example.org/course/ZZAIAVP> .
_:Nbe1e89ed86684d64bceb27c1596bdb8f <http://example.org/has_chunk> "AI-Vision: Perception and Computer Vision\nNon-core:\n1. Computer vision\na. Image acquisition, representation, processing, and properties\nb. Shape representation, object recognition, and segmentation\nc. Motion analysis\nd. Generative models\n2. Audio and speech recognition\n3. Touch and proprioception\n4. Other modalities (e.g., olfaction)\n5. Modularity in recognition\n6. Approaches to pattern recognition (See also: AI-ML)\na. Classification algorithms and measures of classification quality\nb" <http://example.org/course/ZZAIAVP> .
_:Nb77158ccf4774ed29cf280b0df2e5863 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Game_Platforms.txt> <http://example.org/course/ZZAIAVP> .
<http://example.org/course/ZZAIAVP> <http://example.org/is_aligned_with> _:N5fa198663d174a7694c152ae9807bb13 <http://example.org/course/ZZAIAVP> .
_:N5fa198663d174a7694c152ae9807bb13 <http://example.org/has_chunk> ". Statistical techniques\nc. Deep learning techniques\nIllustrative Learning Outcomes:\n1. Summarize the importance of image and object recognition in AI and indicate several significant\napplications of this technology.\n2. List at least three image-segmentation approaches, such as thresholding, edge-based and region-\nbased algorithms, along with their defining characteristics, strengths, and weaknesses.\n3. Implement 2d object recognition based on contour-based and/or region-based shape\nrepresentations.\n4" <http://example.org/course/ZZAIAVP> .
<http://example.org/course/ZZAIAVP> <http://example.org/is_aligned_with> _:Nbe1e89ed86684d64bceb27c1596bdb8f <http://example.org/course/ZZAIAVP> .
_:Nbe1e89ed86684d64bceb27c1596bdb8f <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-Vision_Perception_and_Computer_Vision.txt> <http://example.org/course/ZZAIAVP> .
<http://example.org/course/ZZAIAVP> <http://example.org/is_aligned_with> _:Nb77158ccf4774ed29cf280b0df2e5863 <http://example.org/course/ZZAIAVP> .
_:N5fa198663d174a7694c152ae9807bb13 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-Vision_Perception_and_Computer_Vision.txt> <http://example.org/course/ZZAIAVP> .
_:Nbe1e89ed86684d64bceb27c1596bdb8f <http://example.org/has_score> "0.70385444"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZAIAVP> .
_:N5fa198663d174a7694c152ae9807bb13 <http://example.org/has_score> "0.72171015"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZAIAVP> .
_:Nb77158ccf4774ed29cf280b0df2e5863 <http://example.org/has_score> "0.7050075"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZAIAVP> .
_:N29dd306d5cb7411480fffc660c5a7c25 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-Agents_Agents_and_Cognitive_Systems.txt> <http://example.org/course/ZZHCI> .
_:N5ec8cf10ef2f49979a965bfb41c6dd04 <http://example.org/has_chunk> "HCI-User: Understanding the User: Individual goals and interactions with others\nCS Core:\n1. User-centered design and evaluation methods. (See also: SEP-Context, SEP-Ethical-Analysis,\nSEP-Professional-Ethics)\na. “You are not the users”\nb. User needs-finding\nc. Formative studies\nd. Interviews\ne. Surveys\nf. Usability tests\nKA Core:\n2. User-centered design methodology. (See also: SE-Tools)\na. Personas/persona spectrum\nb. User stories/storytelling and techniques for gathering stories\nc. Empathy maps\nd" <http://example.org/course/ZZHCI> .
_:N29dd306d5cb7411480fffc660c5a7c25 <http://example.org/has_score> "0.77723104"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZHCI> .
_:N29dd306d5cb7411480fffc660c5a7c25 <http://example.org/has_chunk> ". Multi-agent learning\n8. Human-agent interaction (See also: HCI-User, HCI-Accessibility)\na. Communication methodologies (verbal and non-verbal)\nb. Practical issues\nc. Applications\ni. Trading agents, supply chain management\nii. Ethical issues of AI interactions with humans\niii. Regulation and legal requirements of AI systems for interacting with humans\nIllustrative Learning Outcomes:\n1. Characterize and contrast the standard agent architectures.\n2" <http://example.org/course/ZZHCI> .
_:Ne53291c837f44b7196586422df2be79a <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Human_Computer_Interaction_HCI/HCI-Evaluation_Evaluating_the_Design.txt> <http://example.org/course/ZZHCI> .
_:Ne53291c837f44b7196586422df2be79a <http://example.org/has_chunk> "HCI-Evaluation: Evaluating the Design\nCS Core:\n1. Methods for evaluation with users\na. Formative (e.g., needs-finding, exploratory analysis) and summative assessment (e.g.,\nfunctionality and usability testing)\nb. Elements to evaluate (e.g., utility, efficiency, learnability, user satisfaction, affective elements\nsuch as pleasure and engagement)\nc" <http://example.org/course/ZZHCI> .
<http://example.org/course/ZZHCI> <http://example.org/is_aligned_with> _:Ne53291c837f44b7196586422df2be79a <http://example.org/course/ZZHCI> .
<http://example.org/course/ZZHCI> <http://example.org/is_aligned_with> _:N5ec8cf10ef2f49979a965bfb41c6dd04 <http://example.org/course/ZZHCI> .
_:N5ec8cf10ef2f49979a965bfb41c6dd04 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Human_Computer_Interaction_HCI/HCI-User_Understanding_the_User_Individual_goals_and_interactions_with_others.txt> <http://example.org/course/ZZHCI> .
_:N5ec8cf10ef2f49979a965bfb41c6dd04 <http://example.org/has_score> "0.7870718"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZHCI> .
_:Ne53291c837f44b7196586422df2be79a <http://example.org/has_score> "0.7821639"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZHCI> .
<http://example.org/course/ZZHCI> <http://example.org/is_aligned_with> _:N29dd306d5cb7411480fffc660c5a7c25 <http://example.org/course/ZZHCI> .
_:N2032b53c2e5d4f4296783a26f0ee39f0 <http://example.org/has_score> "0.7314503"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA010> .
_:N2032b53c2e5d4f4296783a26f0ee39f0 <http://example.org/has_chunk> ". Layering principles (e.g., encapsulation and hourglass model) (See also: SF-Foundations)\n6. Network elements (e.g., routers, switches, hubs, access points, and hosts)\n7. Basic queueing concepts (e.g., relationship with latency, congestion, service levels, etc.)\nIllustrative Learning Outcomes:\nCS Core:\n1. Articulate the organization of the internet.\n2. List and define the appropriate network terminology\n3. Describe the layered structure of a typical networked architecture.\n4" <http://example.org/course/X3IA010> .
_:N2032b53c2e5d4f4296783a26f0ee39f0 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Networking_and_Communication_NC/NC-Fundamentals_Fundamentals.txt> <http://example.org/course/X3IA010> .
<http://example.org/course/X3IA010> <http://example.org/is_aligned_with> _:N2032b53c2e5d4f4296783a26f0ee39f0 <http://example.org/course/X3IA010> .
_:N47e12b18d78a499b82e3f62b7e64377f <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Software_Architecture.txt> <http://example.org/course/X3IA010> .
<http://example.org/course/X3IA010> <http://example.org/is_aligned_with> _:N0d0d2db6cfa746398626ac18bedea66c <http://example.org/course/X3IA010> .
_:N0d0d2db6cfa746398626ac18bedea66c <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://example.org/course/X3IA010> .
_:N0d0d2db6cfa746398626ac18bedea66c <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://example.org/course/X3IA010> .
_:N47e12b18d78a499b82e3f62b7e64377f <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Software Architecture: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Software Architecture.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X3IA010> .
_:N47e12b18d78a499b82e3f62b7e64377f <http://example.org/has_score> "0.71363306"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA010> .
_:N0d0d2db6cfa746398626ac18bedea66c <http://example.org/has_score> "0.7126451"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA010> .
<http://example.org/course/X3IA010> <http://example.org/is_aligned_with> _:N47e12b18d78a499b82e3f62b7e64377f <http://example.org/course/X3IA010> .
<http://example.org/course/X3IA050> <http://example.org/is_aligned_with> _:N44bd125d93364a5e8e83a0411dd45cab <http://example.org/course/X3IA050> .
_:Nef1a74bb91c24fc1b8009b8b95c24acc <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-3D_Modeling.txt> <http://example.org/course/X3IA050> .
_:N44bd125d93364a5e8e83a0411dd45cab <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X3IA050> .
_:Nef1a74bb91c24fc1b8009b8b95c24acc <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nGIT-3D Modeling: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of GIT-3D Modeling.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X3IA050> .
_:Nef1a74bb91c24fc1b8009b8b95c24acc <http://example.org/has_score> "0.698009"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA050> .
_:Ncfd3f95422f643df8555bf4802d99c2d <http://example.org/has_score> "0.7212336"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA050> .
_:N44bd125d93364a5e8e83a0411dd45cab <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://example.org/course/X3IA050> .
_:Ncfd3f95422f643df8555bf4802d99c2d <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Project Management: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Project Management.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X3IA050> .
_:Ncfd3f95422f643df8555bf4802d99c2d <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Project_Management.txt> <http://example.org/course/X3IA050> .
<http://example.org/course/X3IA050> <http://example.org/is_aligned_with> _:Nef1a74bb91c24fc1b8009b8b95c24acc <http://example.org/course/X3IA050> .
_:N44bd125d93364a5e8e83a0411dd45cab <http://example.org/has_score> "0.69889396"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA050> .
<http://example.org/course/X3IA050> <http://example.org/is_aligned_with> _:Ncfd3f95422f643df8555bf4802d99c2d <http://example.org/course/X3IA050> .
<http://example.org/course/X1MS010> <http://example.org/is_aligned_with> _:N7bd69e297d424688954ccd9cbb2211db <http://example.org/course/X1MS010> .
<http://example.org/course/X1MS010> <http://example.org/is_aligned_with> _:N4a3a1304716b42f4b827657d4839e5fa <http://example.org/course/X1MS010> .
_:N7bd69e297d424688954ccd9cbb2211db <http://example.org/has_chunk> "AI-KRR: Fundamental Knowledge Representation and Reasoning\nCS Core:\n1. Types of representations\na. Symbolic, logical\ni. Creating a representation from a natural language problem statement\nb. Learned subsymbolic representations\nc. Graphical models (e.g., naive Bayes, Bayesian network)\n2. Review of probabilistic reasoning, Bayes theorem (See also: MSF-Probability)\n3. Bayesian reasoning\na. Bayesian inference\nKA Core:\n4. Random variables and probability distributions\na. Axioms of probability\nb" <http://example.org/course/X1MS010> .
<http://example.org/course/X1MS010> <http://example.org/is_aligned_with> _:N8443a4e0740b4de89e37938e471f6621 <http://example.org/course/X1MS010> .
_:N4a3a1304716b42f4b827657d4839e5fa <http://example.org/has_chunk> ".\n2. Implement context-sensitive, source-level static analyses such as type-checkers or resolving\nidentifiers to identify their binding occurrences.\n3. Describe semantic analyses using an attribute grammar." <http://example.org/course/X1MS010> .
_:N4a3a1304716b42f4b827657d4839e5fa <http://example.org/has_score> "0.6885472"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1MS010> .
_:N7bd69e297d424688954ccd9cbb2211db <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-KRR_Fundamental_Knowledge_Representation_and_Reasoning.txt> <http://example.org/course/X1MS010> .
_:N8443a4e0740b4de89e37938e471f6621 <http://example.org/has_score> "0.6890582"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1MS010> .
_:N4a3a1304716b42f4b827657d4839e5fa <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Semantics_Compiler_Semantic_Analysis.txt> <http://example.org/course/X1MS010> .
_:N8443a4e0740b4de89e37938e471f6621 <http://example.org/has_chunk> ". Parametricity\nIllustrative learning outcomes:\nNon-core:\n1. Construct formal semantics for a small language.\n2. Write a lambda-calculus program and show its evaluation to a normal form.\n3. Discuss the different approaches of operational, denotational, and axiomatic semantics.\n4. Use induction to prove properties of all programs in a language.\n5. Use induction to prove properties of all programs in a language that is well-typed according to a\nformally defined type system.\n6" <http://example.org/course/X1MS010> .
_:N7bd69e297d424688954ccd9cbb2211db <http://example.org/has_score> "0.6952332"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1MS010> .
_:N8443a4e0740b4de89e37938e471f6621 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Formalism_Formal_Semantics.txt> <http://example.org/course/X1MS010> .
_:N977e507c1b7c455d84b752e735197788 <http://example.org/has_chunk> ". K-means\nb. Gaussian mixture models\nc. Expectation maximization (EM)\nd. Self-organizing maps\n25. Graph analysis (e.g., PageRank)\n26. Semi-supervised learning\n27. Graphical models (See also: AI-Probability)\n28. Ensembles\na. Weighted majority\nb. Boosting/bagging\nc. Random forest\nd. Gated ensemble\n29. Learning theory\na. General overview of learning theory / why learning works\nb. VC dimension\nc. Generalization bounds\n74\n30. Reinforcement learning\na. Exploration vs exploitation tradeoff\nb" <http://example.org/course/X3IT040> .
_:Nfaadd019327c40a3ba3cfb0d44fbe2ad <http://example.org/has_score> "0.728691"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT040> .
_:Nfaadd019327c40a3ba3cfb0d44fbe2ad <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-KRR_Fundamental_Knowledge_Representation_and_Reasoning.txt> <http://example.org/course/X3IT040> .
_:Nfaadd019327c40a3ba3cfb0d44fbe2ad <http://example.org/has_chunk> "AI-KRR: Fundamental Knowledge Representation and Reasoning\nCS Core:\n1. Types of representations\na. Symbolic, logical\ni. Creating a representation from a natural language problem statement\nb. Learned subsymbolic representations\nc. Graphical models (e.g., naive Bayes, Bayesian network)\n2. Review of probabilistic reasoning, Bayes theorem (See also: MSF-Probability)\n3. Bayesian reasoning\na. Bayesian inference\nKA Core:\n4. Random variables and probability distributions\na. Axioms of probability\nb" <http://example.org/course/X3IT040> .
<http://example.org/course/X3IT040> <http://example.org/is_aligned_with> _:Nfaadd019327c40a3ba3cfb0d44fbe2ad <http://example.org/course/X3IT040> .
<http://example.org/course/X3IT040> <http://example.org/is_aligned_with> _:N2f965c41f9fc4cec93390b499da31e84 <http://example.org/course/X3IT040> .
_:N2f965c41f9fc4cec93390b499da31e84 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-NLP_Natural_Language_Processing.txt> <http://example.org/course/X3IT040> .
_:N2f965c41f9fc4cec93390b499da31e84 <http://example.org/has_chunk> ". Define and contrast deterministic and stochastic grammars, providing examples to show the\nadequacy of each.\n2. Simulate, apply, or implement classic and stochastic algorithms for parsing natural language.\n3. Identify the challenges of representing meaning.\n4. List the advantages of using standard corpora. Identify examples of current corpora for a variety of\nNLP tasks.\n5. Identify techniques for information retrieval, language translation, and text classification.\n6" <http://example.org/course/X3IT040> .
_:N2f965c41f9fc4cec93390b499da31e84 <http://example.org/has_score> "0.7497104"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT040> .
_:N977e507c1b7c455d84b752e735197788 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/X3IT040> .
<http://example.org/course/X3IT040> <http://example.org/is_aligned_with> _:N977e507c1b7c455d84b752e735197788 <http://example.org/course/X3IT040> .
_:N977e507c1b7c455d84b752e735197788 <http://example.org/has_score> "0.7292896"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT040> .
_:N2e650d6bbf534877bd4accf7275e1fbb <http://example.org/has_score> "0.6631908"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO070> .
_:N2e650d6bbf534877bd4accf7275e1fbb <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Networking_and_Communication_NC/NC-Fundamentals_Fundamentals.txt> <http://example.org/course/X3IO070> .
<http://example.org/course/X3IO070> <http://example.org/is_aligned_with> _:N2e650d6bbf534877bd4accf7275e1fbb <http://example.org/course/X3IO070> .
_:N822c8df4b97a4535a25bc8dc5d427ab9 <http://example.org/has_chunk> ". Asynchronous group communication (e.g., email, forums, social networks)\nd. Social media, social computing, and social network analysis\ne. Online collaboration\nf. Social coordination and online communities\ng. Avatars, characters, and virtual worlds\nNon-core:\n6. Multi-user systems\nIllustrative Learning Outcomes:\nCS Core:\n1. Conduct a user-centered design process that is integrated into a project.\nKA Core:\n2. Compare and contrast the needs of users with those of designers.\n3" <http://example.org/course/X3IO070> .
_:Nc59bca1a6b0943d084c2f805a3c4d8a3 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X3IO070> .
_:Nc59bca1a6b0943d084c2f805a3c4d8a3 <http://example.org/has_score> "0.65009815"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO070> .
_:N822c8df4b97a4535a25bc8dc5d427ab9 <http://example.org/has_score> "0.6503103"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO070> .
<http://example.org/course/X3IO070> <http://example.org/is_aligned_with> _:Nc59bca1a6b0943d084c2f805a3c4d8a3 <http://example.org/course/X3IO070> .
_:Nc59bca1a6b0943d084c2f805a3c4d8a3 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://example.org/course/X3IO070> .
_:N822c8df4b97a4535a25bc8dc5d427ab9 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Human_Computer_Interaction_HCI/HCI-User_Understanding_the_User_Individual_goals_and_interactions_with_others.txt> <http://example.org/course/X3IO070> .
_:N2e650d6bbf534877bd4accf7275e1fbb <http://example.org/has_chunk> ". Layering principles (e.g., encapsulation and hourglass model) (See also: SF-Foundations)\n6. Network elements (e.g., routers, switches, hubs, access points, and hosts)\n7. Basic queueing concepts (e.g., relationship with latency, congestion, service levels, etc.)\nIllustrative Learning Outcomes:\nCS Core:\n1. Articulate the organization of the internet.\n2. List and define the appropriate network terminology\n3. Describe the layered structure of a typical networked architecture.\n4" <http://example.org/course/X3IO070> .
<http://example.org/course/X3IO070> <http://example.org/is_aligned_with> _:N822c8df4b97a4535a25bc8dc5d427ab9 <http://example.org/course/X3IO070> .
_:N98100e0905c4414aac6bf9848e5e1316 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-Fundamentals.txt> <http://example.org/course/ZZ3CG> .
_:N98100e0905c4414aac6bf9848e5e1316 <http://example.org/has_score> "0.7664623"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZ3CG> .
_:N83ddd525aa9f4606ab69a9e46a22e122 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-Animation_and_Simulation.txt> <http://example.org/course/ZZ3CG> .
_:N1d2e8a97c82549d78f7472e7454320e8 <http://example.org/has_chunk> "Pages: 150-151\nHOURS\n    CS Core = 3\n    KA Core = 2\n\nGIT-Fundamentals: Fundamental Concepts\nCS Core:\n1. Overview of graphics and visualization.\n2. Basic graphics pipeline architecture.\n3. 2D and 3D transformations.\n4. Rasterization and rendering techniques.\n5. Fundamental shading models.\n\nKA Core:\n6. Advanced rendering techniques.\n7. Applications of visualization in different fields.\n8. Interaction methods for graphical environments." <http://example.org/course/ZZ3CG> .
_:N83ddd525aa9f4606ab69a9e46a22e122 <http://example.org/has_score> "0.7256892"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZ3CG> .
<http://example.org/course/ZZ3CG> <http://example.org/is_aligned_with> _:N1d2e8a97c82549d78f7472e7454320e8 <http://example.org/course/ZZ3CG> .
_:N83ddd525aa9f4606ab69a9e46a22e122 <http://example.org/has_chunk> "Illustrative Learning Outcomes:\n1. Apply keyframe animation techniques to an interactive application.\n2. Differentiate between procedural and AI-driven animation.\n3. Understand the role of physics in real-time simulations." <http://example.org/course/ZZ3CG> .
_:N1d2e8a97c82549d78f7472e7454320e8 <http://example.org/has_score> "0.7307925"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZ3CG> .
_:N1d2e8a97c82549d78f7472e7454320e8 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-Fundamentals.txt> <http://example.org/course/ZZ3CG> .
<http://example.org/course/ZZ3CG> <http://example.org/is_aligned_with> _:N98100e0905c4414aac6bf9848e5e1316 <http://example.org/course/ZZ3CG> .
_:N98100e0905c4414aac6bf9848e5e1316 <http://example.org/has_chunk> "Illustrative Learning Outcomes:\n1. Explain the graphics rendering pipeline.\n2. Differentiate between rasterization and ray tracing.\n3. Apply transformations to 2D and 3D models." <http://example.org/course/ZZ3CG> .
<http://example.org/course/ZZ3CG> <http://example.org/is_aligned_with> _:N83ddd525aa9f4606ab69a9e46a22e122 <http://example.org/course/ZZ3CG> .
_:N4e16b16cd77a442aa49e79cdd104fd4d <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/ZZCAAI> .
<http://example.org/course/ZZCAAI> <http://example.org/is_aligned_with> _:N4e16b16cd77a442aa49e79cdd104fd4d <http://example.org/course/ZZCAAI> .
_:N56c5b2bcb14b498aab1c6d2afe8b2983 <http://example.org/has_score> "0.71333337"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZCAAI> .
_:Na4133763a3e54c45aec0646c59cbe3dd <http://example.org/has_score> "0.7384907"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZCAAI> .
_:N4e16b16cd77a442aa49e79cdd104fd4d <http://example.org/has_score> "0.7541663"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZCAAI> .
<http://example.org/course/ZZCAAI> <http://example.org/is_aligned_with> _:N56c5b2bcb14b498aab1c6d2afe8b2983 <http://example.org/course/ZZCAAI> .
_:Na4133763a3e54c45aec0646c59cbe3dd <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/ZZCAAI> .
<http://example.org/course/ZZCAAI> <http://example.org/is_aligned_with> _:Na4133763a3e54c45aec0646c59cbe3dd <http://example.org/course/ZZCAAI> .
_:Na4133763a3e54c45aec0646c59cbe3dd <http://example.org/has_chunk> ".\n4. Apply two or more simple statistical learning algorithms to a classification task and measure the\nclassifiers’ accuracy.\n5. Identify overfitting in the context of a problem and learning curves and describe solutions to\noverfitting.\n6. Explain how machine learning works as an optimization/search process.\n7. Implement a statistical learning algorithm and the corresponding optimization process to train the\nclassifier and obtain a prediction on new data.\n8" <http://example.org/course/ZZCAAI> .
_:N4e16b16cd77a442aa49e79cdd104fd4d <http://example.org/has_chunk> ". K-means\nb. Gaussian mixture models\nc. Expectation maximization (EM)\nd. Self-organizing maps\n25. Graph analysis (e.g., PageRank)\n26. Semi-supervised learning\n27. Graphical models (See also: AI-Probability)\n28. Ensembles\na. Weighted majority\nb. Boosting/bagging\nc. Random forest\nd. Gated ensemble\n29. Learning theory\na. General overview of learning theory / why learning works\nb. VC dimension\nc. Generalization bounds\n74\n30. Reinforcement learning\na. Exploration vs exploitation tradeoff\nb" <http://example.org/course/ZZCAAI> .
_:N56c5b2bcb14b498aab1c6d2afe8b2983 <http://example.org/has_chunk> ". Describe the differences among the three main styles of learning (supervised, reinforcement, and\nunsupervised) and determine which is appropriate to a particular problem domain.\n2. Differentiate the terms of AI, machine learning, and deep learning.\n3. Frame an application as a classification problem, including the available input features and output\nto be predicted (e.g., identifying alphabetic characters from pixel grid input).\n4" <http://example.org/course/ZZCAAI> .
_:N56c5b2bcb14b498aab1c6d2afe8b2983 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/ZZCAAI> .
_:Nc6f0ac7fdcf64b6286746a61cc6110ed <http://example.org/has_score> "0.6389407"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZFLAEC> .
_:Nb4da6d49806d48d2bb57d9d37dc4c608 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Pragmatics_Language_Pragmatics.txt> <http://example.org/course/ZZFLAEC> .
_:Nc6f0ac7fdcf64b6286746a61cc6110ed <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-SEP_Society_Ethics_and_the_Profession.txt> <http://example.org/course/ZZFLAEC> .
_:Nc6f0ac7fdcf64b6286746a61cc6110ed <http://example.org/has_chunk> "FPL-SEP: Society, Ethics, and the Profession\nNon-core:\n1. Impact of English-centric programming languages\n2. Enhancing accessibility and inclusivity for people with disabilities – Supporting assistive\ntechnologies\n3. Human factors related to programming languages and usability\na. Impact of syntax on accessibility\nb. Supporting cultural differences (e.g., currency, decimals, dates)\nc. Neurodiversity\n4. Etymology of terms such as “class,” “master,” and “slave” in programming languages\n5" <http://example.org/course/ZZFLAEC> .
<http://example.org/course/ZZFLAEC> <http://example.org/is_aligned_with> _:Nb4da6d49806d48d2bb57d9d37dc4c608 <http://example.org/course/ZZFLAEC> .
<http://example.org/course/ZZFLAEC> <http://example.org/is_aligned_with> _:N63df95b2aff64a0491538322c92d97d6 <http://example.org/course/ZZFLAEC> .
_:N63df95b2aff64a0491538322c92d97d6 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Society_Ethics_and_the_Profession_SEP/SEP-Communication.txt> <http://example.org/course/ZZFLAEC> .
_:N63df95b2aff64a0491538322c92d97d6 <http://example.org/has_score> "0.6379243"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZFLAEC> .
_:N63df95b2aff64a0491538322c92d97d6 <http://example.org/has_chunk> ". Cultural competence in communication including considering the impact of difference in natural language \n \nKA Core: \n7. Tradeoffs in competing factors that affect communication channels and choices \n8. Communicating to solve problems or make recommendations in the workplace, such as raising ethical concerns or addressing accessibility issues \n \nIllustrative Learning Outcomes: \nCS Core: \n1" <http://example.org/course/ZZFLAEC> .
<http://example.org/course/ZZFLAEC> <http://example.org/is_aligned_with> _:Nc6f0ac7fdcf64b6286746a61cc6110ed <http://example.org/course/ZZFLAEC> .
_:Nb4da6d49806d48d2bb57d9d37dc4c608 <http://example.org/has_score> "0.66048753"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZFLAEC> .
_:Nb4da6d49806d48d2bb57d9d37dc4c608 <http://example.org/has_chunk> "FPL-Pragmatics: Language Pragmatics\nNon-core:\n1. Effect of technology needs and software requirements on programming language development and\nevolution\n2. Problem domains and programming paradigm\n3. Criteria for good programming language design\na. Principles of language design such as orthogonality\nb. Defining control and iteration constructs\nc. Modularization of large software\n4. Evaluation order, precedence, and associativity\n5. Eager vs delayed evaluation\n6. Defining control and iteration constructs\n7" <http://example.org/course/ZZFLAEC> .
<http://example.org/course/X3IO010> <http://example.org/is_aligned_with> _:Nddcba23f3e2049d285d9d18e1c957e8a <http://example.org/course/X3IO010> .
_:Nddcba23f3e2049d285d9d18e1c957e8a <http://example.org/has_score> "0.61691463"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO010> .
<http://example.org/course/X3IO010> <http://example.org/is_aligned_with> _:N4db3017993b74ec3957d2e23554d3a7d <http://example.org/course/X3IO010> .
_:Nf065df5ba5ba4d2b8f8453526fa77641 <http://example.org/has_chunk> ". Practice identifying problem characteristics in example environments\n8. Additional depth on nature of agents with examples\n9. Additional depth on AI Applications, Growth, and Impact (economic, societal, ethics, security)\nNon-core:\n10. Philosophical issues\n11. History of AI\nIllustrative Learning Outcomes:\n1. Describe the Turing test and the “Chinese Room” thought experiment.\n2. Differentiate between optimal reasoning/behavior and human-like reasoning/behavior.\n3" <http://example.org/course/X3IO010> .
<http://example.org/course/X3IO010> <http://example.org/is_aligned_with> _:Nf065df5ba5ba4d2b8f8453526fa77641 <http://example.org/course/X3IO010> .
_:N4db3017993b74ec3957d2e23554d3a7d <http://example.org/has_chunk> ". Develop algorithmic solutions to real-world societal problems, such as routing an ambulance to a\nhospital.\n2. Explain the impact that an algorithm may have on the environment and society when used to solve\na real-world problem while considering its sustainability and that it can affect different societal\ngroups in different ways.\n3. Prepare a presentation that justifies the selection of appropriate data structures and/or algorithms to\nsolve a given real-world problem.\n4" <http://example.org/course/X3IO010> .
_:N4db3017993b74ec3957d2e23554d3a7d <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-SEP_Society_Ethics_and_the_Profession.txt> <http://example.org/course/X3IO010> .
_:Nddcba23f3e2049d285d9d18e1c957e8a <http://example.org/has_chunk> ". (See also: GIT-Rendering) \nc. Common Contexts for Algorithms, Data Structures, and Mathematical Functions (e.g., game loops; spatial partitioning, viewport culling, and level of detail; collision detection and resolution; physical simulation; behavior for intelligent agents; procedural content generation) (See also: MSF-Discrete, AL-Foundational) \nd. Media representations (e.g., I/O, and computation techniques for virtual worlds: audio; music; sprites; models and textures; text; dialogue; multimedia (e.g" <http://example.org/course/X3IO010> .
_:Nf065df5ba5ba4d2b8f8453526fa77641 <http://example.org/has_score> "0.6164164"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO010> .
_:Nf065df5ba5ba4d2b8f8453526fa77641 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-Introduction_Fundamental_Issues.txt> <http://example.org/course/X3IO010> .
_:N4db3017993b74ec3957d2e23554d3a7d <http://example.org/has_score> "0.61460614"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO010> .
_:Nddcba23f3e2049d285d9d18e1c957e8a <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Game_Platforms.txt> <http://example.org/course/X3IO010> .
<http://example.org/course/X1LI010> <http://example.org/is_aligned_with> _:N4b2e77b81f514273a91aff1fca3d3c1b <http://example.org/course/X1LI010> .
_:N956c1b263b7a41ebac159565ff8f84e0 <http://example.org/has_score> "0.66306984"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1LI010> .
_:N956c1b263b7a41ebac159565ff8f84e0 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Project Management: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Project Management.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X1LI010> .
_:N4b2e77b81f514273a91aff1fca3d3c1b <http://example.org/has_score> "0.63775575"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1LI010> .
_:N4b2e77b81f514273a91aff1fca3d3c1b <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Maintenance_and_Evolution.txt> <http://example.org/course/X1LI010> .
<http://example.org/course/X1LI010> <http://example.org/is_aligned_with> _:N956c1b263b7a41ebac159565ff8f84e0 <http://example.org/course/X1LI010> .
_:N6f32b257f55f41f39afb708a4d0845db <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Requirements_Engineering.txt> <http://example.org/course/X1LI010> .
_:N6f32b257f55f41f39afb708a4d0845db <http://example.org/has_score> "0.63213265"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1LI010> .
_:N956c1b263b7a41ebac159565ff8f84e0 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Project_Management.txt> <http://example.org/course/X1LI010> .
<http://example.org/course/X1LI010> <http://example.org/is_aligned_with> _:N6f32b257f55f41f39afb708a4d0845db <http://example.org/course/X1LI010> .
_:N4b2e77b81f514273a91aff1fca3d3c1b <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Maintenance and Evolution: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Maintenance and Evolution.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X1LI010> .
_:N6f32b257f55f41f39afb708a4d0845db <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Requirements Engineering: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Requirements Engineering.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X1LI010> .
_:N681254f24c0f45cdaa606765b44b7825 <http://example.org/has_score> "0.70877886"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA060> .
_:N10fc8f66455a4fb496cc15a2928a45b3 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Web_Platforms.txt> <http://example.org/course/X3IA060> .
<http://example.org/course/X3IA060> <http://example.org/is_aligned_with> _:N934ca6fc4f6a4e39b112f016792684ba <http://example.org/course/X3IA060> .
_:N934ca6fc4f6a4e39b112f016792684ba <http://example.org/has_score> "0.69107187"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA060> .
<http://example.org/course/X3IA060> <http://example.org/is_aligned_with> _:N681254f24c0f45cdaa606765b44b7825 <http://example.org/course/X3IA060> .
_:N934ca6fc4f6a4e39b112f016792684ba <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Web_Platforms.txt> <http://example.org/course/X3IA060> .
<http://example.org/course/X3IA060> <http://example.org/is_aligned_with> _:N10fc8f66455a4fb496cc15a2928a45b3 <http://example.org/course/X3IA060> .
_:N681254f24c0f45cdaa606765b44b7825 <http://example.org/has_chunk> ". Layering principles (e.g., encapsulation and hourglass model) (See also: SF-Foundations)\n6. Network elements (e.g., routers, switches, hubs, access points, and hosts)\n7. Basic queueing concepts (e.g., relationship with latency, congestion, service levels, etc.)\nIllustrative Learning Outcomes:\nCS Core:\n1. Articulate the organization of the internet.\n2. List and define the appropriate network terminology\n3. Describe the layered structure of a typical networked architecture.\n4" <http://example.org/course/X3IA060> .
_:N10fc8f66455a4fb496cc15a2928a45b3 <http://example.org/has_chunk> "KA Core: \n1. Web programming languages (e.g., HTML5, JavaScript, PHP, CSS) \n2. Web platforms, frameworks, or meta-frameworks \na. Cloud services \nb. API, Web Components \n3. Software as a Service (SaaS) \n4. Web standards such as document object model, accessibility (See also: HCI-Accessibility) \n5. Security and Privacy Considerations (See also: SEP-Security) \n \nNon-core:  \n6. Analyzing requirements for web applications \n7. Computing services (See also: DM-NoSQL) \na. Cloud Hosting \nb. Scalability (e.g" <http://example.org/course/X3IA060> .
_:N10fc8f66455a4fb496cc15a2928a45b3 <http://example.org/has_score> "0.6918624"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA060> .
_:N934ca6fc4f6a4e39b112f016792684ba <http://example.org/has_chunk> ". Serverless, cloud computing on demand \n10. Storage solutions (See also: DM-Relational, DM-NoSQL) \na. Relational Databases \nb. NoSQL databases \n \nIllustrative Learning Outcomes: \nKA Core: \n1. Design and implement a web-based application using a microservice architecture design. \n2. Describe the constraints, such as hosting, services, and scalability, related to web platforms. \n3. Compare and contrast web programming with general-purpose programming.  \n4" <http://example.org/course/X3IA060> .
_:N681254f24c0f45cdaa606765b44b7825 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Networking_and_Communication_NC/NC-Fundamentals_Fundamentals.txt> <http://example.org/course/X3IA060> .
_:N9b26c1466ace494aa75d4c954d7b2540 <http://example.org/has_score> "0.59978265"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X4II030> .
<http://example.org/course/X4II030> <http://example.org/is_aligned_with> _:N9b26c1466ace494aa75d4c954d7b2540 <http://example.org/course/X4II030> .
<http://example.org/course/X4II030> <http://example.org/is_aligned_with> _:N1986a541bf6741c0b3f113f38440dd87 <http://example.org/course/X4II030> .
<http://example.org/course/X4II030> <http://example.org/is_aligned_with> _:N3126ed60061e4a4e9cfde57ddab3782f <http://example.org/course/X4II030> .
_:N9b26c1466ace494aa75d4c954d7b2540 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-Augmented_Reality.txt> <http://example.org/course/X4II030> .
_:N1986a541bf6741c0b3f113f38440dd87 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://example.org/course/X4II030> .
_:N1986a541bf6741c0b3f113f38440dd87 <http://example.org/has_score> "0.6092292"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X4II030> .
_:N3126ed60061e4a4e9cfde57ddab3782f <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://example.org/course/X4II030> .
_:N3126ed60061e4a4e9cfde57ddab3782f <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://example.org/course/X4II030> .
_:N3126ed60061e4a4e9cfde57ddab3782f <http://example.org/has_score> "0.6007087"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X4II030> .
_:N9b26c1466ace494aa75d4c954d7b2540 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nGIT-Augmented Reality: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of GIT-Augmented Reality.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X4II030> .
_:N1986a541bf6741c0b3f113f38440dd87 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X4II030> .
_:N35be140991904c2591e3b96743e2a53f <http://example.org/has_score> "0.70761895"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2MC050> .
_:N6ef356a7290b4f668f78adad3fd6be53 <http://example.org/has_score> "0.7072661"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2MC050> .
_:Ne4c7b87958154721aaab1e673efbb838 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Calculus.txt> <http://example.org/course/X2MC050> .
<http://example.org/course/X2MC050> <http://example.org/is_aligned_with> _:N6ef356a7290b4f668f78adad3fd6be53 <http://example.org/course/X2MC050> .
_:N6ef356a7290b4f668f78adad3fd6be53 <http://example.org/has_chunk> ". CS applications: gradient descent for machine learning, forward and inverse kinematics,\napplications of calculus to probability\nNote: the calculus topics listed above are aligned with computer science goals rather than with\ntraditional calculus courses. For example, multivariate calculus is often a course by itself, but computer\nscience undergraduates only need parts of it for machine learning.\nIllustrative Learning Outcomes:\nKA Core:\n1. Sequences, series, limits\na" <http://example.org/course/X2MC050> .
<http://example.org/course/X2MC050> <http://example.org/is_aligned_with> _:N35be140991904c2591e3b96743e2a53f <http://example.org/course/X2MC050> .
<http://example.org/course/X2MC050> <http://example.org/is_aligned_with> _:Ne4c7b87958154721aaab1e673efbb838 <http://example.org/course/X2MC050> .
_:Ne4c7b87958154721aaab1e673efbb838 <http://example.org/has_chunk> ".\nb. Apply the Taylor series to approximations.\n6. Multivariate calculus: partial derivatives, gradient, chain-rule, vector valued functions, applications\nto optimization, convexity, global vs local minima.\na. Compute partial derivatives and gradients.\nb. Work through examples with vector-valued functions with gradient notation.\nc. Explain applications to optimization.\n7. ODEs: definition, Euler method, applications to simulation\na. Apply the Euler method to integration.\nb" <http://example.org/course/X2MC050> .
_:N35be140991904c2591e3b96743e2a53f <http://example.org/has_chunk> ". Taylor series\n6. Multivariate calculus: partial derivatives, gradient, chain-rule, vector valued functions,\n7. Optimization: convexity, global vs local minima, gradient descent, constrained optimization, and\nLagrange multipliers.\n8. Ordinary Differential Equations (ODEs): definition, Euler method, applications to simulation, Monte\nCarlo integration\n9" <http://example.org/course/X2MC050> .
_:N6ef356a7290b4f668f78adad3fd6be53 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Calculus.txt> <http://example.org/course/X2MC050> .
_:N35be140991904c2591e3b96743e2a53f <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Calculus.txt> <http://example.org/course/X2MC050> .
_:Ne4c7b87958154721aaab1e673efbb838 <http://example.org/has_score> "0.70682025"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2MC050> .
<http://example.org/course/X1I1020> <http://example.org/is_aligned_with> _:N3c5ae515bcb744758721860a3f11cd65 <http://example.org/course/X1I1020> .
_:Nc129e9b655654c74be6d8ac266419012 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Development_Fundamentals_SDF/SDF-Software_Development_Practices.txt> <http://example.org/course/X1I1020> .
<http://example.org/course/X1I1020> <http://example.org/is_aligned_with> _:Nc129e9b655654c74be6d8ac266419012 <http://example.org/course/X1I1020> .
_:Nb3761dd6d43c4e7ca7e46d6368e19486 <http://example.org/has_chunk> "Illustrative Learning Outcomes:\n1. Differentiate between various software development models.\n2. Apply software testing techniques to ensure quality assurance.\n3. Explain the role of version control in team-based software development." <http://example.org/course/X1I1020> .
_:N3c5ae515bcb744758721860a3f11cd65 <http://example.org/has_chunk> ".\n6. Formal modeling and manual refinement/implementation of software systems.\n7. Use of symbolic testing and fuzzing in software development.\n8. Model checking.\n9. Understanding of situations where formal methods can be effectively applied and how to structure\ndevelopment to maximize their value.\nIllustrative learning outcomes:\nNon-core:\n1. Use formal modeling techniques to develop and validate architectures.\n2" <http://example.org/course/X1I1020> .
_:N3c5ae515bcb744758721860a3f11cd65 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Methodologies_Formal_Development_Methodologies.txt> <http://example.org/course/X1I1020> .
_:Nc129e9b655654c74be6d8ac266419012 <http://example.org/has_score> "0.75826716"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I1020> .
<http://example.org/course/X1I1020> <http://example.org/is_aligned_with> _:Nb3761dd6d43c4e7ca7e46d6368e19486 <http://example.org/course/X1I1020> .
_:Nb3761dd6d43c4e7ca7e46d6368e19486 <http://example.org/has_score> "0.7232136"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I1020> .
_:Nc129e9b655654c74be6d8ac266419012 <http://example.org/has_chunk> "Illustrative Learning Outcomes: \nCS Core: \n1. Develop tests for modules and apply a variety of strategies to design test cases. \n2. Explain some limitations of testing programs. \n3. Build, execute, and debug programs using a modern IDE and associated tools such as visual debuggers.   \n4. Apply basic programming style guidelines to aid readability of programs such as comments, indentation, proper naming of variables, etc. \n5. Write specifications of a module as module comment describing its functionality." <http://example.org/course/X1I1020> .
_:Nb3761dd6d43c4e7ca7e46d6368e19486 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Software_Development.txt> <http://example.org/course/X1I1020> .
_:N3c5ae515bcb744758721860a3f11cd65 <http://example.org/has_score> "0.71606433"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I1020> .
_:Neb7f2c9076dc470eb2c9b048831ebfae <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/ZZDELAE> .
_:Neb7f2c9076dc470eb2c9b048831ebfae <http://example.org/has_chunk> ". Medicine and health\nb. Economics\nc. Education\nd. Vision\ne. Natural language\nf. Robotics\ng. Game play\nh. Data mining (Cross-reference DM/Data Analytics)\n35. Ethics for Machine Learning\na. Continued focus on real data, real scenarios, and case studies (See also: SEP-Context)\nb. In depth exploration of dataset/algorithmic/evaluation bias, data privacy, and fairness (See also:\nSEP-Privacy, SEP-Context)\nc. Trust / explainability\nIllustrative Learning Outcomes:\n1" <http://example.org/course/ZZDELAE> .
_:N0c42f4ffe97b4b0da99a7184c5548b7d <http://example.org/has_score> "0.7803569"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZDELAE> .
_:Nc5970a72e5794569bd75a255a7277a10 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Society_Ethics_and_the_Profession_SEP/SEP-Privacy_and_Civil_Liberties.txt> <http://example.org/course/ZZDELAE> .
_:Nc5970a72e5794569bd75a255a7277a10 <http://example.org/has_score> "0.75342494"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZDELAE> .
<http://example.org/course/ZZDELAE> <http://example.org/is_aligned_with> _:N0c42f4ffe97b4b0da99a7184c5548b7d <http://example.org/course/ZZDELAE> .
_:Nc5970a72e5794569bd75a255a7277a10 <http://example.org/has_chunk> ". Freedom of expression and its limitations  \n10. User-generated content, content moderation, and liability \n \nIllustrative Learning Outcomes: \nCS Core: \n1. Evaluate solutions to privacy threats in transactional databases and data warehouses.  \n2. Describe the role of data collection in the implementation of pervasive surveillance systems (e.g., RFID, face recognition, toll collection, mobile computing).  \n3. Distinguish the concepts and goals of anonymity and pseudonymity. \n4" <http://example.org/course/ZZDELAE> .
_:N0c42f4ffe97b4b0da99a7184c5548b7d <http://example.org/has_chunk> ". Ethical concerns surrounding the attention economy and other economies of computing (e.g. informed consent, data collection, use of verbose legalese in user agreements) \n \nIllustrative Learning Outcomes: \nKA Core: \n1. Summarize the social effects of economic models (e.g., the knowledge and attention economies).  \n2. Describe the differences and similarities of competing strategies (e.g., subscription vs freemium vs free).  \n3. Discuss examples of digital divides. \n4" <http://example.org/course/ZZDELAE> .
<http://example.org/course/ZZDELAE> <http://example.org/is_aligned_with> _:Neb7f2c9076dc470eb2c9b048831ebfae <http://example.org/course/ZZDELAE> .
_:N0c42f4ffe97b4b0da99a7184c5548b7d <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Society_Ethics_and_the_Profession_SEP/SEP-Economies_of_Computing.txt> <http://example.org/course/ZZDELAE> .
_:Neb7f2c9076dc470eb2c9b048831ebfae <http://example.org/has_score> "0.76095927"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZDELAE> .
<http://example.org/course/ZZDELAE> <http://example.org/is_aligned_with> _:Nc5970a72e5794569bd75a255a7277a10 <http://example.org/course/ZZDELAE> .
<http://example.org/course/X1CI010> <http://example.org/is_aligned_with> _:N13a9c935f55d47f1a2ccfdc0f553b515 <http://example.org/course/X1CI010> .
_:N6fa2c00e8cd244cf8fceb8e7502703ae <http://example.org/has_score> "0.65238327"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1CI010> .
_:N6fa2c00e8cd244cf8fceb8e7502703ae <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Architecture_and_Organization_AR/AR-Representation_Machine-Level_Data_Representation.txt> <http://example.org/course/X1CI010> .
_:N6fa2c00e8cd244cf8fceb8e7502703ae <http://example.org/has_chunk> "AR-Representation: Machine-Level Data Representation\nCS Core:\n1. Overview and history of computer architecture (See also: SPD-Game)\n2. Bits, bytes, and words\n3. Unsigned, signed and two’s complement representations\n4. Numeric data representation and number bases\na. Fixed-point\nb. Floating-point\n5. Representation of non-numeric data\n6. Representation of records, arrays and UTF data types (See also: AL-Foundational)\nIllustrative Learning Outcomes:\nCS Core:\n1" <http://example.org/course/X1CI010> .
_:N13a9c935f55d47f1a2ccfdc0f553b515 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://example.org/course/X1CI010> .
<http://example.org/course/X1CI010> <http://example.org/is_aligned_with> _:N6fa2c00e8cd244cf8fceb8e7502703ae <http://example.org/course/X1CI010> .
<http://example.org/course/X1CI010> <http://example.org/is_aligned_with> _:Nfd2136da734a466b9963978c08f2a493 <http://example.org/course/X1CI010> .
_:N13a9c935f55d47f1a2ccfdc0f553b515 <http://example.org/has_score> "0.6591171"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1CI010> .
_:Nfd2136da734a466b9963978c08f2a493 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://example.org/course/X1CI010> .
_:Nfd2136da734a466b9963978c08f2a493 <http://example.org/has_score> "0.6635057"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1CI010> .
_:N13a9c935f55d47f1a2ccfdc0f553b515 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://example.org/course/X1CI010> .
_:Nfd2136da734a466b9963978c08f2a493 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X1CI010> .
_:Na0c9a5cb30c04edd9fd5e83eb06f7e79 <http://example.org/has_chunk> ".\n3. Explain side-effect using global and nonlocal variables and how to fix such programs.\n4. Explain how programs that process other programs treat the other programs as their input data.\n5. Describe a grammar and an abstract syntax tree for a small language.\n6. Describe the benefits of having program representations other than strings of source code.\n7. Implement a program to process some representation of code for some purpose, such as an\ninterpreter, an expression optimizer, or a documentation generator" <http://example.org/course/X2II030> .
_:N795f6c8839e24d26b07cdb752a8b26fd <http://example.org/has_chunk> ". Chomsky hierarchy (See also: AL-Models)\nb. Left-most/right-most derivation and ambiguity\nc. Grammar transformation\n7. Parser error recovery mechanisms\n8. Generating scanners and parsers from declarative specifications\nIllustrative learning outcomes:\nNon-core:\n1. Use formal grammars to specify the syntax of languages.\n2. Illustrate the role of lookahead tables in parsing.\n3. Use declarative tools to generate parsers and scanners.\n4" <http://example.org/course/X2II030> .
_:Na0c9a5cb30c04edd9fd5e83eb06f7e79 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Abstraction_Program_Abstraction_and_Representation.txt> <http://example.org/course/X2II030> .
_:N795f6c8839e24d26b07cdb752a8b26fd <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Syntax_Syntax_Analysis.txt> <http://example.org/course/X2II030> .
_:N873432bcf9ef4125b26d13a845ec2e1b <http://example.org/has_score> "0.6958748"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II030> .
<http://example.org/course/X2II030> <http://example.org/is_aligned_with> _:N795f6c8839e24d26b07cdb752a8b26fd <http://example.org/course/X2II030> .
_:N873432bcf9ef4125b26d13a845ec2e1b <http://example.org/has_chunk> ". Identify all essential steps for automatically converting source code into assembly or other low-level\nlanguages.\n2. Explain the low-level code necessary for calling functions/methods in modern languages.\n3. Discuss why separate compilation requires uniform calling conventions.\n4. Discuss why separate compilation limits optimization because of unknown effects of calls.\n5. Discuss opportunities for optimization introduced by naive translation and approaches for achieving" <http://example.org/course/X2II030> .
_:N795f6c8839e24d26b07cdb752a8b26fd <http://example.org/has_score> "0.6910598"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II030> .
<http://example.org/course/X2II030> <http://example.org/is_aligned_with> _:Na0c9a5cb30c04edd9fd5e83eb06f7e79 <http://example.org/course/X2II030> .
<http://example.org/course/X2II030> <http://example.org/is_aligned_with> _:N873432bcf9ef4125b26d13a845ec2e1b <http://example.org/course/X2II030> .
_:Na0c9a5cb30c04edd9fd5e83eb06f7e79 <http://example.org/has_score> "0.71003294"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II030> .
_:N873432bcf9ef4125b26d13a845ec2e1b <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Code_Code_Generation.txt> <http://example.org/course/X2II030> .
<http://example.org/course/ZZAIAVP> <http://example.org/course/parcours> "VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II010> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II060> <http://www.w3.org/2000/01/rdf-schema#label> "Introduction à la recherche" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I2010> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2MC050> <http://example.org/course/content> "Optimisation déterministe :\nConvexité, différentiabilité, théorèmes d’existence d’un minimum (dimension finie et infinie) Optimisation sous contrainte : multiplicateurs de Lagrange, point-selle et dualité, conditions KKT Méthodes numériques :\n• Méthodes de Newton (rappel)\n• Méthodes de descente (pas constant, variable, optimal)\n- Application à la résolution de systèmes linéaires\n- Gradient conjugué\n• Problèmes avec contraintes : méthodes de descente et de pénalisation Optimisation stochastique :\n• Recherche aléatoire par méthodes de Monte-Carlo\n• Méthode de gradient stochastique\n• Recuit simulé\n• Algorithme Espérance/ Maximisation (EM), application au maximum de vraisemblance en présence de variables latentes non observées\nL’implémentation des méthodes d’optimisation vues en cours sera faite en langage Python." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT030> <http://example.org/course/parcours> "ATAL" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1MC060> <http://example.org/course/content> "Approximation\n• notions générales : familles d'approximation, erreur, meilleure approximation\n• approximation polynomiale, polynômes trigonométriques (FFT), introduction aux ondelettes\n• interpolation : Lagrange, Lagrange par morceaux, Hermite, splines\n• méthodes de moindres carrés, moindres carrés régularisés (bases radiales, lien avec l'interpolation...)\nAlgèbre linéaire numérique avancée\n• décomposition en valeurs singulières et pseudo-inverse\n• factorisation QR\n- principe et algorithme des méthodes de Householder et de Givens\n- application aux systèmes linéaires surdéterminés, moindres carrés" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZMC> <http://example.org/course/parcours> "VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/YG9U17-> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I2010> <http://www.w3.org/2000/01/rdf-schema#label> "Programmation par Contraintes" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I5010> <http://www.w3.org/2000/01/rdf-schema#label> "Probabilistic models" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO070> <http://example.org/course/parcours> "ORO,CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3ITM50> <http://www.w3.org/2000/01/rdf-schema#label> "Conférences et cours invités" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZPMASNA> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IOM20> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IOM10> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I2020> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZCRLADR> <http://www.w3.org/2000/01/rdf-schema#label> "Classification, representation learning and dimensionality reduction" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1MS010> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II090> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I2020> <http://www.w3.org/2000/01/rdf-schema#label> "Graphes II et Réseaux" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1040> <http://www.w3.org/2000/01/rdf-schema#label> "Web & Cloud and Datastores" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II040> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IOM30> <http://www.w3.org/2000/01/rdf-schema#label> "Transport et logistique" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3CI020> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3CI030> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA020> <http://www.w3.org/2000/01/rdf-schema#label> "Gestion des données distribuées à large échelle" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO010> <http://www.w3.org/2000/01/rdf-schema#label> "Métaheuristiques multiobjectif" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZIV> <http://www.w3.org/2000/01/rdf-schema#label> "Internship (VICO)" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT030> <http://www.w3.org/2000/01/rdf-schema#label> "Algorithmique et alignement de chaînes" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZPGMASRL> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZCAICD> <http://example.org/course/content> "This course is defined with regular short conferences with researcher or industrialist. The program is defined every year in accordance with the topical issues." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II100> <http://example.org/course/content> "L’objectif de cette UE est de proposer un panorama des cas d’usages et des frameworks associés actuellement déployés en milieu industriel sur des applications relevant de l’Intelligence Artificielle (IA). Trois domaines sont plus particulièrement visés : l’analyse d’images, l’analyse de données et l’analyse sémantique. Ces trois domaines sont au centre du secteur IA et données.\nL’UE se décomposera en 4 demi-journées à chaque fois sur le site de l’un des trois partenaires industriels (Capgemini, CGI et Sopra Steria). La première demi-journée sera consacrée à une présentation globale du contexte actuel de l’IA en milieu industrielle de même qu’un état des lieux sur les principaux cas d’usages. Les trois autres demi-journées seront consacrées à un cas d’usage particulier (RPA pour CGI, Analyse Sémantique Sopra, Data Science pour CAP) et à la manipulation des frameworks de base." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1LI010> <http://www.w3.org/2000/01/rdf-schema#label> "Management à Visée Innovante et Entrepreunariale" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1LA010> <http://www.w3.org/2000/01/rdf-schema#label> "Anglais Préparation TOEIC" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II010> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II040> <http://example.org/course/objective> "Au terme de cette UE, les étudiant-e-s auront acquis du vocabulaire lié à leur domaine de spécialité et seront capables de présenter et d’expliquer du contenu scientifique et informatique, ainsi que d’argumenter lors d’une discussion scientifique.\nAu terme de cette UE, les étudiant-e-s devront présenter à l’oral une innovation ou l’état de la recherche dans un domaine précis de leur spécialité. Les présentations seront faites libres de notes et dans un anglais clair et phonologiquement correct.\nAu terme de cette UE, les étudiant-e-s seront capables d’interagir lors d’une conversation, échanger des informations ou négocier en utilisant les codes de ce type de communication." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II110> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II040> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II020> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I1010> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA020> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA010> <http://www.w3.org/2000/01/rdf-schema#label> "Middleware" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZHCI> <http://www.w3.org/2000/01/rdf-schema#label> "Human-Computer Interaction" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1080> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1030> <http://example.org/course/content> "• Modèle de données RDF (Ressources Description Framework)\n• Langage d’ontologie   RDFS,   OWL\n• Logique de description et les règles d’inférences\n• Langage de requêtes SPARQL\n• Les principes de   données ouvertes liées." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA050> <http://example.org/course/parcours> "ALMA" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZHCI> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II100> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II060> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II050> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1060> <http://www.w3.org/2000/01/rdf-schema#label> "Algorithmes distribués avancés" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3CI030> <http://example.org/course/parcours> "CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I4010> <http://www.w3.org/2000/01/rdf-schema#label> "Systèmes temps réel embarqués" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1030> <http://example.org/course/objective> "- Comprendre le modèle de données RDF (Ressources Description Framework) (M)\n- Comprendre les langages de description des vocabulaires RDFS (RDF Schema) (M)\n- Comprendre les langages de description d’ontologie OWL (Web Ontology Language) (M)\n- Comprendre la logique de description et les règles d’inférences (M)\n- Comprendre le langage de requêtes SPARQL (M)\n- Etre capable d’utiliser les données liées ouvertes et de faire des requêtes SPARQL sur ces données(M)\n- Etre capable de transformer les données ouvertes en données liées et être capable de publier ces données liées (A)" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X4II020> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA040> <http://www.w3.org/2000/01/rdf-schema#label> "Ingénierie dirigée par les modèles" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II100> <http://example.org/course/parcours> "ATAL,DS,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I3020> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X4II030> <http://www.w3.org/2000/01/rdf-schema#label> "Période de suivi en formation par alternance" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II060> <http://example.org/course/objective> "Au terme du module ‘English for Scientific Communication’ les étudiants devront être capables de :\n• Consulter efficacement et évaluer une publication scientifique dans leur domaine de spécialité\n• Concevoir et tenir à jour une banque lexicale des verbes et expressions utiles lors de la rédaction d’une publication scientifique\n• S’être familiarisés avec des situations linguistiques courantes en recherche : traduction, rédaction\nd’abstracts et d’articles, peer-reviewing, présentation orale\nCommuniquer efficacement à l’écrit comme à l’oral dans un contexte scientifique et institutionnel" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA080> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1MS010> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO050> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO020> <http://www.w3.org/2000/01/rdf-schema#label> "Programmation par contraintes avancée" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II070> <http://example.org/course/parcours> "ORO,CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZVA> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3CI020> <http://example.org/course/parcours> "CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO030> <http://example.org/course/parcours> "ORO,CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X4II030> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA010> <http://example.org/course/parcours> "ALMA" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1020> <http://example.org/course/content> "• Functional and structural testing techniques to generate test data\n• Strategies for unit-level and system-level testing\n• Principles and strategies of integration and regression testing\n• Metrics, quality processes, methods for measuring that quality, and standards used\n• Open-source tools for testing and quality assurance.\n• Techniques for code instrumentation." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA030> <http://example.org/course/objective> "• To understand the vision of the decentralized web\n• To understand data integration problems\n• To know how to build distributed data integration systems with GAV (Global as View), LAV, GLAV and distributed query processing\n• To know personal information systems and small data ie. Solid\n• To know federated query processing over semantic web: FedX, Anapsid To know\n• To be able to solve data integration problems on the web" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO080> <http://www.w3.org/2000/01/rdf-schema#label> "Optimisation multi-objectif" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3ITM50> <http://example.org/course/content> "Ouverture à des problématiques connexes. Connaître les métiers en lien avec le Master ATAL.\nDécouverte du tissu industriel et des problématiques de recherche du domaine.\n• Interventions d’industriels, chercheurs et développeurs, partage d’expérience, description des problématiques en lien avec le traitement du langage" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2CI010> <http://www.w3.org/2000/01/rdf-schema#label> "Communication CMI S8" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IAIMT> <http://example.org/course/objective> "• Connaître et savoir utiliser des mécanismes avancés de structuration et d’exécution pour les systèmes répartis et le nuage, tels que la virtualisation, les containers et les composants (A)\n• Connaître et savoir utiliser la programmation événementielle et par aspects pour le développement et l ‘exécution de système répartis (A)\n• Savoir comment définir, implémenter, exécuter et évoluer des applications et infrastructures pour et dans le nuage (M)\n• Connaître les défis de sécurité, de la préservation de la vie privée, de sûreté et d’efficacité, notamment énergétique, dans le nuage (E)\n• Connaître et savoir utiliser des méthodes, techniques et algorithmes pour l’ordonnancement, la contractualisation (E)\n• Être capable d’implémenter, de déployer et d’exécuter des applications en nuage (A)\n• Être capable de faire évoluer des applications et infrastructures réparties (M)\n• Être capable de mesurer, d’évaluer et d’optimiser des caractéristiques des applications et des infrastructures, notamment leur consommation énergétique et leur sécurité, pour le nuage (E)\n•" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZFLAEC> <http://example.org/course/parcours> "DS,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZDELAE> <http://example.org/course/parcours> "DS" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZRMACS> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZRMACS> <http://example.org/course/content> "Professional insertion: research & development processes in company processes. Goals and organisation of the scientific research community\nWriting a scientific bibliography Writing and presenting for research\nDesigning and interpreting experimental work Ethics of research\nThe student will also carry out a project (miniature internship) in the field of data science (various topics will be proposed by the faculty teaching in the master), with emphasis on problem formalisation and bibliography, and light experimentation." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2MC050> <http://example.org/course/objective> "Au terme de cette Unité d’Enseignement, l’étudiant :\n• Formule un problème d’optimisation en dimension finie ou infinie sous contraintes et en prouve l’existence et l’unicité d’un minimum\n• Implémente sous Python les méthodes d’optimisation de Newton, de descente par gradient et par gradient stochastique, de recherche aveugle et de recuit simulé\n• Explique le principe de l’algorithme EM et cite des exemples de problèmes d’optimisation pour lequel il est adapté\n• Compare les avantages et les inconvénients de chacune des méthodes d’optimisation précédentes." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II020> <http://example.org/course/objective> "• Comprendre les différences d'objectifs et de moyens entre langages interprétés et langages compilés. Appréhender les notions de typage fort, typage dynamique, passage de paramètre par adresse, les\n• Appliquer différents paradigmes de programmation dans un même langage et étudier les moyens d'y parvenir : fonctionnel, objet, récursif, second ordre.\n• Utiliser des bibliothèques scientifiques riches, importer des bibliothèques programmées dans d'autres langages.\n• Comparer différentes implémentations d'un même algorithme, plusieurs au sein d'un même langage, ou dans plusieurs langages. Évaluer, quantifier ces différences.\n• Utiliser ou créer des structures de données complexes (matrices creuses, arbres, graphes).\n• Implémenter des algorithmes standards d'algèbre linéaire (calcul matriciel : décomposition LU, pivot de Gauss), éventuellement étudiés dans d'autres UE.\n• Implémenter des algorithmes standards de calcul probabiliste (suites pseudo-aléatoire, générateurs selon une loi), éventuellement étudiés dans d'autres UE.\n• Implémenter des algorithmes standards de calcul numérique (par exemple polynômes d'interpolation, courbes de Béziers, splines), éventuellement étudiés dans d'autres UE.\n• Implémenter des algorithmes standards de théorie des graphes (par exemple arbre couvrant, plus court chemin, diamètre), éventuellement étudiés dans d'autres UE." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II050> <http://www.w3.org/2000/01/rdf-schema#label> "Communication, connaissance de l'entreprise" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1LI010> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3ITM50> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II040> <http://example.org/course/content> "Anglais de spécialité informatique.\nTechniques de communication scientifique appliquées au domaine de spécialité. Compréhension, expression et interaction écrite et orale." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II060> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZIV> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA090> <http://www.w3.org/2000/01/rdf-schema#label> "ANGLAIS" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II010> <http://www.w3.org/2000/01/rdf-schema#label> "Machine Learning" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I1010> <http://example.org/course/content> "• Modèle de données OLAP (On-Line Analytic Processing)\n• Processus ETL (Extract, Transform, Load)\n• Opérateurs de requêtes OLAP (CUBE, ROLLUP, RANK, Top N, etc.)\n• NoSQL et NewSQL" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA040> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA110> <http://www.w3.org/2000/01/rdf-schema#label> "Modélisation et Vérification des Systèmes Concurrents" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II060> <http://example.org/course/content> "• Articles et publications de recherche\n• Anglais technique (recherche)\n• Traduction et édition d’articles" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZDDADI> <http://example.org/course/content> "- Part I:\n* A Short Review of the Relational Data Model: SQL, RA, RC, CQ, FO\n* Functional Dependencies and Inclusion Dependencies: Armstrong's Axioms, the Implication Problem\n* Database Design: BCNF, 3NF, Decomposition, Chase test\n- Part II\n* FD discovery: TANE, FD_Mine, Dep-Miner, CORDS, FastFDs * Extension to Approximate FD's discovery\n* Conditional FD's and 33 other Relaxations!\n- Part III * Data Integration: egds, tgds, G/L-AV\n* Schema Mapping: GLAV\n* Data Exchange: universal instance, certain answers\n* Query-Answering Using Views" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA090> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II050> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA100> <http://www.w3.org/2000/01/rdf-schema#label> "Conferences" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT060> <http://www.w3.org/2000/01/rdf-schema#label> "Corpus" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA030> <http://www.w3.org/2000/01/rdf-schema#label> "Distributed Architectures" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO080> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT060> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZID> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO020> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1040> <http://example.org/course/objective> "• To understand cloud infrastructures ie. Google\n• To understand concept of scalability, dependability in the context of cloud\n• To know cloud providers services and   cost models\n• To know basic principles and limitations of cloud datastores\n• To be able to design and deploy a highly scalable web application\n• To be able to design and deploy a REST API on the cloud\n• To be able to use datastore, memcache and others services offered by cloud providers\n• To be able to compute the cost of the web application per month." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1080> <http://www.w3.org/2000/01/rdf-schema#label> "Preuves et Constructions Formelles" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT010> <http://example.org/course/content> "Sensibiliser aux problèmes/solutions d'analyse de contenus textuels non structurés multilingues et multimodaux\nSensibiliser aux problèmes/solutions d'interopérabilité technique et sémantique de composants de TALP\nSensibiliser aux problèmes/solutions de traitement et stockage de données distribués et échelonnables (scalables)\nPrésentation de cadres de développement de chaînes de traitement intégrant des composants hétérogènes et distribuées en favorisant la maintenance et la réutilisation de ressources\nDonner un aperçu des outils/instruments/framework existants pour les différentes activités du TALP et permettre la prise en main de quelques uns" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT080> <http://www.w3.org/2000/01/rdf-schema#label> "Périodes de formation alternées en milieu professionnel" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2CI010> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZAIAVP> <http://example.org/course/objective> "At the end of this course, the students will be able to:\n• Understand the digital objects that constitutes the basis for computation in any image field. Discrete topology theorems, algorithms for line drawing, convex shape or distance maps, morphological tools and discrete reconstruction are presented in order to be able to manage an image problem via these tools\n• Manipulate the discrete geometry concepts in a real applicative environment either for medical imaging (image acquisition, tomography, quantizing image information) or for image analysis (medical, materials, ...). A large set of examples is available from the teams projects and are applied with the previous concepts in real time constraints environments" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO080> <http://example.org/course/parcours> "ORO,CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IOM10> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA060> <http://www.w3.org/2000/01/rdf-schema#label> "Services" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I4010> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1080> <http://example.org/course/parcours> "ALMA" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1CI010> <http://www.w3.org/2000/01/rdf-schema#label> "Bases de comptabilité" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I2010> <http://example.org/course/parcours> "ORO,CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II030> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II090> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO020> <http://example.org/course/parcours> "ORO,CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO030> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I5010> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1020> <http://example.org/course/parcours> "ALMA" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA080> <http://example.org/course/objective> "- Comprendre les concepts clés des Architectures Logicielles (I)\n- Comprendre et savoir classifier les langages de modèlisation d'architectures en soulignant leurs différents modes de représentation, leurs supports de conception et leurs mécanismes d'adaptation (M)\n- Etre capable d'identifier et de développer différents styles architecturaux   (A)\n- Comprendre les principales difficultés qui interviennent lors du passage à l'echelle(A)\n- Etre capable de maitriser la complexité des architectures logicielles à un haut niveau d'abstraction   (M)\n- Comprendre et distinguer les différents styles architecturaux orientés agents, objets, composants et modèles.(M)" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1LI010> <http://example.org/course/parcours> "ATAL,DS,ALMA,VICO,ORO,CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT020> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT040> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3CI030> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I2020> <http://example.org/course/objective> "1. reconnaître, modéliser et résoudre un problème de flots à   l'aide d'algorithmes classiques\n2. reconnaître, modéliser et résoudre un problème de transport à l'aide de l'algorithme du simplexe réseau\n3. mettre en place quelques techniques pour aborder des problèmes classiques dans un contexte dynamique\n4. mener à bien un projet de résolution de problème à l'aide de graphes, en binôme, depuis la prise en main du sujet et jusqu'à l'évaluation des solutions/implémentations proposées\n5. produire un rapport écrit clair, concis, complet et convaincant." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZVA> <http://example.org/course/objective> "At the end of the course the student will be able to\n- choose an adequate visual representation for a dataset, with regards to the human perception and cognitive systems and the insights that are needed\n- design an interactive visual analytics system, combining analytical techniques and data representation for the various tasks a domain analyst needs to carry\n- carry out the evaluation of an interactive visualisation system, choosing from various evaluation means\n- engage in discussions on the latest theoretical research topics and challenges" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZAIAVP> <http://www.w3.org/2000/01/rdf-schema#label> "Advanced image and video processing" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I4010> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT060> <http://example.org/course/parcours> "ATAL" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZDELAE> <http://www.w3.org/2000/01/rdf-schema#label> "Data economics, law and ethics" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I2010> <http://www.w3.org/2000/01/rdf-schema#label> "Optimisation discrète et combinatoire" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA100> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II020> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I3010> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1030> <http://www.w3.org/2000/01/rdf-schema#label> "Web des données, web sémantique" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA030> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZSKR> <http://www.w3.org/2000/01/rdf-schema#label> "Semantic knowledge representation" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1060> <http://example.org/course/content> "• Les problèmes qui découlent de la distribution et de la concurrence\n• Les différents paradigmes de modélisation du système distribué\n• Les fondements de la synchronisation liée à la concurrence\n• Les principes de base de l'algorithmique distribuée\n• Les bornes de calculabilité de certains problèmes dans différents modèles\n• La complexité d'un algorithme distribué" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA030> <http://example.org/course/parcours> "ALMA" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA050> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZDDADI> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3ITM50> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I4020> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZCAICD> <http://example.org/course/objective> "This series of presentations and discussions will open their mind of students to new topics, applications and speakers,\nand stimulate them for chosing their way into the field of data science." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT010> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZPMASNA> <http://www.w3.org/2000/01/rdf-schema#label> "Pattern mining and social network analysis" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3CI030> <http://www.w3.org/2000/01/rdf-schema#label> "Management, Gestion de projet, Entrepreunariat" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZHCI> <http://example.org/course/parcours> "VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IAIMT> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT060> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1LA010> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2CI010> <http://example.org/course/objective> "A l’issue de cette U.E., L’étudiant\n• connaît le fonctionnement d’un service RH,\n• connait le processus de recrutement dans une entreprise,\n• utilise les réseaux sociaux,\n• sait préparer un entretien pour un stage ou une embauche." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X4II010> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZSKR> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA110> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZAIAVP> <http://example.org/course/content> "Discrete geometry topics :\n• Discrete topology\n• Discrete line, surface and volume\n• Mathematical morphology\n• Discrete measures\n• Discrete reconstruction\nImage analysis applications topics:\n• medical imaging\n• materials imaging\n• art imaging" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZDDADI> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II070> <http://www.w3.org/2000/01/rdf-schema#label> "Optimisation non-linéaire" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZPMASNA> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA060> <http://example.org/course/objective> "- Comprendre la notion de service ainsi que ses différents paradigmes\n- Connaître les principes SOA et son implémentation modulaire via les web-services\n- Connaître les technologies relatives aux web-services (e.g. SOAP, WSDL, UDI)\n- Connaître les changements induits par la notion de service à tous les niveaux\n- Etre capable de développer un service dans une architecture monolithique simple\n- Etre capable d'utiliser un Domain Drived Design (DDD) pour implémenter une architecture orientée services\n- Comprendre les paradigmes nés de l’expansion du cloud et de l’exploitation des services (e.g. SaaS, Xaas)" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I5020> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZ3CG> <http://example.org/course/parcours> "VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA110> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X4II020> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IOM20> <http://www.w3.org/2000/01/rdf-schema#label> "Planification et Ordonnancement" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZSKR> <http://example.org/course/objective> "Upon completion, the student will be able to :\n- understand the different principle and concepts of knowledge representation : languages, annotation, reasoners.\n- to design a simple model of ontology with owl and protege.\n- to perform data annotation from an ontology with a triple based representation for data (rdf), and perform inference with a reasoner (hermit, sparql)\n- to apply these web 3.0 technology on knowledge bases and data in the web (linked open data)" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO070> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X4II030> <http://example.org/course/parcours> "ATAL" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA110> <http://example.org/course/parcours> "ALMA" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II010> <http://www.w3.org/2000/01/rdf-schema#label> "Graphes" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1LI010> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II070> <http://example.org/course/objective> "* connaître les concepts fondamentaux et les conditions d'optimalité en programmation non-linéaire (Connaissance)\n* savoir interpréter le comportement d'algorithmes d'optimisation (Compréhension) ;\n* développer une méthode d'optimisation pour la résolution d'un problème non-linéaire avec contraintes (Application) ;" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I5020> <http://example.org/course/objective> "A l'issu de ce cours l'étudiant devra être capable de :\n- Identifier les différentes modalités d’Interaction et leurs propriétés\n- Identifier les outils théorique et pratiques à mettre en œuvre pour développer un système d'interaction\n- Comprendre comment évaluer la pertinence d’une interaction et des solution techniques permettant de la mettre en oeuvre" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I2010> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA020> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT020> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1MC060> <http://example.org/course/objective> "Au terme de cette unité d’enseignement, l’étudiant doit, en matière d’approximation :\n• Construire et programmer l’approximation d’une fonction par interpolation de Lagrange, par les polynômes de meilleure approximation et par splines\n• Déterminer la pertinence d’une méthode d’approximation par rapport à une autre et interpréter les résultats qualitativement et quantitativement\nConcernant l’algèbre linéaire numérique, l’étudiant doit\n• Programmer la factorisation QR pour résoudre des systèmes linéaires surdéterminés par exemple dans une approximation au sens des moindres carrés\n• Réduire une matrice sous forme diagonale par la décomposition en valeurs singulières" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO060> <http://example.org/course/objective> "1. comprendre les enjeux de la génomique comparative et les défis algorithmiques associés\n2. comprendre, reconnaître et manipuler les opérations classiques de réarrangements de génomes (inversion, transposition, translocation, etc.)\n3. comprendre, reconnaitre et manipuler les différentes notions de distance et de scénario de réarrangement existants\n4. comprendre et reproduire les résultats algorithmiques classiques sur les réarrangements de génomes, ainsi que les outils associés (graphe de breakpoint notamment)\n5. adapter le type de solution algorithmique recherché (exacte, approchée, FPT) à la difficulté prouvée ou intuitive du problème étudié\n6. reconnaître, modéliser et résoudre un problème de construction de phylogénies avec des méthodes à base de graphes et de programmation dynamique\n7. reconnaître, modéliser et résoudre un problème de comparaison de génomes en présence de duplications\n8. comprendre les enjeux de la recherche de motifs fonctionnels dans les réseaux biologiques et les défis algorithmiques associés\n9. comprendre et reproduire les résultats algorithmiques classiques sur la recherche de motif fonctionnel dans les réseaux biologiques\n10. confiner l'explosion combinatoire, due à la taille des données, d'une solution en utilisant les principales techniques d'algorithmique FPT\n11. lire, comprendre, présenter, discuter un article de recherche, en binôme\n12. effectuer la synthèse écrite (en anglais) d'un papier de recherche, de manière claire, concise , complète et convaincante." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO040> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZTASPM> <http://example.org/course/content> "This teaching unit explores techniques for discovering and assessing patterns and structures from sequential data (temporal event sequences, texts, biological sequences, etc.). It focuses on applications for text mining and process mining.\nOutline:\nSequential pattern mining\n- episode mining\n- sequential pattern mining\n- constraint-based mining\n- pattern assessment Text Mining\n- preprocessing methods\n- similarities\n- emerging patterns Process Mining\n- Process model\n- Process discovery\n- Conformance checking" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT080> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I5020> <http://example.org/course/content> "Dans cette UE, nous proposerons des exemples d'applications liées à l'interaction. Après une courte introduction à l'interaction homme machine, ces applications seront présentées selon 3 points de vue spécifiques aux 3 parcours du secteur données du Master informatique :\n• Introduction au traitement automatique des langues (ATAL)\n• Introduction à la datavisualisation et l'exploration visuelle de données (DS)\n• Introduction à la vision par ordinateur et l'évaluation de l'experience utilisateur (VICO)" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZHCI> <http://example.org/course/content> "1- Human Computer Interaction: from intervention to UX to interaction to interfaces\n2- Designing HCI: understanding situations and humans, modeling users and interaction, prototyping and iterating\n3- Evaluating HCI: the many facets of HCI evaluation, from expert evaluations to experiments\n4- Novel interactions: gesture, voice, touch, haptic-based interactions + AR/VR (see 3D computer graphics)\n5- Project.\n10 sessions of 2 hours each, 20 hours individual work, 20 hours project work Each student will make one or two presentation during the course.\nEach project will imply 2 or 3 students designing an experimental setting and running à small evaluation to answer an HCI related question" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I1010> <http://www.w3.org/2000/01/rdf-schema#label> "Bases de données évoluées" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3ITM50> <http://example.org/course/parcours> "ATAL" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II010> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1060> <http://example.org/course/objective> "• Comprendre les problèmes qui découlent de la distribution et de la concurrence\n• Etre capable d'abstraire un système distribué réel pour pouvoir le modéliser et l'étudier\n• Connaître les différents paradigmes de modélisation du distribué\n• Comprendre les fondements de la synchronisation liée à la concurrence\n• Comprendre les principes de base de l'algorithmique distribuée\n• Connaître les bornes de calculabilité de certains problèmes dans différents modèles\n• Etre capable d'écrire des algorithmes distribués dans un modèle donné\n• Etre capable de développer une petite application distribuée\n• Etre capable d'analyser la complexité d'un algorithme distribué" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZDELAE> <http://example.org/course/content> "Economics of data Open data\nModels and techniques for recommender systems Models and techniques for crowdsourcing\nAnonymization techniques for privacy-preserving data publishing Detecting and preventing discrimination" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZTASPM> <http://example.org/course/parcours> "DS" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II090> <http://example.org/course/level> "M2,M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1080> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I2030> <http://example.org/course/parcours> "ORO,CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II040> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II010> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO010> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II100> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1020> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2CI010> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IOM10> <http://www.w3.org/2000/01/rdf-schema#label> "Contraintes Globales" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO050> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZCAAI> <http://example.org/course/objective> "Upon completion, the student will be able to :\n- recognize an unsupervised or semi-supervised classification problem from real-world problems and characterize it\n- evaluate the suitabilty of the main mathematical models and techniques to address this task\n- design, carry out and criticize experiments on real data sets\n- develop software using relevant libraries for carrying out new classification problems and experiments\n- start exploiting scientific resources such as scientific papers" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II010> <http://example.org/course/objective> "1. reconnaître et modéliser un problème réel adapté à la résolution par la théorie des graphes\n2. choisir la représentation d'un graphe la plus adaptée à chaque problème, en visant l'efficacité\n3. prendre en compte la complexité intrinsèque des graphes pour calculer précisément la complexité algorithmique d'une solution et évaluer son efficacité\n4. mettre en œuvre les principales solutions algorithmiques pour les problèmes classiques de théorie des graphes : parcours de graphes, plus courts chemins, couplages" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X4II020> <http://example.org/course/parcours> "CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT040> <http://www.w3.org/2000/01/rdf-schema#label> "Statistical and symbolic language modeling" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I1010> <http://example.org/course/parcours> "ATAL,DS,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1LI010> <http://example.org/course/content> "Autour d’une formation de 25 heures et d’un accompagnement spécifique   par projet, l’étudiant aura la possibilité d’identifier une thématique ou un projet de recherche pouvant s’inscrire dans une démarche de valorisation économique. Selon un programme de formation reprenant 49 actions pour entreprendre   en lien avec l’innovation,   l’étudiant   bénéficiera d’un accompagnement spécifique en fonction des besoins rencontrés.   Les livrables attendus sont un Business Model, un business Plan et un elevator pitch de 10 minutes présentés devant un jury composé de 2 membres universitaires et d’un membre extérieur reconnu pour son expertise.\nA la suite du concours, un prix annuel sera décerné   aux trois meilleurs projets début février de chaque année." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X4II010> <http://example.org/course/objective> "- S'intégrer dans le milieu professionel de son stage, mettre en oeuvre sa capacité d'analyse sur le sujet proposé, et être force de proposition.\n- Synthétiser le travail effectué dans un compte rendu de manière concise, correcte, et complète.\n- Préparer des supports puis présenter oralement le travail effectué de manière dynamique et convaincante." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I5020> <http://www.w3.org/2000/01/rdf-schema#label> "Interaction and applications" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT070> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO020> <http://example.org/course/objective> "- Maîtriser différentes techniques (approche complète et incomplète) de résolution de problème de contraintes.\n- Connaître différentes approches de modélisation de problème de contraintes\n- Comprendre les mécanismes avancés de résolution de problème de contraintes, comme par exemple les méthodes parallèles, la recherche autonome, l'hybridation de méthode." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT010> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZID> <http://www.w3.org/2000/01/rdf-schema#label> "Internship (DS)" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZCAICD> <http://example.org/course/parcours> "DS" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO050> <http://example.org/course/parcours> "ORO,CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IOM20> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA010> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II030> <http://www.w3.org/2000/01/rdf-schema#label> "Compilation" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I3020> <http://example.org/course/objective> "- Connaître des principes de la théorie du vote et du choix social ainsi que des paradoxes qui en relèvent\n- Connaître les méthodes de vote suivantes :   scrutin uninominal à la pluralité des voix,   scrutin uninominal à la pluralité des voix à deux tours,   scrutin uninominal à la pluralité des voix à deux tours avec rangement, vote alternatif, méthode de Borda et méthode de Condorcet\n- Connaître des propriétés de systèmes de vote suivantes : monotonicité, indépendance locale, transitivité et critère de Condorcet\n- Connaître le théorème d'Arrow et ses conséquences\n- Être capable de modéliser des préférence individuelles à travers des relations binaires\n- Connaître des propriétés de relations binaires (et leurs représentations graphiques) comme réflexivité, irréfléxivité, symétrie, asymétrie, anti-symétrie, complétude, complétude au sens faible, transitivité, transitivité négative et semi-transitivité.\n- Connaître des structures de préférence comme ordre total, pré-ordre total, quasi ordre et ordre d'intervalle\n- Être capable de trouver des décisions optimales sous incertitude selon les critères suivants : critère de Wald (max-min ou prudence), critère de Max-Max (ou optimisme), critère de Hurwicz (ou compromis), critère de Savage (ou minimisation du regret maximal) et critère de Laplace\n- Connaître les principaux outils de la théorie de la décision sous risque comme utilité, notion de loterie, axiomatique de von Neumann et Morgenstern\n- Être capable de construire et de pouvoir analyser la fonction d'utilité en se basant sur les préférence de décideur\n- Être capable de tracer l'arbre de décision décrivant la situation pratique de la décision sous risque\n- Connaître les principaux concepts de l'aide à la décision multi-critère comme attribut, critère, dominance, efficience, espace de décisions, espace des critères ainsi que la somme pondérée des critères et ses limites\n- Être capable d'intégrer les préférences de décideur dans le modèle de l'aide à la décision multi- critère et de pouvoir appliquer les méthodes de surclassement comme ELECTRE ou PROMETHEE" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IOM30> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO010> <http://example.org/course/objective> "Les étudiants ayant suivi avec fruit ce cours seront capables\n•\nde distinguer un ensemble de solutions correspondant à un problème d'optimisation multi-objectif linéaire, non-linéaire, continu, discret et sa représentation approchée [M].\n•\nde discerner les limites d'un algorithme exact en optimisation multi-objectif et d'avoir recours avec pertinence à un algorithme approché [M].\n•\nd'apprécier et mesurer la qualité d'une solution approchée à l'aide de bornes, d'ensembles bornant et/ou d'indicateurs de qualité [A].\n•\nd'avoir recours à une structure de données avancées pour manipulation efficace d'un vaste ensemble de points multi-dimensionnels [A].\n•\nde posséder une vision des principaux algorithmes, de leurs caractéristiques et leurs avantages/inconvénients [M].\n•\nd’opter pour un paradigme qui se prête aux caractéristiques du problème à résoudre [M].\n•\nd'être attentifs aux aspects cruciaux et déterminants pour le succès de la mise en oeuvre d'un algorithme approché [M].\n•\nde comprendre, instancier et calibrer des métaheuristiques multiobjectif à population de solutions (VEGA, NSGA-II, IBEA) [A].\n•\nd'opter pour une procédure de pre- et post- optimisation efficace (contribution des solutions initiales; recherches locales itérées) [A].\n•\nd'argumenter sur la recommandation des choix et des paramètres à établir, sur la stabilité et la reproductibilité des résultats rapportés [A].\n•\nd'avoir recours à un environnement générique de résolution, d'y intégrer les éléments du problème à résoudre et d'obtenir des solutions argumentées [I].\n•\nde juger du bien-fondé de la mise en oeuvre spécifique dans un environnement ad-hoc [A].\n•\nde traiter un cas d'étude complet allant de l'énoncé d'une situation jusqu'aux recommandations en terme de solutions et de paramètres [M]." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2MC050> <http://www.w3.org/2000/01/rdf-schema#label> "Optimisation déterministe et stochastique" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1MC060> <http://example.org/course/parcours> "CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II030> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I4020> <http://example.org/course/objective> "•   Maîtriser le fonctionnement des réseaux locaux haut débit et des réseaux sans fil (M)\n• Etablir un plan d'adressage d'un réseau simple et maillé (M)\n• Savoir construire des tables de routage (M)\n•   Connaitre les algorithmes de routage dynamique (M)\n• Mettre en œuvre un protocole d'échange via la programmation réseaux ()\n•   Décrire le niveau de sécurité d'un réseau d'entreprise (I)\n• Etre capable de nommer des solutions de sécurité réseaux (I)\n• Configurer des services réseaux sur une infrastructure locale (A)\n• Comprendre les architectures réseaux à qualité de service (QoS) et celles permettant l'ingénierie de trafic (I)\n• Comprendre les problèmes de la cybercriminalité et appréhender les solutions préventives à ce risque (I)" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO070> <http://example.org/course/content> "Les conférences seront assurées à 100% par des intervenants du monde de l'entreprise. Cette UE prépare les étudants à leur insertion dans le milieu professionnel." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IOM20> <http://example.org/course/parcours> "ORO,CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X4II030> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT040> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IAIMT> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZID> <http://example.org/course/objective> "At the end of the intership, the student should be able to:\n1. 1. Identify and refine a research question or puzzle within an existing field of scientific inquiry and devise a plan for investigating it.\n2. Formulate a program of reading in consultation with a professional scientist to provide context for the investigation\n3. Develop a time-line for the research project and manage work to that time-line\n4. Communicate research results –both orally and in writing – in a style consistent with scientific standards\n5. Work as part of a research team" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZMC> <http://example.org/course/content> "Cryptography:\n• Pseudo-chaotic number generators\n• Symetric and Asymetric Ciphers\n• Hash Functions\n• Steganography Systems Image and video coding :\n• Principles, methods and technics of image and video compression\n• Image and video compression standards\n• Advanced image/video coding (scalability, rate-distortion optimization, coding strategy, multi- views)\n• Next generation of image and video coding (for immersive video formats)" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA010> <http://example.org/course/objective> "- Comprendre les fondements de la synchronisation liés à la concurrence\n- Comprendre les architecture n-tiers (e.g. J2E) et les technologies associées\n- Connaître les limites théoriques des applications distribuées\n- Etre capable de mettre en place une architecture client/serveur utilisant des objets distants\n- Comprendre les principe de HTTP et Websocket\n- Etre capable de concevoir une API fondée sur REST\n- Etre capable de créer un web service en utilisant le framework Spring\n- Comprendre les concepts d'authentification et de sécurité\n- Comprendre les concepts de services basés composants et de micro services" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IOM30> <http://example.org/course/parcours> "ORO,CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IOM30> <http://example.org/course/objective> "+ Information systems and softwares in transport optimization I.\n+ Modeling classical facility location and vehicle routing problems E\n+ Modeling advanced facility location, network design and vehicle routing problems M\n+ Heuristic solving of facility location problems I\n+ Heuristics for vehicle routing problems M\n+ Meta heuristics for vehicle routing problems A\n+ Solving vehicle routing problems with time windows A\n+ Advanced exact methods for facility location and vehicle routing (Branch and cut, Lagrangean relaxation, column generation) I." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II060> <http://www.w3.org/2000/01/rdf-schema#label> "Anglais pour la communication scientifique" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2CI010> <http://example.org/course/parcours> "CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA080> <http://example.org/course/parcours> "ALMA" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1MS010> <http://example.org/course/content> "• Outils de description d’un échantillon\nMéthodes exploratoires et représentation d’un tableau de données à l’aide de cartes\n• Analyse en composantes principales (ACP)\n• Analyse factorielle des correspondances (AFC et AFCM)\nMéthodes exploratoires associées à plusieurs tableaux de données\n• Analyse Factorielle Discriminante (AFD)\nCompléments : Analyse des corrélations canoniques (ACC) ; méthodes de type k-tableaux Td/TP avec le logiciel libre R et initiation en distanciel à la PROC PRINCOMP du logiciel SAS" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT040> <http://example.org/course/content> "Savoir mettre en oeuvre et maîtriser différents modèles de langages tant du point de vue de sa définition (puissance d’un modèle), de son utilisation effective (prédiction, lissage) que de son acquisition (apprentissage).\n• Les modèles\n- Modèles numériques (à base de vecteurs, essentiellement, donc bag of words et embeddings)\n- Modèles probabilistes (n-grams & co)\n- Modèles grammaticaux \"syntaxiques\" (à noter que les automates et transducteurs probabilistes sont là)\n- Modèles grammaticaux lexicaux\n• Utilisation des modèles : parsing, prédiction, techniques associées (lissage). Questions algorithmiques, probabilistes, expérimentales.\n• Apprentissage des modèles :   techniques d'inférence grammaticale, méthodes spectrales, méthodes d'estimation, et réseaux de neurones récurrents." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I2010> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA060> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZIV> <http://example.org/course/content> "During the internship, the student will conduct a research work either in a university lab or in a private companie's R&D department." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA060> <http://example.org/course/parcours> "ALMA" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1CI010> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II050> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/YG9U15-> <http://example.org/course/parcours> "ATAL,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IOM20> <http://example.org/course/objective> "- Comprendre un problème d'ordonnancement et en construire une modélisation.\n- Connaitre les grandes familles de problèmes d'ordonnancement, de gestion de projet et de planification de personnel.\n- établir la complexité d'un problème au regard de sa classification et de la littérature.\n- proposer une méthode de résolution adaptée au contexte et à la problématique.\n- comprendre un problème nouveau à partir d'une description ou d'un article de recherche." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II010> <http://example.org/course/content> "•\nEléments de théorie des graphes\n•\nArbres et arborescences\n•\nProblème du plus court chemin\n•\nProblèmes de couplage" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II060> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II040> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I4010> <http://example.org/course/objective> "A l'issue de ce cours, l'étudiant doit:\n• Comprendre la notion de Système temps réel : sa finalité, ses domaines d'application (Application)\n;\n• Connaître les spécificités d'un système d'exploitation temps réel : architecture logicielle, gestion des tâches, gestion de la mémoire, gestion des interruptions (Initiation) ;\n• Connaître le fonctionnement des principales politiques d'ordonnancement temps réel (Application)\n;\n• Etre capable d'établir l'analyse temporelle hors-ligne d'une application temps réel : ordonnançabilité d'un ensemble de tâches périodiques et/ou apériodiques (Application) ;\n• Comprendre les enjeux liés aux systèmes embarqués : ressources matérielles limitées, faible empreinte mémoire, contraintes d'encombrement (Initiation) ;\n• Etre capable de mettre en œuvre une application temps réel (Maîtrise)." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT020> <http://example.org/course/content> "Savoir gérer un projet Logiciel intégrant plusieurs plusieurs niveaux de participants (client, développeur, designer, …).\nSavoir esquisser un Business Model à partir d’un logiciel/d’une innovation. Pouvoir pitcher son idée / son Business Model dans un temps contraint.\n• Ingénierie logicielle pour l'industrialisation de prototypes en lien avec l'apprentissage automatique et le traitement des langues\n• Concevoir une architecture technique complexe impliquant des algorithmes TAL ou ML\n• Gestionnaire de calcul distribué (torque/maui par exemple), Streaming, Cloud computing...\n• Retours d’expérience sur l’architecture logicielle de Dictanova et Voxolab/Voxygen\n• Méthodes agiles pour le développement Logiciel\n• Modèles économiques du Logiciel : business canvas, empathy map…\n• Entrainement au pitch" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I3020> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZ3CG> <http://www.w3.org/2000/01/rdf-schema#label> "3D Computer Graphics" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT060> <http://example.org/course/content> "Constitution d’un corpus : 1) metadonnées, 2) critères de sélection des textes et 3) normes linguistiques d'annotation.\n• Définition d'un corpus électronique,\n• Typologies des corpus : monolingues, bilingues, etc. ,\n• Corpus de références,\n• Contraintes de constitution d'un corpus : domaines, genres, situation de discours\n• Metadonnées : DublinCore CES TEI OLAP\n• Mesures d'évaluation intrinsèque et extrinsèque de la qualité du corpus\n• Annotation : mesurer la complexité de l’annotation\n• Codage de la parole, préparée ou conversationnelle\n• Appréhender les outils d’annotation (transcriber, Webanno)\n• Guide d’annotations" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA020> <http://example.org/course/objective> "• To understand how big are big data and how distributed infrastructures are able to handle them\n• To understand why traditional databases cannot handle big data\n• To know online transaction processing, online analytical processing and streaming processing on big data.\n• To know representative distributed datastore for big data OLTP ie. CouchBase, Google BigTable...\n• To know how to program with Map-Reduce, resilient data structures, and stream processing ie. Hadoop, SPARK, Flink\n• To know consistent hashing, linear hashing, distributed linear hashing, sharding\n• To know multi-version concurrency control and consistency issues in large scale datastore\n• To be able to understand how current datastore are built, what they can do and what are their limitations.\n• To be able to use large scale datastore for OLTP, OLAP and stream processing." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT010> <http://www.w3.org/2000/01/rdf-schema#label> "Développement logiciel en industrie de la langue" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZAIAVP> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZCRLADR> <http://example.org/course/objective> "Upon completion, the student will\n- face the problem of human crafted features and observe the benefit of automatic feature learning\n- understand cutting edge representation learning algorithms applied in data science\n- know how to use representation learning methods that scale well on a variety of (un)labeled, (multi)-modal, relational and heterogeneous data.\n- be able to tackle a new data given by an application or a new problem described in a scientific paper, and apply the aforementionned methods on it" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT070> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO060> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1MC060> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1040> <http://example.org/course/content> "• L’infrastructure de type cloud\n• Passage à l’échelle, fiabilité dans le contexte de cloud\n• Principes et limitations de cloud datastores\n• Conception et déploiement des applications à large échelle\n• REST API dans le contexte de cloud\n• Calculer le coût d’une application web dans le cloud" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I2030> <http://www.w3.org/2000/01/rdf-schema#label> "Métaheuristiques" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA100> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZMC> <http://example.org/course/objective> "Multimedia communications require a careful design of source coding and security.\nFor this purpose, this module gives advanced notions in Image and Video Coding, and in Cryptography.\nAt the end of this course, the student will be able :\nIn the Cryptography domain:\n• To provide principles, theory and methods for designing data security and chaos-based data security.\n• To be able to design, realize and analyse a chaos-based cryptographic systems.\n• To know applications: Images and videos security ; Network security and Network access control ; Internet of Things (IoT) security ; Mobile security.\nIn the image and video coding domain:\n• To know the fundamental principles, methods and technics of image and video compression\n• To describe the caracteristics of the main image/video compression standards (JPEG, JPEG2000, H26X, MPEG-X video)\n• To implement a complete video coding/decoding chain" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO060> <http://www.w3.org/2000/01/rdf-schema#label> "Algorithmics in Genomics" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I2020> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZIV> <http://example.org/course/objective> "At the end of the intership, the student should be able to:\n1. 1. Identify and refine a research question or puzzle within an existing field of scientific inquiry and devise a plan for investigating it.\n2. Formulate a program of reading in consultation with a professional scientist to provide context for the investigation\n3. Develop a time-line for the research project and manage work to that time-line\n4. Communicate research results –both orally and in writing – in a style consistent with scientific standards\n5. Work as part of a research team" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II010> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I2030> <http://example.org/course/objective> "Les étudiants ayant suivi avec fruit ce cours seront capables\n•     de discerner les limites d'un algorithme d'optimisation exact et d'avoir recours avec pertinence à un algorithme approché [M]\n•     de reconnaître une heuristique, métaheuristique, hyperheuristique, matheuristique et leurs relations [M]\n•     d’opter pour un paradigme qui se prête aux caractéristiques du problème à résoudre [M]\n•     d'être attentifs aux aspects cruciaux et déterminants pour le succès de la mise en oeuvre d'un algorithme approché [M]\n•     d'argumenter sur la recommandation des choix et des paramètres à établir, sur la stabilité et la reproductibilité des résultats rapportés [A]\n•     de mettre en oeuvre un algorithme fondé sur une structure de voisinage [M]\n•     de mettre en oeuvre un algorithme de construction d'une ou plusieurs solutions initiales [M]\n•     de manipuler des principaux mouvements de référence (ADD/DROP, k-p exchange, k- opt, etc) et leur mise en oeuvre dans des algorithmes de recherche locale [A]\n•     de comprendre, instancier et calibrer des métaheuristiques fondamentales de voisinage monotones (GRASP, VNS) [M]\n•     de comprendre, instancier et calibrer des métaheuristiques fondamentales de voisinage non- monotones (recuit simulé, méthode tabou) [A]\n•     de comprendre, instancier et calibrer des métaheuristiques fondamentales à population (algorithmes génétiques, algorithmes de fourmis, recherche dispersée, essaims particulaires) [M]\n•     de choisir et coupler un composant avancé à une métaheuristique donnée (apprentissage automatique pour le réglage des paramètres; chemins reliants; construction/destruction) [I]\n•     d'avoir recours à un environnement générique de résolution, d'y intégrer les éléments du problème à résoudre et d'obtenir des solutions argumentées [I]\n•     de juger du bien-fondé de la mise en oeuvre spécifique dans un environnement ad-hoc [A]\n•     de traiter un cas d'étude complet allant de l'énoncé d'une situation jusqu'aux recommandations en terme de solutions et de paramètres [M]" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II040> <http://www.w3.org/2000/01/rdf-schema#label> "Ethique et numérique" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZRMACS> <http://www.w3.org/2000/01/rdf-schema#label> "Research methodology and case study" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II110> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO040> <http://example.org/course/parcours> "ORO,CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3CI020> <http://www.w3.org/2000/01/rdf-schema#label> "Rapport et Soutenance en anglais" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I3020> <http://www.w3.org/2000/01/rdf-schema#label> "Decision Engineering" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO060> <http://example.org/course/parcours> "ORO,CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA050> <http://example.org/course/objective> "- Etre capable d'appliquer les méthodes et outils pour développer un \"Senior Capstone Project\" t (A)\n- Etre capable d'identifier les différentes étapes de gestion d'un projet   (M)\n- Etre capable d'estimer les couts et durées d'un projet (M)\n- Comprendre les outils et l'organisation d'un travail collaboratif   (M)." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II110> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II030> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO050> <http://example.org/course/objective> "- To learn classical modelization techniques on various problems using specific variables (A-M)\n- To know the different strategies applicable to solve mixed integer linear programs (M)\n- To know the major techniques used in a solver to pre-process a mixed integer linear program (A)\n- To know how to implement a cutting plane algorithm based on Gomory's cuts and MIR cuts, and the limitations of these techniques (A-M)\n-To be able to compare two formulations of the same problem, and how to strenghten inequalities using lifting technique (M)\n-To know how to distinguish between valid inequalities, faces and facets, and to know the main way to prove that an inequality is a facet (M)\n-To know how to apply these techniques to graph theory or any problem that is not given under the form of a mixed integer linear program (A)\n-To be able to detect symmetry in a problem or model, and to know how to cope with this phenomenon (A-M)\n- To apprehend Lagragian relaxation with effective implementation (M)\n- To discover the implementation of a column generation algorithm (I)\n-To understand the theory of Dantzig-Wolfe decomposition and to devise a column generation approach for various combinatorial optimization problems (M)\n-To know Branch-and-Price and the different ways to make it efficient (A)\n-To know the Benders decomposition and its relation with Dantzig-Wolfe decomposition (A)\n-To know how matheuristics work for both exact methods using approximate methods, and heuristics taking advantage of exact approaches (M)" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X4II010> <http://www.w3.org/2000/01/rdf-schema#label> "Stage" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT080> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZCRLADR> <http://example.org/course/parcours> "DS" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZTASPM> <http://www.w3.org/2000/01/rdf-schema#label> "Text and sequential pattern mining" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA040> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO050> <http://www.w3.org/2000/01/rdf-schema#label> "Large Scale Optimization" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II060> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I3010> <http://www.w3.org/2000/01/rdf-schema#label> "Programmation multi-coeurs" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA110> <http://example.org/course/content> "Le cours est consacré à la modélisation et à la vérification par model-checking de systèmes concurrents" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II040> <http://www.w3.org/2000/01/rdf-schema#label> "Anglais scientifique" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT070> <http://www.w3.org/2000/01/rdf-schema#label> "Projet" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II050> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZCAAI> <http://www.w3.org/2000/01/rdf-schema#label> "Cluster analysis and indexing" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO030> <http://www.w3.org/2000/01/rdf-schema#label> "Optimisation Globale" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1030> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II030> <http://example.org/course/objective> "-             être capable de distinguer les analyses lexicales, syntaxiques et sémantiques (I)\n-             être capable de maitriser les outils de base tels que LEX/YACC (M)\n-             être capable de comprendre les analyseurs ascendants et descendants (M)\n-             être capable de distinguer la partie Analyse de la partie Synthèse d’un compilateur (M)\n-             connaître les techniques de génération et d’optimisation de code (M)" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II070> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA080> <http://www.w3.org/2000/01/rdf-schema#label> "Architectures et Styles d''Architectures" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZTASPM> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I3020> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1MS010> <http://www.w3.org/2000/01/rdf-schema#label> "Analyse des données" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II030> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZHCI> <http://example.org/course/objective> "At the end of this course, the student will be able to design an interactive system using adequate design methods. He will we able to choose an evaluation method and to carry out the evaluation of the system. He will be able to reuse the theoretical (HCI discipline, its history, its main concepts, principles and methods) and practical knowledge acquired during this course in order to write a paper in HCI." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1010> <http://example.org/course/content> "• Multiple standard techniques: KAOS, SYSML, and RELAX.\n• Specification with functional and non-functional requirements based on the elicited requirements.\n• Problem statement using standard analysis techniques like use cases, scenarios, assertions/contracts/invariants, classes, and transition systems.\n• Main modeling principles: Decomposition, Abstraction, and Information concealment.\n• Requirement engineering and its process." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II070> <http://example.org/course/content> "* Optimisation sans contrainte\n- Recherche en ligne (méthodes de la section dorée, de Newton, de la sécante)\n- Modèles linéaires et quadratiques d’une fonction à plusieurs variables\n- Conditions d'optimalité du premier et second ordre\n- Etude des formes quadratiques symétriques\n- Méthode de Newton\n- Méthode de la descente de gradient, analyse de convergence\n- Méthode des gradients conjugués, orthogonalité\n* Optimisation sous contraintes\n- Notions de variété, espace tangent, courbe admissible\n- Conditions d'optimalité du premier ordre (théorème de Khun-Tucker)\n- Méthode du gradient projeté\n- Multiplicateurs de Lagrange, interprétation économique\n- Méthode de pénalisation\n- Lagrangien, dualité\n- Méthode du lagrangien augmenté" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA030> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZVA> <http://www.w3.org/2000/01/rdf-schema#label> "Visual analytics" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1010> <http://www.w3.org/2000/01/rdf-schema#label> "Analyse, conception et mise en oeuvre de logiciels" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZCAAI> <http://example.org/course/parcours> "DS" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZMC> <http://www.w3.org/2000/01/rdf-schema#label> "Multimedia Communication" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZSKR> <http://example.org/course/content> "In the frame of web 3.0, semantic knowledge representation is concerned with   logic modeling of knowledge with ontologies (vocabulary for concepts and properties), model instantiation on entities (data annotation), and performing logic computation and inference (reasonings) depending on a goal.\nThe course introduce the principles and models and tools to model, annotate and make reasonings. These concepts are applied on linked data in order to process the data and knowledge stored into the web." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZ3CG> <http://example.org/course/objective> "At the end of this course, the student must know the visual human mechanisms involved in the depth perception. He will be able to use basic lightning algorithms and basic shaders programming. The student will also be able to take a critical look to 3D application and their use: he will be able to choose the interaction devices adapted to the type of rendering used and he will be able to choose a visual representation mode adapted to the a defined task with defined interaction device." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II010> <http://example.org/course/objective> "Au terme de cette UE les étudiants devront :\n• Connaître   les aspects théoriques en apprentissage automatique :\n- Connaissance globale du domaine, des enjeux.\n- Compréhension du vocabulaire, connaissance des différents algorithmes les plus classiques.\n• Connaître les différentes grandes familles de techniques d’apprentissage :\n- Plus proches voisins\n- Case base reasoning\n- Arbres de décision\n- Réseaux de neurones\n- Méthodes à noyau\n- Clustering" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1CI010> <http://example.org/course/parcours> "CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA080> <http://example.org/course/content> "- Introduction aux paradigmes objet, composant,agent, service et modèle dans les Architectures logicielles\n- Introduction aux styles Architecturaux\n- Un Modèle de style d'architecture\n- Dimensions quantitative et qualitative d'une architecture\n- Usage des styles d'architectures\n- Modèle d'évolution d'une architecture" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IOM30> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZCRLADR> <http://example.org/course/content> "Prerequisites : linear algebra, probability, statistics\nNot mandatory (they will be partly covered during the first courses) but valuable : basic machine learning (classification, regression), convex optimization\n1. Intro [Motivation, definitions, terminology, review linear algebra, probability and optimization, regression]\n2. Subspace learning [principal component analysis (PCA), statistical and geometrical viewpoint, indep. component analysis (ICA)]\n4. Manifold learning [MDS, ISOMAP, t-sne and other unsupervised manifold methods]\n5. Deep learning [restricted Boltzmann machines, auto encoders, deep belief networks, convolutional neural networks, recurrrent neural networks]\n6. Metric learning [(non)-linear, global/local, constraints setting, structured data]\nProject : Students should form groups of 2-4 members. A list of candidate papers will be posted, and each group should pick one from the list. Each group is required to give an oral presentation about the content of the paper in the last two weeks, and submit a report at the end. The report should include at the minimum a summary of the method/framework, and experimental results obtained by playing the code published along with the paper. Division of work should be determined by the members.\nGrading will be based on a project assignment (50%) and a final exam (50%)." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I2020> <http://example.org/course/content> "•\nProblème du flot maximum\n•\nProblème du flot maximum de coût minimum\n•\nProblèmes de transbordement\n•\nDistanciel : les réseaux petit-monde" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II060> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2MC050> <http://example.org/course/parcours> "ORO,CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1040> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZCAAI> <http://example.org/course/content> "Advanced clustering, co-clustering, semi-supervised classification. Probabilistic mixture models, topic models\nMatrix factorization\nTypical applications and experiments." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZPMASNA> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZPGMASRL> <http://www.w3.org/2000/01/rdf-schema#label> "Probabilistic Graphical Models and statistical relational learning" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1010> <http://example.org/course/objective> "• To be able to determine stakeholder requirements using multiple standard techniques: KAOS, SYSML, and RELAX methods.\n• To be able to produce a specification with functional and non-functional requirements based on the elicited requirements.\n• To be able to apply standard quality assurance techniques to ensure that requirements are: verifiable, traceable, measurable, testable, accurate, unambiguous, consistent, and\n• complete.\n• To be able to formulate a problem statement using standard analysis techniques like use cases, scenarios, assertions/contracts/invariants, classes, and transition systems.\n• To know the main modeling techniques: data modeling, behavior modeling, snapshots, mind-maps, user stories, and use cases.\n• To know the main modeling principles: Decomposition, Abstraction, and Information concealment.\n• To know the role of requirement engineering and its process.\n• To know the role of domain analysis and its process.\n• To be able to use object-oriented design basics like class, interaction (sequence and communication), collaboration, and activity diagrams.\n• To be able to use fundamental design principles, methods, patterns, frameworks, and strategies in the creation of a software system.\n• To be able to design software for reusability, extensibility, testability, and efficiency.\n• To know the differences between problems and solutions, and deal with their interactions.\n• To know agiles methods for design and development.\n• To know how to evaluate the soundness of a software design.\n• To know the main architectural principles: pipe-and-filter, transaction-centered, client-server, peer-to-peer, services, publish-subscribe, event-based, etc\n• To know the main design patterns.\n• To know the main design principles: Decomposition, Abstraction, Information concealment, Cohesion, Decoupling, Reusability, Reuse, Obsolescence anticipation, Portability, Testability, and Simplicity" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO040> <http://www.w3.org/2000/01/rdf-schema#label> "Optimisation en robotique" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO040> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZCAICD> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO010> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IOM10> <http://example.org/course/parcours> "ORO,CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X4II020> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IAIMT> <http://www.w3.org/2000/01/rdf-schema#label> "Composition et gestion avancées de systèmes répartis(EMN)" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3CI020> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA090> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I3010> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT020> <http://example.org/course/parcours> "ATAL" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3CI020> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA040> <http://example.org/course/objective> "1. Comprendre les principes et les objectifs de l'ingénierie dirigée par sur les modèles.\n2. Comprendre les différences entre la modélisation et la méta-modélisation.\n3. Comprendre les différences entre les langages spécifiques au domaine et les langages génériques.\n4. Connaître les différences entre la syntaxe abstraite , la syntaxe concrète et la sémantique d'un langage.\n5. Être capable de concevoir un langage spécifique au domaine.\n6. Être capable d'intégrer l'ingénierie basée sur les modèles dans le processus de développement logiciel.\n7. Être capable de réaliser des transformations de modèle à modèle.\n8. Être capable de réaliser effectuer des transformations de modèle à texte (génération de code)." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT040> <http://example.org/course/parcours> "ATAL" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II040> <http://example.org/course/content> "Concepts fondamentaux : différence entre éthique, déontologie et droit).\nEthique de la recherche : intégrité, plagiat, fraude, conflit d'intérêt, tensions, biais, publications. Questions spécifiques au numérique : dématérialisation, robotique, vie privée, informations personnelles impact sur le médecine, risques (sanitaires, environnementaux, technologiques), confirance, démocratie, informations versus connaissance" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1CI010> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZTASPM> <http://example.org/course/objective> "Students will be able to:\n- run through the main algorithms for mining sequential patterns, episodes and processes from a small dataset.\n- choose interestingness measures appropriate to the data and to the analyst' goals.\n- preprocess text corpuses and characterize them with patterns." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1020> <http://example.org/course/objective> "• To be able to create a test plan for a software system\n• To be able to apply functional and structural testing techniques to generate test data\n• To be able to apply different strategies for unit-level and system-level testing\n• To be able to apply principles and strategies of integration and regression testing\n• To be able to mesure test suite quality using mutant analysis and code coverage.\n• To know the purposes of metrics, quality processes, methods for measuring that quality, and standards used\n• To know load, stress and acceptance tests.\n• To know different open-source tools for testing and quality assurance.\n• To know techniques for code instrumentation.\n• To know test driven development." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I2010> <http://example.org/course/objective> "- Maîtriser les notions de contrainte, de fonction objectif, de satisfaction et d'optimisation de problème.\n- Connaître les problèmes classiques de satisfaction de contraintes et d'optimisation sous contraintes.\n- Comprendre les principes basiques d'une recherche arborescente (propagation, filtrage, ...).\n- Comprendre les principes basiques d'une recherche locale (voisinage, coût d'une contrainte, ...).\n- Savoir implémenter un algorithme basique (de recherche arborescente ou de recherche locale) pour résoudre un problème de satisfaction de contraintes.\n- Savoir modéliser une instance simple de problème de satisfaction de contraintes à travers un langage adapté (comme minizinc)." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IOM10> <http://example.org/course/objective> "- To know different facets of constraint (checking, filtering, counting, cost violation, reification, explanation)   (I)\n- To know basic notions behind a constraint engine (coroutine, services) (A)\n- To know basic notions for filtering (fail, entailment, saturation) (A)\n- To be able to model with the two most used contraints (alldifferent, element) (M)\n- To be able to model with counting constraints (gcc, nvalue) (M)\n- To be able to model with packing and scheduling constraints (disjunctive, cumulative, diffn) (A)\n- To be able to model with graph constraints (cycle, tree) (A)\n- To understand basic principles for creating search heuristics (A - M)\n- To be able to create automata constraints (A)\n- To know how to break variable and value symmetries (A)\n- To get the notion of sweep based filtering algorithm (and defining forbidden regions wrt some variables and constraint) (I)" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO010> <http://example.org/course/parcours> "ORO,CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZDDADI> <http://example.org/course/parcours> "DS" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I2010> <http://example.org/course/parcours> "ORO,CMI" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA050> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II110> <http://www.w3.org/2000/01/rdf-schema#label> "Research Project" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II020> <http://www.w3.org/2000/01/rdf-schema#label> "Langages de programmation de haut-niveau" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II110> <http://example.org/course/objective> "- Mettre en oeuvre sa capacité d'analyse sur un sujet de recherche, et être force de proposition.\n- Synthétiser le travail effectué dans un compte rendu de manière concise, correcte, et complète.\n- Préparer des supports puis présenter oralement le travail effectué de manière dynamique et convaincante." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I5010> <http://example.org/course/objective> "Au terme de cette UE les étudiants devront :\n• Connaître les aspects théoriques généraux en :\n- Probabilités : connaissances concernant les probabilités discrètes et continues\n- Statistiques : éléments permettant de valider des hypothèses, de maîtriser des scenarios de tests, de décider de la validité de résultats expérimentaux\n• Connaitre les éléments de la théorie des langages qui reposent sur l'ajout de probabilités aux modèle\n- Automates probabilistes et modèles de Markov\n- Grammaires hors contexte probabilistes\n- Transducteurs probabilistes" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/YG9U15-> <http://example.org/course/objective> "At the end of this course, the student will be able to go through the differents steps of a computer vision process :\n- define the subtasks a complete process\n- choose the appropriate datasets, apply necessary preprocessings\n- train, optimize and use classical machine learning tools (GMM, MLP, SVM, deeplearning)\n- evaluate the spatial relations between objects\n- understand a grammar based system to parse complex objects" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZRMACS> <http://example.org/course/objective> "Upon completion, the student will have gained experience in semi-autonomous research work, yet with a guided methodology. They will get personalised tutoring on how to apply the general guidelines\nof the teaching unit to their work." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I4010> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I4020> <http://www.w3.org/2000/01/rdf-schema#label> "Ingénierie des réseaux" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X4II010> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I5010> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZVA> <http://example.org/course/parcours> "DS" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/YG9U17-> <http://example.org/course/parcours> "ATAL,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA050> <http://www.w3.org/2000/01/rdf-schema#label> "Gestion de Projet" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZIV> <http://example.org/course/parcours> "VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1060> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I2010> <http://example.org/course/objective> "contrainte (Rappel - Remise à niveau) [A]" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1020> <http://www.w3.org/2000/01/rdf-schema#label> "Test logiciel" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA010> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT020> <http://www.w3.org/2000/01/rdf-schema#label> "Insertion professionnelle" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZPGMASRL> <http://example.org/course/objective> "Upon completion, the student will\n- be able to model simple problems with simple probabilistic graphical models such as Bayesian networks or Markov networks\n- understand probabilistic inference and parameter/Structure learning algorithm dedicated to such models\n- understand extensions of PGMs dealing with time problems or relational data" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZDELAE> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO080> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1MS010> <http://example.org/course/objective> "A l’issue de ce cours, les étudiants pourront mettre en pratique, grâce au logiciel libre R, des outils statistiques d’analyse des données tels que l’Analyse en Composantes Principales, l’Analyse Factorielle des Correspondances ou l’Analyse Factorielle Discriminante, pour synthétiser l’information contenue dans des jeux de données de grande dimension à l’aide de cartes." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZFLAEC> <http://www.w3.org/2000/01/rdf-schema#label> "French langage and European culture" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1080> <http://example.org/course/content> "Partie 1 : Logique et Preuves de Programmes\nCette partie est consacrée à la spécification et à la preuve de correction de programmes avec la logique de Hoare, les systèmes de types et les assistants de preuves tels que Coq\nPartie 2 : Modélisation et construction correcte par raffinement\nCette partie couvre la modéliation formelle à l'aide d'invariants, la construction correcte de systèmes par raffinements et les preuves de correction (avec B/Event B)." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZDELAE> <http://example.org/course/objective> "Upon completion, students will be able to :\n- relate data analysis tasks and economic motivations and models in the digital economy\n- relate the legal and privacy and algorithmics of privacy-preserving and discrimination-preserving technologies\n- take advantage of mathematical models and software tools that exploit personal data to create economic value (recommendation, crowdsourcing)" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II020> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT070> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/YG9U15-> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I3010> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1010> <http://example.org/course/parcours> "ALMA" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZMC> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA100> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2MC050> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1LI010> <http://example.org/course/objective> "A l’issue de cet enseignement, l’étudiant devra être capable de :\n• avoir des compétences transversales pour qu'il soit acteur de son avenir professionnel.\n• maîtriser des outils méthodologiques de management et de gestion de projet de façon pratique.\n• connaître les outils de base du management d'équipe en les ayant vécu dans son projet\n• maîtriser des outils de construction de valorisation économique d'un projet innovant\n• construire un projet valorisable économiquement au sein d'une équipe.\n• avoir des compétences transversales telles que manager un projet, s'exprimer en public lors de la présentation du projet devant un jury\n• communiquer à l'écrit selon les règles normalisées de l'entreprise, être en mesure d'identifier les besoins des entreprises en lien avec son projet, être force de proposition dans ses futures fonctions professionnelles." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I5010> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I4020> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II060> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO080> <http://example.org/course/objective> "- To know the notion of feasible set, outcome set, solution, point, (weakly) efficient, (weakly) nondominated point, lexicographically optimal solution (M)\n- To know the ideal point and the nadir point, the way to compute these points and the difficulty in their computation (M)\n- To know the main scalarization methods (weighted sum, e-constraint, weighted tchebychev method) and their properties (A)\n- To know the geometrical properties of the feasible set and the outcome set of a MOLP (M)\n- To know the geometrical and topological properties of the efficient set and the nondominated set of a MOLP (M)\n- To be able to apply the parametric simplex algorithm to solve a bi-objective linear programme (A)\n- To know the topological property of the feasible, outcome, efficient, nondominated sets of a Multi- Objective Combinatorial Optimization (MOCO) problem (M)\n- To know the classification of efficient solutions and nondominated points, and the notion of complete set (M)\n- To know results about connectedness and non-connectedness of efficient solutions of MOCO problems (M)\n- To be able to apply the e-constraint algorithm with adaptive step to solve a bi-objective combinatorial problem (A)\n- To be able to apply the weighted sum scalarization to compute a complete set of extreme supported solution of a bi-objective combinatorial optimization problem (A)\n- To be able to define and update the search area of a bi-objective combinatorial optimization problem (Phase 2 of the two phase method) (A)\n- To know the main strategies (variable fixing, ranking, branch and bound) to explore the search area, and to be able to apply them (Phase 2 of the two phase method) (M)\n- To know the notion of bound sets (M)\n- To be able to apply a branch and bound algorithm to solve a bi-objective combinatorial optimization problem (A)\n- To be able to apply a dynamic programming algorithm for multi-objective combinatorial optimization problem, application to the shortest path problem (A)" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1LA010> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT080> <http://example.org/course/parcours> "ATAL" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZPGMASRL> <http://example.org/course/parcours> "DS" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO030> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II020> <http://example.org/course/content> "Après avoir vu différentes caractéristiques des langages de programmation en général (interprétation/compilation, typage des variables/des données, typage statique/dynamique, paradigmes impératif/fonctionnel/objet), l’étudiant sera amené à créer des structures de données ou à utiliser des structures de données déjà implémentées dans des bibliothèques, avec un regard critique sur leurs qualités (temps d’exécution, empreinte mémoire).\nCes structures de données seront utilisées pour des algorithmes d’algèbre linéaire, de calcul probabiliste (définition et utilisation de générateur aléatoire en particulier), de théorie des graphes." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1LA010> <http://example.org/course/content> "Se préparer pour obtenir une certification en anglais (objectif B2 et +)\n• Présentation des formats\n• Exercices d’entrainement\n• Conseils pour optimiser son score" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO040> <http://example.org/course/objective> "At the end of this course, students will be able to :\n* understand the kinematic models of various serial and parallel robotic manipulators (Understanding) ;\n* describe a variety of optimization problems in robotics and identify the corresponding classes of numerical constrained optimization problem (Analysis) ;\n* model a variety of robotic problems as numerical constrained optimization problems and solve them using an appropriate method (Synthesis) ;" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X4II010> <http://example.org/course/parcours> "ATAL,ORO,CMI,ALMA" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZDDADI> <http://www.w3.org/2000/01/rdf-schema#label> "Data dependencies and data integration" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZCAICD> <http://www.w3.org/2000/01/rdf-schema#label> "Conferences and invited courses (DS)" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA090> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZ3CG> <http://example.org/course/content> "1.   Realtime 3D general concepts\n2.   3D Perception\n• Visual depth perception\n• 3D and Interaction\n3. Computer graphics\n• Overview and Basic Math for 3D programming\n• OpenGL, Lighting and shadowing\n• Introduction of Shaders programming 4 Camera calibration\n• Extrinsic and intrinsic parameters\n• Multi camera\n5 Applications (projcet)\n• Virtual reality at scale 1:1\n• Augmented Reality with dedicated peripherals" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA040> <http://example.org/course/parcours> "ALMA" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA090> <http://example.org/course/parcours> "ALMA" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZCRLADR> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II030> <http://example.org/course/content> "Rappels sur la classification des grammaires et des automates.\nAnalyse lexicographique : utilisation des automates d'états finis déterministes pour extraire des mots significatifs (tokens) d'un programme source, utilisation de l'outil LEX.\nAnalyse syntaxique ascendante et descendante : études des méthodes d'analyse avec et sans rebroussement;\nProblème de l'efficacité de l'analyse syntaxique ; Grammaires LL(k), Grammaires LL(1) ; L'analyse syntaxique LL(1) ; Recherche des premiers et des suivants ; Descente récursive ; Grammaires LR(k), SLR, LALR et LR(1) ;\nUtilisation d'un constructeur d'analyseurs LR : YACC. Analyse sémantique : Construction de l'arbre sémantique ;\nCode machine et code intermédiaire ; Analyse sémantique dirigée par la syntaxe ; Actions sémantiques.\nGénération de code : Génération de code machine ; Génération de code intermédiaire ; Déclarations et instructions ; Sémantique des différentes instructions des langages de programmation évolués. Principes de l'interprétation. Optimisation de code : Compilateurs optimisants ; Amélioration des performances ;" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II020> <http://example.org/course/content> "Le Data Mining est l'application des techniques de statistique, d'analyse de données et d'intelligence artificielle pour l'exploration et l'analyse des grandes bases de données d'un système d'information. Cette UE traite donc :\n- des techniques elles-mêmes, avec un approfondissement sur les méthodes essentielles de la modélisation statistique   (régression linéaire, analyse discriminante, régression logistique) ;\n- de la mise en oeuvre des techniques (préparation des données, validation et combinaisons de modèles, industrialisation des modèles)." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IAIMT> <http://example.org/course/parcours> "ALMA" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1MC060> <http://www.w3.org/2000/01/rdf-schema#label> "Méthodes numériques déterministes" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/YG9U17-> <http://example.org/course/content> "1. Visual perception: physiology and theories\n• The physics of vision and physiological basis of visual perception (retina, visual pathways, visual cortex)\n• Spatial vision, Color perception, Depth perception, Visual motion perception\n• Shape and object perception. Visual perception theories: Gestalt, Brunswik's probabilistic functionalism, neurophysiological approach, Gregory's theory, Gibson's theory, Marr's computationnal approach\n2. Visual Experiments and modeling\n• Fundamentals of psychophysics, visual perception experiments with humans\n• Visual attention and eytracking experiments, cognitive aspects\n3. Applications: perceptual based processing\n• Perceptual watermarking, Video and image quality assessment, Perceptual image and video coding\n• 3D, stereo and autostereo applications" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II090> <http://www.w3.org/2000/01/rdf-schema#label> "Stage" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II030> <http://example.org/course/objective> "• Savoir manipuler les notations standards des ordres de grandeurs et des complexité d'algorithmes: O(), Omega(), Theta()\n• Savoir évaluer la complexité (taille mémoire et temps de calcul) d'un algorithme donné\n• Savoir comparer les performances des structures de données standards sur des algorithmes de recherche, d'insertion et de suppression d'éléments\ndans de grands volumes de données\n• Savoir comparer la complexité de plusieurs algorithmes résolvant le même problème, et argumenter le choix d'un algorithme par rapport à sa complexité\n• Connaître et savoir interpréter les principales classes de complexité d'un problème, notamment les classes P, NP, NP-dur, NP-complet\n• Comprendre et savoir manipuler la notion de réduction polynomiale\n• Etre capable de réaliser des réductions polynomiales pour montrer qu'un problème est NP-dur\n• Etre capable, étant donné un problème nouveau, de déterminer la classe de complexité à laquelle il appartient\n• Etre capable, étant donné un problème NP-dur, d'identifier des sous-classes d'instance polynomiales\n• Connaître les classes de complexité avancées d'un problème, notamment les classes FPTAS, PTAS, APX, APX-dur, APX-complet, FPT, W[1]-dur\n• Comprendre et savoir manipuler la notion d'inapproximation d'un problème\n• Comprendre la notion de réduction polynomiale préservant l'approximation\n• Etre capable démontrer qu'un problème est approximable à ratio constant\n• Connaître les techniques classiques permettant de prouver qu'un problème est FPT (Fixed- Parameter Tractable)\n• Etre capable de démontrer qu'un problème est FPT" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I3010> <http://example.org/course/objective> "A l'issue de ce cours, l'étudiant doit être capable de:\n• mettre en œuvre des programmes multicœurs en utilisant des threads en Java;\n• identifier les problèmes de concurrence au sein de ses programmes, nécessitant de la synchronisation entre les threads;\n• spécifier précisément le problème qu'il doit résoudre, en identifiant notamment les propriétés de sûreté et de vivacité à vérifier;\n• évaluer la difficulté de son problème en le reliant à des classes de calculabilité du calcul réparti, notamment en utilisant la notion de \"consensus number\";\n• choisir les outils nécessaires et suffisants (verrous, instructions spéciales, barrières de mémoire...) pour résoudre son problème." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/YG9U15-> <http://example.org/course/content> "• Data preprocessing (normalization), Feature extraction\n• Classification :\n- Mixture models (GMM), Bayesienne decision\n- Neural Networks (from MLP to deep-learning), Kernel Machines (SVM), Semi-supervised learning\n- Structure recognition (spatial relation analysis, 1D / 2D grammar based system, CYK parsing)\n- Data set properties (size, diversity, labeling cost)\n• Applications :\n- Offline and Online Handwriting recognition\n- Visual object recognition" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/YG9U17-> <http://example.org/course/objective> "At the end of this course, the student will be able to design an experiment that allows him to measure some properties of the human visual system. He should be able to analyse these measure in order to create some theoretical or computational models. He / she will also be able to reuse the theoretical and practical knowledge acquired during this course in order to design and evaluate image and video processing algorithms that take into account the properties of the human visual system." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1040> <http://example.org/course/parcours> "ATAL,DS,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA060> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1LI010> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I2010> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I1010> <http://example.org/course/objective> "• Etre capable de concevoir un modèle de données OLAP multidimensionnel en étoile et en flocon de neige pour application concrète.\n• Comprendre le processus ETL (Extract, Transform, Load).\n• Connaître les opérateurs de requêtes OLAP (CUBE, ROLLUP, RANK, Top N, etc.).\n• Avoir une bonne pratique des technologies Web XML, DTD, XMLSchema, XPath, XQuery, XSLT, etc.\n• Comprendre les limitations de l’approche relationnel face aux nouvelles applications.\n• Connaître les nouvelles approches orientées données, NoSQL et NewSQL.\n• Savoir appliquer la bonne approche de données pour une application donnée." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II020> <http://www.w3.org/2000/01/rdf-schema#label> "Data Mining" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO020> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT010> <http://example.org/course/parcours> "ATAL" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II020> <http://example.org/course/parcours> "ATAL,ORO,DS,CMI,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZCAAI> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT070> <http://example.org/course/parcours> "ATAL" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZID> <http://example.org/course/content> "During the internship, the student will conduct a research work either in a university lab or in the R&D department of a private company." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I2030> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II040> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X4II020> <http://www.w3.org/2000/01/rdf-schema#label> "rapports de stage en anglais" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II030> <http://www.w3.org/2000/01/rdf-schema#label> "Complexité et algorithmes" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X4II030> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZ3CG> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3CI030> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT030> <http://example.org/course/content> "Connaissance et acquisition des principales techniques de recherche de motifs dans les textes de grande taille :\n• sans pré-traitement, avec pré-traitement sur le texte et/ou le motif\n• motif exact ou approché\nConnaissance et acquisition des algorithmes associés et de leur complexité.\nComparaison des avantages/inconvénients des techniques présentées, en fonction du contexte d'utilisation.\nConnaissances des principaux algorithmes d’alignement bilingue à partir de corpus.\n1. Recherche exacte de motifs\n• Recherche de motifs par fenêtre glissante\n• Prétraitement du motif\n• Algorithme de Knuth-Morris-Pratt et variantes\n• Algorithme de Boyer-Moore et variantes\n• Correction et évaluation du temps d'exécution\n• Recherche de motifs dans des textes statiques\n• Arbres et arbres compacts des suffixes : définition, construction\n• Automates des suffixes : construction par minimisation de l'arbre des suffixes\n• Recherche de motifs, de répétitions, de marqueurs dans un ou plusieurs textes\n2. Algorithmes d'alignement et Recherche approchée de motifs\n• Transformations : substitution, effacement, insertion\n• Alignement local, alignement global, alignement pondéré\n• Distance de Hamming, distance de Levenshtein, distance d'édition pondérée\n• Algorithme d'alignement de Needleman-Wunch, et sa variante pondérée\n• Recherche de mot avec k différences.\n3. Alignement bilingue\n• Alignement en corpus parallèle\n• Alignement en corpus comparable" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO060> <http://example.org/course/content> "•\n1. Bio-informatics: Introduction and First Problems\n•\n2. Sorting by Reversals (and Variants)\n•\n3. The GRAPH MOTIF Problem\n•\n4. Coping with Hardness in Bio-informatics" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA020> <http://example.org/course/parcours> "ATAL,ALMA" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1LA010> <http://example.org/course/objective> "A l’issue de cet enseignement, les étudiants seront capables de :\n• Reconnaitre et anticiper les formats de certifications d’anglais.\n• Compléter les réponses exigées par les tests de certifications.\n• Pouvoir optimiser leurs résultats aux certifications grâce à une méthodologie de travail appliquée lors des séances d’entrainement." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO030> <http://example.org/course/objective> "• explain the pros&cons of interval computations and their usage for solving nonlinear optimization problems (Understanding)\n• choose and apply the classical interval operators adapted to a global optimization problem (Analysis)\n• explain the role of the components of a branch-and-prune/bound algorithm, and choose the appropriate components for a given global optimization problem (Synthesis)" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I4020> <http://example.org/course/content> "Adressage et routage IP (v4, v6)\nProtocole de routage dynamique (RIP, OSPF, BGP) Protocole IP et résolution d’adresse ARP et protocole ICMP\nLes réseaux sans fil : IEEE 802.11, IEEE802.15, Internet of Things (IoT) Les réseaux virtuels (VLAN)\nLa sécurité dans les réseaux (filaire, sans-fil, protocole, cryptographie)\nPolitique de la sécurité, les solutions, le coûts - La Cyberdéfense contre la Cybercriminalité La virtualisation (SDN/NFV/Cloud)\nPratique et projets : mise en oeuvre de routage (Packet Tracer), plateforme IoT" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II020> <http://example.org/course/objective> "A l'issue de ce cours, l'étudiant est capable d'expliquer les différentes tâches de l'ECD, et les principes fondamentaux des méthodes et algorithmes qui s'y rattachent. Il sait également identifier les techniques à utiliser en fonction des données étudiées et des objectifs poursuivis.\n(Maîtrise)\nA l'issue de ce cours, l'étudiant est capable de mettre en oeuvre un processus d'ECD à l'aide d'un logiciel de fouille de données, de la préparation des données à l'évaluation et la validation des modèles prédictifs.\n(Application)\nA l'issue de ce cours, l'étudiant est capable d'industrialiser des modèles prédictifs au sein d'un système d'information.\n(Notions)\nA l'issue de ce cours, l'étudiant est capable de dérouler sur un jeu de données jouet les algorithmes pour la sélection de variables et la discrétisation de variables. Il sait également expliquer les principales techniques pour l'imputation des données manquantes.\n(Maîtrise)\nA l'issue de ce cours, l'étudiant est capable de mener les calculs pour estimer les paramètres d'un modèle linéaire, tester leur significativité, et évaluer la qualité de l'ajustement.\n(Maîtrise)\nA l'issue de ce cours, l'étudiant est capable de mettre en oeuvre les méthodes linéaires de modélisation et prévision statistique à l'aide du langage R.\n(Maîtrise)\nA l'issue de ce cours, l'étudiant est capable d'évaluer et d'optimiser un modèle de scoring. (Maîtrise)" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT030> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZFLAEC> <http://example.org/course/objective> "Upon completing the course in French as a foreign language, students will be able to :\n• introduce themselves giving basic information about their country, family, studies\n• greet native speakers in an appropriate way\n• interact with native speakers in routine basic tasks (shopping, ordering at a restaurant)\n• fill in registration forms" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZRMACS> <http://example.org/course/parcours> "DS" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT030> <http://example.org/course/objective> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZSKR> <http://example.org/course/parcours> "DS" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I2030> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IA100> <http://example.org/course/parcours> "ALMA" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZFLAEC> <http://example.org/course/level> "M2" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1CI010> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZVA> <http://example.org/course/content> "1- Introduction to data visualization\nhuman factors, marks and visual channels, mappings, common errors, classical data visualisations, tools, etc.\n2- Data representation techniques\nclustering and dimensionality reduction, trees and network representations, time series representations, 3D representations, etc.\n3- Designing and evaluating interactive visual analytics systems\nanalytics loop, types of interactions in visual analytics, design methods, evaluation methods, etc. 4- Projects\n10 courses of 2h each.\nEach student will present one or two times during the course.\nThe project will consist in choosing a data analysis algorithm / method, and design (paper + Tableau) an interactive dataviz for an analyst to study the data, the results of the algorithm as well as the quality metrics, while allowing to relaunch the algorithm.\nWritten examination at the end." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/YG9U15-> <http://www.w3.org/2000/01/rdf-schema#label> "Machine learning for computer vision" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/YG9U17-> <http://www.w3.org/2000/01/rdf-schema#label> "Perceptual computing" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IT080> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II090> <http://example.org/course/content> "nan" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1010> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZPMASNA> <http://example.org/course/parcours> "DS" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZPGMASRL> <http://example.org/course/content> "Probabilistic graphical models (PGMs) are an interesting framework for encoding probability distributions over complex domains. These representations sit at the intersection of statistics and computer science, relying on concepts from probability theory, graph algorithms, machine learning, and more.\nThis course describes two basic PGM representations: Bayesian Networks, which rely on a directed graph; and Markov networks, which use an undirected graph. One last part of the course is dedicated to various extensions of these models (dynamic Bayesian networks, probabilistic relational models, Markov logic networks)." <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZID> <http://example.org/course/parcours> "DS" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1030> <http://example.org/course/parcours> "ATAL,DS,ALMA,VICO" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO070> <http://example.org/course/objective> "Comprendre la mise au point et l'utilisation des méthodes d'optimisation dans le milieu de l'entreprise (E)" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/ZZFLAEC> <http://example.org/course/content> "Grammar\n• tenses : présent, futur proche, passé proche, the imperative\n• questions and negations\n• pronouns (subject and object)\n• some irregular verbs (être, avoir, prendre, faire, aller, venir) Vocabulary\n• days of the week, months, numbers, jobs, food items, clothes, modes of transportation, nationalities...\nPhonetics\n• difficult vowel and consonant sounds\n• liaisons\nCulture and civilization\n• the outdoor market, Christmas, food and meals, the pace of life in France" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1I1060> <http://example.org/course/parcours> "ALMA" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X1II030> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X3IO070> <http://www.w3.org/2000/01/rdf-schema#label> "Conferences" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2II100> <http://www.w3.org/2000/01/rdf-schema#label> "Applications industrielles sur les données" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
<http://example.org/course/X2I5020> <http://example.org/course/level> "M1" <http://readrdf.org/d8cb4d4c9ee9af4f1f2879d9629b0b0be34b1c6a8f74102e323a7638f2f73618> .
_:N2661f0e14e24418a9cd6082b6929ddb2 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Project_Management.txt> <http://example.org/course/X3CI030> .
_:N37be9886e3e24ed5b0af94553ca06050 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Architecture_and_Organization_AR/AR-Assembly_Assembly_Level_Machine_Organization.txt> <http://example.org/course/X3CI030> .
_:N37be9886e3e24ed5b0af94553ca06050 <http://example.org/has_chunk> "AR-Assembly: Assembly Level Machine Organization\nCS Core:\n1. von Neumann machine architecture\n2. Control unit: instruction fetch, decode, and execution (See also: OS-Principles)\n3. Introduction to SIMD vs MIMD and the Flynn taxonomy (See also: PDC-Programs, OS-Scheduling,\nOS-Process)\n104\n4. Shared memory multiprocessors/multicore organization (See also: PDC-Programs, OS-Scheduling)\nKA Core:\n5. Instruction set architecture (ISA) (e.g., x86, ARM and RISC-V)\na. Fixed vs variable-width instruction sets\nb" <http://example.org/course/X3CI030> .
_:N2661f0e14e24418a9cd6082b6929ddb2 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Project Management: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Project Management.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X3CI030> .
<http://example.org/course/X3CI030> <http://example.org/is_aligned_with> _:N37be9886e3e24ed5b0af94553ca06050 <http://example.org/course/X3CI030> .
_:N37be9886e3e24ed5b0af94553ca06050 <http://example.org/has_score> "0.64384496"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3CI030> .
<http://example.org/course/X3CI030> <http://example.org/is_aligned_with> _:N6f9450d302d449afaf5f5d7b7eb03415 <http://example.org/course/X3CI030> .
<http://example.org/course/X3CI030> <http://example.org/is_aligned_with> _:N2661f0e14e24418a9cd6082b6929ddb2 <http://example.org/course/X3CI030> .
_:N2661f0e14e24418a9cd6082b6929ddb2 <http://example.org/has_score> "0.66037047"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3CI030> .
_:N6f9450d302d449afaf5f5d7b7eb03415 <http://example.org/has_score> "0.6415438"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3CI030> .
_:N6f9450d302d449afaf5f5d7b7eb03415 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Systems_Systems_Execution_and_Memory_Model.txt> <http://example.org/course/X3CI030> .
_:N6f9450d302d449afaf5f5d7b7eb03415 <http://example.org/has_chunk> ". Manual memory management: allocating, de-allocating, and reusing heap memory\nd. Automated memory management: garbage collection as an automated technique using the\nnotion of reachability\n7. Green computing. (See also: SEP-Sustainability)\nIllustrative learning outcomes:\nCS Core:\n1. Explain how a core language construct, such as data abstractions and control abstractions, is\nexecuted.\n2" <http://example.org/course/X3CI030> .
_:N984b606c2e1c4813ae6d5bd8eed2b95f <http://example.org/has_score> "0.6845316"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IAIMT> .
_:Nf3d58f6a917744f4a9532fe504ce5c07 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Software Architecture: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Software Architecture.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X3IAIMT> .
_:N48509945485f42248d9625a7e4c0cd91 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nGIT-Virtual Reality: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of GIT-Virtual Reality.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X3IAIMT> .
<http://example.org/course/X3IAIMT> <http://example.org/is_aligned_with> _:N984b606c2e1c4813ae6d5bd8eed2b95f <http://example.org/course/X3IAIMT> .
<http://example.org/course/X3IAIMT> <http://example.org/is_aligned_with> _:N48509945485f42248d9625a7e4c0cd91 <http://example.org/course/X3IAIMT> .
_:N48509945485f42248d9625a7e4c0cd91 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-Virtual_Reality.txt> <http://example.org/course/X3IAIMT> .
<http://example.org/course/X3IAIMT> <http://example.org/is_aligned_with> _:Nf3d58f6a917744f4a9532fe504ce5c07 <http://example.org/course/X3IAIMT> .
_:Nf3d58f6a917744f4a9532fe504ce5c07 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Software_Architecture.txt> <http://example.org/course/X3IAIMT> .
_:Nf3d58f6a917744f4a9532fe504ce5c07 <http://example.org/has_score> "0.67981946"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IAIMT> .
_:N48509945485f42248d9625a7e4c0cd91 <http://example.org/has_score> "0.68662137"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IAIMT> .
_:N984b606c2e1c4813ae6d5bd8eed2b95f <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Maintenance_and_Evolution.txt> <http://example.org/course/X3IAIMT> .
_:N984b606c2e1c4813ae6d5bd8eed2b95f <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Maintenance and Evolution: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Maintenance and Evolution.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X3IAIMT> .
_:N205be1059f554fbf8f538b0f24cb2616 <http://example.org/has_score> "0.70259964"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO020> .
_:Nb442e489cd56430e8a6f6fbf3db17c35 <http://example.org/has_score> "0.7177468"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO020> .
<http://example.org/course/X3IO020> <http://example.org/is_aligned_with> _:N205be1059f554fbf8f538b0f24cb2616 <http://example.org/course/X3IO020> .
_:N4e74c62a57fb41e99b114e1bb7892c93 <http://example.org/has_score> "0.71157354"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO020> .
_:N4e74c62a57fb41e99b114e1bb7892c93 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Functional_Functional_Programming.txt> <http://example.org/course/X3IO020> .
<http://example.org/course/X3IO020> <http://example.org/is_aligned_with> _:N4e74c62a57fb41e99b114e1bb7892c93 <http://example.org/course/X3IO020> .
_:N4e74c62a57fb41e99b114e1bb7892c93 <http://example.org/has_chunk> ". (See also: FPL-Logic)\n10. Integration with other programming paradigms such as imperative and object-oriented.\nIllustrative learning outcomes:\nCS Core:\n1. Develop basic algorithms that avoid assigning to mutable states or considering reference equality.\n2. Develop useful functions that take and return other functions.\n3. Compare and contrast how computational solutions to a problem differ in procedural, functional,\nand object-oriented approaches.\n4" <http://example.org/course/X3IO020> .
<http://example.org/course/X3IO020> <http://example.org/is_aligned_with> _:Nb442e489cd56430e8a6f6fbf3db17c35 <http://example.org/course/X3IO020> .
_:Nb442e489cd56430e8a6f6fbf3db17c35 <http://example.org/has_chunk> ". (See also: AI-LRR)\n13. Integration with other programming paradigms such as object-oriented programming.\n14. Advance programming constructs such as difference-lists, creating user defined data structures, set\nof, etc.\nIllustrative learning outcomes:\nKA Core:\n1. Use a logic language to implement a conventional algorithm.\n2. Use a logic language to implement an algorithm employing implicit search using clauses, relations,\nand cuts.\n3" <http://example.org/course/X3IO020> .
_:N205be1059f554fbf8f538b0f24cb2616 <http://example.org/has_chunk> ".\n3. Explain side-effect using global and nonlocal variables and how to fix such programs.\n4. Explain how programs that process other programs treat the other programs as their input data.\n5. Describe a grammar and an abstract syntax tree for a small language.\n6. Describe the benefits of having program representations other than strings of source code.\n7. Implement a program to process some representation of code for some purpose, such as an\ninterpreter, an expression optimizer, or a documentation generator" <http://example.org/course/X3IO020> .
_:Nb442e489cd56430e8a6f6fbf3db17c35 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Logic_Logic_Programming.txt> <http://example.org/course/X3IO020> .
_:N205be1059f554fbf8f538b0f24cb2616 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Abstraction_Program_Abstraction_and_Representation.txt> <http://example.org/course/X3IO020> .
<http://example.org/course/X1I1030> <http://example.org/is_aligned_with> _:N6d0b8ddbda634800b62af4d9c426cd3b <http://example.org/course/X1I1030> .
_:Naa49c1649eb8457d9694339d7d9d65fd <http://example.org/has_score> "0.64998424"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I1030> .
_:Naa49c1649eb8457d9694339d7d9d65fd <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Models_Computational_Models_and_Formal_Languages.txt> <http://example.org/course/X1I1030> .
_:N6d0b8ddbda634800b62af4d9c426cd3b <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://example.org/course/X1I1030> .
_:Naa49c1649eb8457d9694339d7d9d65fd <http://example.org/has_chunk> ".\n2. Given a problem, develop an appropriate automaton that addresses the problem.\n3. Develop a regular expression for a given regular language expressed in natural language.\n4. Explain the difference between regular expressions (Type-3 acceptors) and the regular expressions\n(Type-2 acceptors) used in programming languages.\n5. For each formal model in this unit:\na. Explain its definition comparing its characteristics with the others in this unit,\nb" <http://example.org/course/X1I1030> .
_:N6defa4ce26ac44119e45cedac3d95fd1 <http://example.org/has_chunk> "DM-Querying: Query Construction\nCS Core:\n1. SQL Query Formation\na. Interactive SQL execution\nb. Programmatic execution of an SQL query\nKA Core:\n2. Relational Algebra\n3. SQL\na. Data definition including integrity and other constraint specifications\nb. Update sublanguage\nNon-core:\n4. Relational Calculus\n5. QBE and 4th-generation environments\n6. Different ways to invoke non-procedural queries in conventional languages\n7. Introduction to other major query languages (e.g., XPATH, SPARQL)\n8" <http://example.org/course/X1I1030> .
<http://example.org/course/X1I1030> <http://example.org/is_aligned_with> _:Naa49c1649eb8457d9694339d7d9d65fd <http://example.org/course/X1I1030> .
_:N6defa4ce26ac44119e45cedac3d95fd1 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Date_Management_DM/DM-Querying_Query_Construction.txt> <http://example.org/course/X1I1030> .
_:N6defa4ce26ac44119e45cedac3d95fd1 <http://example.org/has_score> "0.649146"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I1030> .
<http://example.org/course/X1I1030> <http://example.org/is_aligned_with> _:N6defa4ce26ac44119e45cedac3d95fd1 <http://example.org/course/X1I1030> .
_:N6d0b8ddbda634800b62af4d9c426cd3b <http://example.org/has_score> "0.6526563"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I1030> .
_:N6d0b8ddbda634800b62af4d9c426cd3b <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://example.org/course/X1I1030> .
_:Nedbe6b0a3bb14087a821bd5f01ba86da <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-Vision_Perception_and_Computer_Vision.txt> <http://example.org/course/ZZCRLADR> .
_:Nedbe6b0a3bb14087a821bd5f01ba86da <http://example.org/has_score> "0.7773295"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZCRLADR> .
<http://example.org/course/ZZCRLADR> <http://example.org/is_aligned_with> _:N375c9db616be403d8543dceaea311a40 <http://example.org/course/ZZCRLADR> .
<http://example.org/course/ZZCRLADR> <http://example.org/is_aligned_with> _:Nedbe6b0a3bb14087a821bd5f01ba86da <http://example.org/course/ZZCRLADR> .
_:N375c9db616be403d8543dceaea311a40 <http://example.org/has_score> "0.7864264"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZCRLADR> .
_:N375c9db616be403d8543dceaea311a40 <http://example.org/has_chunk> ".\n4. Apply two or more simple statistical learning algorithms to a classification task and measure the\nclassifiers’ accuracy.\n5. Identify overfitting in the context of a problem and learning curves and describe solutions to\noverfitting.\n6. Explain how machine learning works as an optimization/search process.\n7. Implement a statistical learning algorithm and the corresponding optimization process to train the\nclassifier and obtain a prediction on new data.\n8" <http://example.org/course/ZZCRLADR> .
<http://example.org/course/ZZCRLADR> <http://example.org/is_aligned_with> _:Nd949791954fe4a4d96a902bc0570054f <http://example.org/course/ZZCRLADR> .
_:Nd949791954fe4a4d96a902bc0570054f <http://example.org/has_chunk> ". Describe the differences among the three main styles of learning (supervised, reinforcement, and\nunsupervised) and determine which is appropriate to a particular problem domain.\n2. Differentiate the terms of AI, machine learning, and deep learning.\n3. Frame an application as a classification problem, including the available input features and output\nto be predicted (e.g., identifying alphabetic characters from pixel grid input).\n4" <http://example.org/course/ZZCRLADR> .
_:Nd949791954fe4a4d96a902bc0570054f <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/ZZCRLADR> .
_:Nd949791954fe4a4d96a902bc0570054f <http://example.org/has_score> "0.77831775"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZCRLADR> .
_:Nedbe6b0a3bb14087a821bd5f01ba86da <http://example.org/has_chunk> ". Statistical techniques\nc. Deep learning techniques\nIllustrative Learning Outcomes:\n1. Summarize the importance of image and object recognition in AI and indicate several significant\napplications of this technology.\n2. List at least three image-segmentation approaches, such as thresholding, edge-based and region-\nbased algorithms, along with their defining characteristics, strengths, and weaknesses.\n3. Implement 2d object recognition based on contour-based and/or region-based shape\nrepresentations.\n4" <http://example.org/course/ZZCRLADR> .
_:N375c9db616be403d8543dceaea311a40 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/ZZCRLADR> .
_:N9a6a96c879414f16a31cea0da5027ddf <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Foundational_Foundational_Data_Structures_and_Algorithms.txt> <http://example.org/course/X3IO060> .
_:N1ee961dd447141aeb35a3fdeb4a921a3 <http://example.org/has_chunk> ". Sorting algorithms\na. O(n log n) complexity heapsort\nb. Pseudo O(n) complexity (e.g., bucket, counting, radix)\n15. Graph algorithms\na. Transitive closure (e.g., Warshall’s)\nb. Topological sort\n16. Matching\na. Efficient string matching (e.g., Boyer-Moore, Knuth-Morris-Pratt)\nb. Longest common subsequence matching\nc. Regular expression matching\nNon-core:\n17. Cryptography algorithms (e.g., SHA-256) (See also: SEC-Crypto)\n18. Parallel algorithms (See also: PDC-Algorithms, FPL-Parallel)\n19" <http://example.org/course/X3IO060> .
_:N2db9f462f72441e8a0ef8ba40d287187 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-SEP_Society_Ethics_and_the_Profession.txt> <http://example.org/course/X3IO060> .
<http://example.org/course/X3IO060> <http://example.org/is_aligned_with> _:N1ee961dd447141aeb35a3fdeb4a921a3 <http://example.org/course/X3IO060> .
_:N2db9f462f72441e8a0ef8ba40d287187 <http://example.org/has_chunk> ". Develop algorithmic solutions to real-world societal problems, such as routing an ambulance to a\nhospital.\n2. Explain the impact that an algorithm may have on the environment and society when used to solve\na real-world problem while considering its sustainability and that it can affect different societal\ngroups in different ways.\n3. Prepare a presentation that justifies the selection of appropriate data structures and/or algorithms to\nsolve a given real-world problem.\n4" <http://example.org/course/X3IO060> .
_:N1ee961dd447141aeb35a3fdeb4a921a3 <http://example.org/has_score> "0.7123932"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO060> .
<http://example.org/course/X3IO060> <http://example.org/is_aligned_with> _:N9a6a96c879414f16a31cea0da5027ddf <http://example.org/course/X3IO060> .
_:N9a6a96c879414f16a31cea0da5027ddf <http://example.org/has_score> "0.6933006"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO060> .
_:N1ee961dd447141aeb35a3fdeb4a921a3 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Foundational_Foundational_Data_Structures_and_Algorithms.txt> <http://example.org/course/X3IO060> .
<http://example.org/course/X3IO060> <http://example.org/is_aligned_with> _:N2db9f462f72441e8a0ef8ba40d287187 <http://example.org/course/X3IO060> .
_:N2db9f462f72441e8a0ef8ba40d287187 <http://example.org/has_score> "0.6999315"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO060> .
_:N9a6a96c879414f16a31cea0da5027ddf <http://example.org/has_chunk> ". Search algorithms\na. O(n) complexity (e.g., linear/sequential array/list search)\nb. O(log2 n) complexity (e.g., binary search)\nc. O(logb n) complexity (e.g., uninformed depth/breadth-first tree search)\n12. Sorting algorithms (e.g., stable, unstable)\na. O(n2) complexity (e.g., insertion, selection),\nb. O(n log n) complexity (e.g., quicksort, merge, timsort)\n13. Graph algorithms\na. Shortest path (e.g., Dijkstra’s, Floyd’s)\nb. Minimal spanning tree (e.g., Prim’s, Kruskal’s)\nKA Core:\n14. Sorting algorithms\na" <http://example.org/course/X3IO060> .
<http://example.org/course/X1I1080> <http://example.org/is_aligned_with> _:N1d28d767faad45dd9eef09c8e8658d1b <http://example.org/course/X1I1080> .
_:N1d28d767faad45dd9eef09c8e8658d1b <http://example.org/has_chunk> ".\n6. Exception handling. (See also: SDF-Fundamentals, PDC-Coordination, SE-Construction)\n7. Object-oriented idioms for encapsulation:\na. Privacy, data hiding, and visibility of class members.\nb. Interfaces revealing only method signatures.\nc. Abstract base classes, traits and mixins.\n8. Dynamic vs static properties.\n9. Composition vs inheritance.\n10. Subtyping:\na. Subtype polymorphism; implicit upcasts in typed languages.\nb. Notion of behavioral replacement: subtypes acting like supertype.\nc" <http://example.org/course/X1I1080> .
<http://example.org/course/X1I1080> <http://example.org/is_aligned_with> _:N633c3f2c663245bf9c3f6784b855c8fb <http://example.org/course/X1I1080> .
_:N054ec4ebc9dd48cd81fd1bbbc0a62c4f <http://example.org/has_score> "0.70538354"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I1080> .
<http://example.org/course/X1I1080> <http://example.org/is_aligned_with> _:N054ec4ebc9dd48cd81fd1bbbc0a62c4f <http://example.org/course/X1I1080> .
_:N633c3f2c663245bf9c3f6784b855c8fb <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Abstraction_Program_Abstraction_and_Representation.txt> <http://example.org/course/X1I1080> .
_:N633c3f2c663245bf9c3f6784b855c8fb <http://example.org/has_chunk> ". Lambda calculus, variable binding, and variable renaming. (See also: AL-Models, FPL-Formalism)\n17. Types of semantics: operational, axiomatic, denotational, behavioral; define and use abstract\nsyntax trees; contrast with concrete syntax.\nIllustrative learning outcomes:\nKA Core:\n1. Illustrate the scope of variables and visibility using simple programs.\n2. Illustrate different types of parameter-passing using simple pseudo programming language.\n3" <http://example.org/course/X1I1080> .
_:N633c3f2c663245bf9c3f6784b855c8fb <http://example.org/has_score> "0.70781946"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I1080> .
_:N054ec4ebc9dd48cd81fd1bbbc0a62c4f <http://example.org/has_chunk> ".\n2. Given a problem, develop an appropriate automaton that addresses the problem.\n3. Develop a regular expression for a given regular language expressed in natural language.\n4. Explain the difference between regular expressions (Type-3 acceptors) and the regular expressions\n(Type-2 acceptors) used in programming languages.\n5. For each formal model in this unit:\na. Explain its definition comparing its characteristics with the others in this unit,\nb" <http://example.org/course/X1I1080> .
_:N1d28d767faad45dd9eef09c8e8658d1b <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-OOP_Object-Oriented_Programming.txt> <http://example.org/course/X1I1080> .
_:N1d28d767faad45dd9eef09c8e8658d1b <http://example.org/has_score> "0.6979635"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I1080> .
_:N054ec4ebc9dd48cd81fd1bbbc0a62c4f <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Models_Computational_Models_and_Formal_Languages.txt> <http://example.org/course/X1I1080> .
<http://example.org/course/X3IT080> <http://example.org/is_aligned_with> _:Na4897fdd25dd431d87ea7f496738fbf3 <http://example.org/course/X3IT080> .
<http://example.org/course/X3IT080> <http://example.org/is_aligned_with> _:Nfb96d5fca8a1419d89851ea9149881ce <http://example.org/course/X3IT080> .
_:Nfb96d5fca8a1419d89851ea9149881ce <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-Augmented_Reality.txt> <http://example.org/course/X3IT080> .
_:Nfb96d5fca8a1419d89851ea9149881ce <http://example.org/has_score> "0.6289755"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT080> .
<http://example.org/course/X3IT080> <http://example.org/is_aligned_with> _:N835917fbb6e44c0fade97c00726d5d11 <http://example.org/course/X3IT080> .
_:N835917fbb6e44c0fade97c00726d5d11 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X3IT080> .
_:N835917fbb6e44c0fade97c00726d5d11 <http://example.org/has_score> "0.63892555"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT080> .
_:Na4897fdd25dd431d87ea7f496738fbf3 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Maintenance_and_Evolution.txt> <http://example.org/course/X3IT080> .
_:Na4897fdd25dd431d87ea7f496738fbf3 <http://example.org/has_score> "0.62728524"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT080> .
_:N835917fbb6e44c0fade97c00726d5d11 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://example.org/course/X3IT080> .
_:Nfb96d5fca8a1419d89851ea9149881ce <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nGIT-Augmented Reality: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of GIT-Augmented Reality.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X3IT080> .
_:Na4897fdd25dd431d87ea7f496738fbf3 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Maintenance and Evolution: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Maintenance and Evolution.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X3IT080> .
_:N768700f679cc4ba296aac59447eae08c <http://example.org/has_chunk> ". Language translation pipeline: syntax analysis, parsing, optional type-checking, translation/code\ngeneration and optimization, linking, loading, execution\nKA Core:\n9. Run-time representation of core language constructs such as objects (method tables) and functions\nthat can be passed as parameters to and returned from functions (closures)\n10. Secure compiler development (See also: SEC-Foundations, SEC-Coding)\nIllustrative learning outcomes:\nCS Core:\n1" <http://example.org/course/X1LA010> .
_:Nff0e90e0457d4b34b3f177a758538e86 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://example.org/course/X1LA010> .
_:N7d9ae2c106e643e4a1e8d2bf82796053 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Scripting_Shell_Scripting.txt> <http://example.org/course/X1LA010> .
_:Nff0e90e0457d4b34b3f177a758538e86 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://example.org/course/X1LA010> .
<http://example.org/course/X1LA010> <http://example.org/is_aligned_with> _:Nff0e90e0457d4b34b3f177a758538e86 <http://example.org/course/X1LA010> .
<http://example.org/course/X1LA010> <http://example.org/is_aligned_with> _:N7d9ae2c106e643e4a1e8d2bf82796053 <http://example.org/course/X1LA010> .
_:Nff0e90e0457d4b34b3f177a758538e86 <http://example.org/has_score> "0.6774888"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1LA010> .
_:N768700f679cc4ba296aac59447eae08c <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Translation_Language_Translation_and_Execution.txt> <http://example.org/course/X1LA010> .
_:N768700f679cc4ba296aac59447eae08c <http://example.org/has_score> "0.65474415"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1LA010> .
<http://example.org/course/X1LA010> <http://example.org/is_aligned_with> _:N768700f679cc4ba296aac59447eae08c <http://example.org/course/X1LA010> .
_:N7d9ae2c106e643e4a1e8d2bf82796053 <http://example.org/has_chunk> ". Regular expressions (See also: AL-Models)\n8. Programs and processes (See also: OS-Process)\n9. Workflow\nIllustrative learning outcomes:\nCS Core:\n1. Create and execute automated scripts to manage various system tasks.\n2. Solve various text processing problems through scripting." <http://example.org/course/X1LA010> .
_:N7d9ae2c106e643e4a1e8d2bf82796053 <http://example.org/has_score> "0.65228105"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1LA010> .
_:N7adad4c2feec48bb8b3b1736d041ef8e <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/ZZPMASNA> .
_:N45437ce22f694bee9363c69bfa4a11f0 <http://example.org/has_score> "0.6794311"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZPMASNA> .
<http://example.org/course/ZZPMASNA> <http://example.org/is_aligned_with> _:N7adad4c2feec48bb8b3b1736d041ef8e <http://example.org/course/ZZPMASNA> .
_:N7adad4c2feec48bb8b3b1736d041ef8e <http://example.org/has_chunk> "AI-ML: Machine Learning\nCS Core:\n1. Definition and examples of a broad variety of machine learning tasks\na. Supervised learning\ni. Classification\nii. Regression\nb. Reinforcement learning\nc. Unsupervised learning\ni. Clustering\n2. Fundamental ideas:\na. No free lunch theorem: no one learner can solve all problems; representational design decisions\nhave consequences.\nb. Sources of error and undecidability in machine learning\n3" <http://example.org/course/ZZPMASNA> .
<http://example.org/course/ZZPMASNA> <http://example.org/is_aligned_with> _:N45437ce22f694bee9363c69bfa4a11f0 <http://example.org/course/ZZPMASNA> .
<http://example.org/course/ZZPMASNA> <http://example.org/is_aligned_with> _:N670fee64de604573ae314f1643e04cd0 <http://example.org/course/ZZPMASNA> .
_:N7adad4c2feec48bb8b3b1736d041ef8e <http://example.org/has_score> "0.6824496"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZPMASNA> .
_:N45437ce22f694bee9363c69bfa4a11f0 <http://example.org/has_chunk> ". Basic introduction to generative neural networks (e.g., large language models)\n9. Ethics for Machine Learning (See also: SEP-Context)\na. Focus on real data, real scenarios, and case studies\nb. Dataset/algorithmic/evaluation bias and unintended consequences\n72\nKA Core:\n10. Formulation of simple machine learning as an optimization problem, such as least squares linear\nregression or logistic regression\na. Objective function\nb. Gradient descent\nc" <http://example.org/course/ZZPMASNA> .
_:N670fee64de604573ae314f1643e04cd0 <http://example.org/has_chunk> ". Examples of use: POS tagging and morphology\n8. Information retrieval (See also: DM-Unstructured)\na. Vector space model\ni. TF & IDF\nb. Precision and recall\n9. Information extraction\n10. Language translation\n11. Text classification, categorization\na. Bag of words model\n12. Deep learning for NLP (See also: AI-ML)\na. RNNs\nb. Transformers\nc. Multi-modal embeddings (e.g., images + text)\nd. Generative language models\nIllustrative Learning Outcomes:\n1" <http://example.org/course/ZZPMASNA> .
_:N670fee64de604573ae314f1643e04cd0 <http://example.org/has_score> "0.68895566"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZPMASNA> .
_:N670fee64de604573ae314f1643e04cd0 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-NLP_Natural_Language_Processing.txt> <http://example.org/course/ZZPMASNA> .
_:N45437ce22f694bee9363c69bfa4a11f0 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/ZZPMASNA> .
_:N3d90990081694007b9bf797666223be4 <http://example.org/has_chunk> ". Serverless, cloud computing on demand \n10. Storage solutions (See also: DM-Relational, DM-NoSQL) \na. Relational Databases \nb. NoSQL databases \n \nIllustrative Learning Outcomes: \nKA Core: \n1. Design and implement a web-based application using a microservice architecture design. \n2. Describe the constraints, such as hosting, services, and scalability, related to web platforms. \n3. Compare and contrast web programming with general-purpose programming.  \n4" <http://example.org/course/X3IA030> .
_:N21d8d6d19b6d40a78d870811ae61e61f <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Date_Management_DM/DM-Distributed_Distributed_DatabasesCloud_Computing.txt> <http://example.org/course/X3IA030> .
<http://example.org/course/X3IA030> <http://example.org/is_aligned_with> _:Nb6226baee1b84185a5a6ca450852f530 <http://example.org/course/X3IA030> .
_:N3d90990081694007b9bf797666223be4 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Web_Platforms.txt> <http://example.org/course/X3IA030> .
_:N21d8d6d19b6d40a78d870811ae61e61f <http://example.org/has_chunk> "DM-Distributed: Distributed Databases/Cloud Computing\nNon-core:\n1. Distributed DBMS (See also: PDC-Communications)\na. Distributed data storage\nb. Distributed query processing\nc. Distributed transaction model\nd. Homogeneous and heterogeneous solutions\ne. Client-server distributed databases (See also: NC-Fundamentals)\n2. Parallel DBMS (See also: PDC-Algorithms)\na. Parallel DBMS architectures: shared memory, shared disk, shared nothing;\nb. Speedup and scale-up, e.g" <http://example.org/course/X3IA030> .
_:N3d90990081694007b9bf797666223be4 <http://example.org/has_score> "0.71501154"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA030> .
<http://example.org/course/X3IA030> <http://example.org/is_aligned_with> _:N3d90990081694007b9bf797666223be4 <http://example.org/course/X3IA030> .
<http://example.org/course/X3IA030> <http://example.org/is_aligned_with> _:N21d8d6d19b6d40a78d870811ae61e61f <http://example.org/course/X3IA030> .
_:Nb6226baee1b84185a5a6ca450852f530 <http://example.org/has_score> "0.72454935"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA030> .
_:Nb6226baee1b84185a5a6ca450852f530 <http://example.org/has_chunk> ". Layering principles (e.g., encapsulation and hourglass model) (See also: SF-Foundations)\n6. Network elements (e.g., routers, switches, hubs, access points, and hosts)\n7. Basic queueing concepts (e.g., relationship with latency, congestion, service levels, etc.)\nIllustrative Learning Outcomes:\nCS Core:\n1. Articulate the organization of the internet.\n2. List and define the appropriate network terminology\n3. Describe the layered structure of a typical networked architecture.\n4" <http://example.org/course/X3IA030> .
_:N21d8d6d19b6d40a78d870811ae61e61f <http://example.org/has_score> "0.70568115"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA030> .
_:Nb6226baee1b84185a5a6ca450852f530 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Networking_and_Communication_NC/NC-Fundamentals_Fundamentals.txt> <http://example.org/course/X3IA030> .
_:N704ebaca791946718019d1f59097bcb8 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-Probability_Probabilistic_Representation_and_Reasoning.txt> <http://example.org/course/X2I3020> .
_:N704ebaca791946718019d1f59097bcb8 <http://example.org/has_chunk> ". Maximizing expected utility\nc. Game theory\nIllustrative Learning Outcomes:\n1. Compute the probability of a hypothesis given the evidence in a Bayesian network.\n2. Explain how conditional independence assertions allow for greater efficiency of probabilistic\nsystems.\n3. Identify examples of knowledge representations for reasoning under uncertainty.\n4. State the complexity of exact inference. Identify methods for approximate inference.\n5" <http://example.org/course/X2I3020> .
<http://example.org/course/X2I3020> <http://example.org/is_aligned_with> _:N7aa06c683ebd49da9b4255be355d925b <http://example.org/course/X2I3020> .
<http://example.org/course/X2I3020> <http://example.org/is_aligned_with> _:Nd8c7137b707d43b4ae4fa807291ac3ce <http://example.org/course/X2I3020> .
_:Nd8c7137b707d43b4ae4fa807291ac3ce <http://example.org/has_score> "0.6845715"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I3020> .
_:N7aa06c683ebd49da9b4255be355d925b <http://example.org/has_score> "0.6686741"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I3020> .
_:N704ebaca791946718019d1f59097bcb8 <http://example.org/has_score> "0.6677723"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I3020> .
_:N7aa06c683ebd49da9b4255be355d925b <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/X2I3020> .
_:N7aa06c683ebd49da9b4255be355d925b <http://example.org/has_chunk> ". Medicine and health\nb. Economics\nc. Education\nd. Vision\ne. Natural language\nf. Robotics\ng. Game play\nh. Data mining (Cross-reference DM/Data Analytics)\n35. Ethics for Machine Learning\na. Continued focus on real data, real scenarios, and case studies (See also: SEP-Context)\nb. In depth exploration of dataset/algorithmic/evaluation bias, data privacy, and fairness (See also:\nSEP-Privacy, SEP-Context)\nc. Trust / explainability\nIllustrative Learning Outcomes:\n1" <http://example.org/course/X2I3020> .
_:Nd8c7137b707d43b4ae4fa807291ac3ce <http://example.org/has_chunk> ". Axioms of probability\nb. Probabilistic inference\nc. Bayes’ Rule (derivation)\nd. Bayesian inference (more complex examples)\n5. Independence\n6. Conditional Independence\n7. Markov chains and Markov models\n8. Utility and decision making\nIllustrative Learning Outcomes:\n1. Given a natural language problem statement, encode it as a symbolic or logical representation.\n2. Explain how we can make decisions under uncertainty, using concepts such as Bayes theorem and\nutility.\n3" <http://example.org/course/X2I3020> .
<http://example.org/course/X2I3020> <http://example.org/is_aligned_with> _:N704ebaca791946718019d1f59097bcb8 <http://example.org/course/X2I3020> .
_:Nd8c7137b707d43b4ae4fa807291ac3ce <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-KRR_Fundamental_Knowledge_Representation_and_Reasoning.txt> <http://example.org/course/X2I3020> .
_:N0b3bf904a2124e6d8c84c3b65b7ef5c6 <http://example.org/has_score> "0.64207053"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA100> .
_:N2931ae4a57924fbdb21a431bd25b2df0 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nGIT-Augmented Reality: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of GIT-Augmented Reality.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X3IA100> .
_:N0b3bf904a2124e6d8c84c3b65b7ef5c6 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X3IA100> .
_:Na43ea066d0314cd3b0f0c018c37d070e <http://example.org/has_chunk> ". Layering principles (e.g., encapsulation and hourglass model) (See also: SF-Foundations)\n6. Network elements (e.g., routers, switches, hubs, access points, and hosts)\n7. Basic queueing concepts (e.g., relationship with latency, congestion, service levels, etc.)\nIllustrative Learning Outcomes:\nCS Core:\n1. Articulate the organization of the internet.\n2. List and define the appropriate network terminology\n3. Describe the layered structure of a typical networked architecture.\n4" <http://example.org/course/X3IA100> .
_:Na43ea066d0314cd3b0f0c018c37d070e <http://example.org/has_score> "0.6582753"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA100> .
<http://example.org/course/X3IA100> <http://example.org/is_aligned_with> _:Na43ea066d0314cd3b0f0c018c37d070e <http://example.org/course/X3IA100> .
_:Na43ea066d0314cd3b0f0c018c37d070e <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Networking_and_Communication_NC/NC-Fundamentals_Fundamentals.txt> <http://example.org/course/X3IA100> .
_:N0b3bf904a2124e6d8c84c3b65b7ef5c6 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://example.org/course/X3IA100> .
<http://example.org/course/X3IA100> <http://example.org/is_aligned_with> _:N0b3bf904a2124e6d8c84c3b65b7ef5c6 <http://example.org/course/X3IA100> .
_:N2931ae4a57924fbdb21a431bd25b2df0 <http://example.org/has_score> "0.6489118"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA100> .
<http://example.org/course/X3IA100> <http://example.org/is_aligned_with> _:N2931ae4a57924fbdb21a431bd25b2df0 <http://example.org/course/X3IA100> .
_:N2931ae4a57924fbdb21a431bd25b2df0 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-Augmented_Reality.txt> <http://example.org/course/X3IA100> .
_:Nff17ea25de404366858973b169d92fdc <http://example.org/has_chunk> ". Layering principles (e.g., encapsulation and hourglass model) (See also: SF-Foundations)\n6. Network elements (e.g., routers, switches, hubs, access points, and hosts)\n7. Basic queueing concepts (e.g., relationship with latency, congestion, service levels, etc.)\nIllustrative Learning Outcomes:\nCS Core:\n1. Articulate the organization of the internet.\n2. List and define the appropriate network terminology\n3. Describe the layered structure of a typical networked architecture.\n4" <http://example.org/course/X1II050> .
_:Nff17ea25de404366858973b169d92fdc <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Networking_and_Communication_NC/NC-Fundamentals_Fundamentals.txt> <http://example.org/course/X1II050> .
<http://example.org/course/X1II050> <http://example.org/is_aligned_with> _:N34d9e0e7f6bb440c8d6bda3a8cbabc15 <http://example.org/course/X1II050> .
_:N34d9e0e7f6bb440c8d6bda3a8cbabc15 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://example.org/course/X1II050> .
_:Nd84ea616a92547d5bb43c924229f8b05 <http://example.org/has_score> "0.6396966"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II050> .
_:Nff17ea25de404366858973b169d92fdc <http://example.org/has_score> "0.6470684"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II050> .
_:N34d9e0e7f6bb440c8d6bda3a8cbabc15 <http://example.org/has_score> "0.6414144"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II050> .
<http://example.org/course/X1II050> <http://example.org/is_aligned_with> _:Nff17ea25de404366858973b169d92fdc <http://example.org/course/X1II050> .
_:Nd84ea616a92547d5bb43c924229f8b05 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Human_Computer_Interaction_HCI/HCI-User_Understanding_the_User_Individual_goals_and_interactions_with_others.txt> <http://example.org/course/X1II050> .
_:N34d9e0e7f6bb440c8d6bda3a8cbabc15 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://example.org/course/X1II050> .
_:Nd84ea616a92547d5bb43c924229f8b05 <http://example.org/has_chunk> ". Asynchronous group communication (e.g., email, forums, social networks)\nd. Social media, social computing, and social network analysis\ne. Online collaboration\nf. Social coordination and online communities\ng. Avatars, characters, and virtual worlds\nNon-core:\n6. Multi-user systems\nIllustrative Learning Outcomes:\nCS Core:\n1. Conduct a user-centered design process that is integrated into a project.\nKA Core:\n2. Compare and contrast the needs of users with those of designers.\n3" <http://example.org/course/X1II050> .
<http://example.org/course/X1II050> <http://example.org/is_aligned_with> _:Nd84ea616a92547d5bb43c924229f8b05 <http://example.org/course/X1II050> .
_:N9bdbd4fb4fc0401eaadcc94860a622ea <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-Vision_Perception_and_Computer_Vision.txt> <http://example.org/course/YG9U15-> .
_:N06d3d6204f4b4c4e982a56dea701b3a7 <http://example.org/has_chunk> ".\n9. Evaluate the performance of the underlying feature-extraction, relative to at least one alternative\npossible approach (whether implemented or not) in its contribution to the classification task (8),\nabove.\n83\n10. Describe at least three classification approaches, their prerequisites for applicability, their strengths,\nand their shortcomings.\n11. Implement and evaluate a deep learning solution to problems in computer vision, such as object or\nscene recognition." <http://example.org/course/YG9U15-> .
_:N0c1b497866e84d1588c93d019cba0079 <http://example.org/has_score> "0.78587806"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/YG9U15-> .
_:N06d3d6204f4b4c4e982a56dea701b3a7 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-Vision_Perception_and_Computer_Vision.txt> <http://example.org/course/YG9U15-> .
_:N0c1b497866e84d1588c93d019cba0079 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-Vision_Perception_and_Computer_Vision.txt> <http://example.org/course/YG9U15-> .
<http://example.org/course/YG9U15-> <http://example.org/is_aligned_with> _:N9bdbd4fb4fc0401eaadcc94860a622ea <http://example.org/course/YG9U15-> .
<http://example.org/course/YG9U15-> <http://example.org/is_aligned_with> _:N06d3d6204f4b4c4e982a56dea701b3a7 <http://example.org/course/YG9U15-> .
_:N9bdbd4fb4fc0401eaadcc94860a622ea <http://example.org/has_score> "0.78504765"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/YG9U15-> .
_:N9bdbd4fb4fc0401eaadcc94860a622ea <http://example.org/has_chunk> "AI-Vision: Perception and Computer Vision\nNon-core:\n1. Computer vision\na. Image acquisition, representation, processing, and properties\nb. Shape representation, object recognition, and segmentation\nc. Motion analysis\nd. Generative models\n2. Audio and speech recognition\n3. Touch and proprioception\n4. Other modalities (e.g., olfaction)\n5. Modularity in recognition\n6. Approaches to pattern recognition (See also: AI-ML)\na. Classification algorithms and measures of classification quality\nb" <http://example.org/course/YG9U15-> .
<http://example.org/course/YG9U15-> <http://example.org/is_aligned_with> _:N0c1b497866e84d1588c93d019cba0079 <http://example.org/course/YG9U15-> .
_:N0c1b497866e84d1588c93d019cba0079 <http://example.org/has_chunk> ". Statistical techniques\nc. Deep learning techniques\nIllustrative Learning Outcomes:\n1. Summarize the importance of image and object recognition in AI and indicate several significant\napplications of this technology.\n2. List at least three image-segmentation approaches, such as thresholding, edge-based and region-\nbased algorithms, along with their defining characteristics, strengths, and weaknesses.\n3. Implement 2d object recognition based on contour-based and/or region-based shape\nrepresentations.\n4" <http://example.org/course/YG9U15-> .
_:N06d3d6204f4b4c4e982a56dea701b3a7 <http://example.org/has_score> "0.7771308"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/YG9U15-> .
_:N1b0b77ecda80418ea611663397ca4693 <http://example.org/has_score> "0.6293905"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZIV> .
_:N7d7d17fdd79e410e987b9a33c1c43543 <http://example.org/has_score> "0.63953125"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZIV> .
<http://example.org/course/ZZIV> <http://example.org/is_aligned_with> _:N7d7d17fdd79e410e987b9a33c1c43543 <http://example.org/course/ZZIV> .
_:N4b933e3c44474bca9c4df64b675badb9 <http://example.org/has_chunk> ". Human autonomy and oversight/regulations/legal requirements (See also: SEP-Context)\nf. Sustainability (See also: SEP-Sustainability)\nIllustrative Learning Outcomes:\n1. Given a real-world application domain and problem, formulate an AI solution to it, identifying proper\ndata/input, preprocessing, representations, AI techniques, and evaluation metrics/methodology.\n2" <http://example.org/course/ZZIV> .
_:N1b0b77ecda80418ea611663397ca4693 <http://example.org/has_chunk> ". Understanding ethical approval requirements before engaging in user research (See also: SETools, SEP-Ethical-Analysis, SEP-Security, SEP-Privacy, SEP-Professional-Ethics)\nKA Core:\n2. Methods for evaluation with users (See also: SE-Validation)\na. Qualitative methods (qualitative coding and thematic analysis)\nb. Quantitative methods (statistical tests)\nc. Mixed methods (e.g., observation, think-aloud, interview, survey, experiment)\nd. Presentation requirements (e.g., reports, personas)\ne" <http://example.org/course/ZZIV> .
<http://example.org/course/ZZIV> <http://example.org/is_aligned_with> _:N1b0b77ecda80418ea611663397ca4693 <http://example.org/course/ZZIV> .
_:N4b933e3c44474bca9c4df64b675badb9 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI_SEP_Applications_and_Societal_Impact.txt> <http://example.org/course/ZZIV> .
<http://example.org/course/ZZIV> <http://example.org/is_aligned_with> _:N4b933e3c44474bca9c4df64b675badb9 <http://example.org/course/ZZIV> .
_:N4b933e3c44474bca9c4df64b675badb9 <http://example.org/has_score> "0.62934995"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZIV> .
_:N1b0b77ecda80418ea611663397ca4693 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Human_Computer_Interaction_HCI/HCI-Evaluation_Evaluating_the_Design.txt> <http://example.org/course/ZZIV> .
_:N7d7d17fdd79e410e987b9a33c1c43543 <http://example.org/has_chunk> ".\n10. Conceptualize user experience research to identify user needs and generate design insights." <http://example.org/course/ZZIV> .
_:N7d7d17fdd79e410e987b9a33c1c43543 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Human_Computer_Interaction_HCI/HCI-Accessibility_Accessibility_and_Inclusive_Design.txt> <http://example.org/course/ZZIV> .
_:Ne6b0caabf8394d159afa2ca207340449 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Calculus.txt> <http://example.org/course/X3IO030> .
<http://example.org/course/X3IO030> <http://example.org/is_aligned_with> _:N8b28f8974141449eb8e1c1532dba3abf <http://example.org/course/X3IO030> .
_:Nb59839304fba43fa924c8e568f6193c3 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Code_Code_Generation.txt> <http://example.org/course/X3IO030> .
_:Ne6b0caabf8394d159afa2ca207340449 <http://example.org/has_chunk> ". Taylor series\n6. Multivariate calculus: partial derivatives, gradient, chain-rule, vector valued functions,\n7. Optimization: convexity, global vs local minima, gradient descent, constrained optimization, and\nLagrange multipliers.\n8. Ordinary Differential Equations (ODEs): definition, Euler method, applications to simulation, Monte\nCarlo integration\n9" <http://example.org/course/X3IO030> .
<http://example.org/course/X3IO030> <http://example.org/is_aligned_with> _:Nb59839304fba43fa924c8e568f6193c3 <http://example.org/course/X3IO030> .
_:N8b28f8974141449eb8e1c1532dba3abf <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Calculus.txt> <http://example.org/course/X3IO030> .
_:Nb59839304fba43fa924c8e568f6193c3 <http://example.org/has_score> "0.718318"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO030> .
_:Ne6b0caabf8394d159afa2ca207340449 <http://example.org/has_score> "0.7017258"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO030> .
<http://example.org/course/X3IO030> <http://example.org/is_aligned_with> _:Ne6b0caabf8394d159afa2ca207340449 <http://example.org/course/X3IO030> .
_:N8b28f8974141449eb8e1c1532dba3abf <http://example.org/has_score> "0.7034626"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO030> .
_:Nb59839304fba43fa924c8e568f6193c3 <http://example.org/has_chunk> ".\noptimization, such as instruction selection, instruction scheduling, register allocation, and peephole\noptimization." <http://example.org/course/X3IO030> .
_:N8b28f8974141449eb8e1c1532dba3abf <http://example.org/has_chunk> ".\nb. Apply the Taylor series to approximations.\n6. Multivariate calculus: partial derivatives, gradient, chain-rule, vector valued functions, applications\nto optimization, convexity, global vs local minima.\na. Compute partial derivatives and gradients.\nb. Work through examples with vector-valued functions with gradient notation.\nc. Explain applications to optimization.\n7. ODEs: definition, Euler method, applications to simulation\na. Apply the Euler method to integration.\nb" <http://example.org/course/X3IO030> .
<http://example.org/course/X1I1010> <http://example.org/is_aligned_with> _:Naa827b662c334bf5babcbb7eb5a6c9be <http://example.org/course/X1I1010> .
<http://example.org/course/X1I1010> <http://example.org/is_aligned_with> _:Nac5f39c3f03e44e7964a53ef95ccfd2d <http://example.org/course/X1I1010> .
_:Nac5f39c3f03e44e7964a53ef95ccfd2d <http://example.org/has_chunk> ". List examples of subspaces of a vector space.\nc. Recognize and use basic properties of subspaces and vector spaces.\nd. Determine if specific subsets of a vector space are subspaces.\ne. Discuss the existence of a basis of an abstract vector space.\nf. Describe coordinates of a vector relative to a given basis.\ng. Determine a basis for and the dimension of a finite-dimensional space.\nh. Discuss spanning sets for vectors in Rn.\ni. Discuss linear independence for vectors in Rn.\nj" <http://example.org/course/X1I1010> .
_:Nac5f39c3f03e44e7964a53ef95ccfd2d <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Linear_Linear_Algebra.txt> <http://example.org/course/X1I1010> .
_:Nd9e98ac906054372ae0a592fb69f617f <http://example.org/has_score> "0.5076022"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I1010> .
_:Nd9e98ac906054372ae0a592fb69f617f <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/System_Fundamentals_SF/SF-Basic_Concepts.txt> <http://example.org/course/X1I1010> .
_:Naa827b662c334bf5babcbb7eb5a6c9be <http://example.org/has_chunk> ". (See also: FPL-Logic)\n10. Integration with other programming paradigms such as imperative and object-oriented.\nIllustrative learning outcomes:\nCS Core:\n1. Develop basic algorithms that avoid assigning to mutable states or considering reference equality.\n2. Develop useful functions that take and return other functions.\n3. Compare and contrast how computational solutions to a problem differ in procedural, functional,\nand object-oriented approaches.\n4" <http://example.org/course/X1I1010> .
_:Naa827b662c334bf5babcbb7eb5a6c9be <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Functional_Functional_Programming.txt> <http://example.org/course/X1I1010> .
_:Nac5f39c3f03e44e7964a53ef95ccfd2d <http://example.org/has_score> "0.51683515"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I1010> .
_:Naa827b662c334bf5babcbb7eb5a6c9be <http://example.org/has_score> "0.5192653"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I1010> .
_:Nd9e98ac906054372ae0a592fb69f617f <http://example.org/has_chunk> ".  \n9. Evaluate the performance of simple sequential and parallel versions of a program with different problem sizes and be able to describe the speed-ups achieved. \n10. Describe on an execution timeline how parallelism events and operations can take place simultaneously (i.e., at the same time). Explain how work can be performed in less elapsed time if this can be exploited." <http://example.org/course/X1I1010> .
<http://example.org/course/X1I1010> <http://example.org/is_aligned_with> _:Nd9e98ac906054372ae0a592fb69f617f <http://example.org/course/X1I1010> .
_:N6194fcf546b145ff82a5fb49d4281e22 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Models_Computational_Models_and_Formal_Languages.txt> <http://example.org/course/X3IA040> .
_:N27fe30b2f5574d5c87c4dbdc76346b81 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Models_Computational_Models_and_Formal_Languages.txt> <http://example.org/course/X3IA040> .
<http://example.org/course/X3IA040> <http://example.org/is_aligned_with> _:N6194fcf546b145ff82a5fb49d4281e22 <http://example.org/course/X3IA040> .
_:N6194fcf546b145ff82a5fb49d4281e22 <http://example.org/has_chunk> ".\n2. Given a problem, develop an appropriate automaton that addresses the problem.\n3. Develop a regular expression for a given regular language expressed in natural language.\n4. Explain the difference between regular expressions (Type-3 acceptors) and the regular expressions\n(Type-2 acceptors) used in programming languages.\n5. For each formal model in this unit:\na. Explain its definition comparing its characteristics with the others in this unit,\nb" <http://example.org/course/X3IA040> .
_:N27fe30b2f5574d5c87c4dbdc76346b81 <http://example.org/has_score> "0.7157055"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA040> .
<http://example.org/course/X3IA040> <http://example.org/is_aligned_with> _:N9133fbafe90c4b59903d6b93006316a3 <http://example.org/course/X3IA040> .
<http://example.org/course/X3IA040> <http://example.org/is_aligned_with> _:N27fe30b2f5574d5c87c4dbdc76346b81 <http://example.org/course/X3IA040> .
_:N9133fbafe90c4b59903d6b93006316a3 <http://example.org/has_chunk> ".\n6. Formal modeling and manual refinement/implementation of software systems.\n7. Use of symbolic testing and fuzzing in software development.\n8. Model checking.\n9. Understanding of situations where formal methods can be effectively applied and how to structure\ndevelopment to maximize their value.\nIllustrative learning outcomes:\nNon-core:\n1. Use formal modeling techniques to develop and validate architectures.\n2" <http://example.org/course/X3IA040> .
_:N9133fbafe90c4b59903d6b93006316a3 <http://example.org/has_score> "0.71978897"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA040> .
_:N9133fbafe90c4b59903d6b93006316a3 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Methodologies_Formal_Development_Methodologies.txt> <http://example.org/course/X3IA040> .
_:N6194fcf546b145ff82a5fb49d4281e22 <http://example.org/has_score> "0.7212105"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA040> .
_:N27fe30b2f5574d5c87c4dbdc76346b81 <http://example.org/has_chunk> "AL-Models: Computational Models and Formal Languages\nCS Core:\n1. Formal automata\na. Finite State\nb. Pushdown\nc. Linear Bounded\nd. Turing Machine\n2. Formal languages, grammars and Chomsky Hierarchy\n(See also: FPL-Translation, FPL-Syntax)\na. Regular (Type-3)\ni. Regular Expressions\nb. Context-Free (Type-2)\nc. Context-Sensitive (Type-1)\nd. Recursively Enumerable (Type-0)\n3. Relations among formal automata, languages, and grammars\n4. Decidability, (un)computability, and halting\n5. The Church-Turing thesis\n6" <http://example.org/course/X3IA040> .
_:N968926dd959d41ad838dd0de4fa2fd05 <http://example.org/has_chunk> ". K-means\nb. Gaussian mixture models\nc. Expectation maximization (EM)\nd. Self-organizing maps\n25. Graph analysis (e.g., PageRank)\n26. Semi-supervised learning\n27. Graphical models (See also: AI-Probability)\n28. Ensembles\na. Weighted majority\nb. Boosting/bagging\nc. Random forest\nd. Gated ensemble\n29. Learning theory\na. General overview of learning theory / why learning works\nb. VC dimension\nc. Generalization bounds\n74\n30. Reinforcement learning\na. Exploration vs exploitation tradeoff\nb" <http://example.org/course/X2II020> .
_:N3e99a807fa0a40da9b6166349476cf99 <http://example.org/has_score> "0.65184927"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II020> .
_:N968926dd959d41ad838dd0de4fa2fd05 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/X2II020> .
<http://example.org/course/X2II020> <http://example.org/is_aligned_with> _:N3e99a807fa0a40da9b6166349476cf99 <http://example.org/course/X2II020> .
_:N77b0095680844216b8af82385a773540 <http://example.org/has_score> "0.65301704"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II020> .
_:N3e99a807fa0a40da9b6166349476cf99 <http://example.org/has_chunk> ".\n6. Formal modeling and manual refinement/implementation of software systems.\n7. Use of symbolic testing and fuzzing in software development.\n8. Model checking.\n9. Understanding of situations where formal methods can be effectively applied and how to structure\ndevelopment to maximize their value.\nIllustrative learning outcomes:\nNon-core:\n1. Use formal modeling techniques to develop and validate architectures.\n2" <http://example.org/course/X2II020> .
<http://example.org/course/X2II020> <http://example.org/is_aligned_with> _:N77b0095680844216b8af82385a773540 <http://example.org/course/X2II020> .
_:N77b0095680844216b8af82385a773540 <http://example.org/has_chunk> ". Linear regression\ne. Logistic regression\nf. Support vector machines (SVMs) and kernels\ng. Gaussian Processes\n19. Overfitting\na. The curse of dimensionality\nb. Regularization (mathematical computations, L2 and L1 regularization)\n20. Experimental design\n73\na. Data preparation (e.g., standardization, representation, one-hot encoding)\nb. Hypothesis space\nc. Biases (e.g., algorithmic, search)\nd. Partitioning data: stratification, training set, validation set, test set\ne" <http://example.org/course/X2II020> .
<http://example.org/course/X2II020> <http://example.org/is_aligned_with> _:N968926dd959d41ad838dd0de4fa2fd05 <http://example.org/course/X2II020> .
_:N968926dd959d41ad838dd0de4fa2fd05 <http://example.org/has_score> "0.6584102"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II020> .
_:N77b0095680844216b8af82385a773540 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/X2II020> .
_:N3e99a807fa0a40da9b6166349476cf99 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Methodologies_Formal_Development_Methodologies.txt> <http://example.org/course/X2II020> .
_:N082afc31e52b4475921b724153cd6adb <http://example.org/has_chunk> ".\n2. For each of the algorithms in the AL-Foundational unit, explain the paradigm used by the algorithm\nand how it exemplifies this paradigm.\n3. Given an algorithm, explain the paradigm used by the algorithm and how it exemplifies this\nparadigm.\n4. Give a real-world problem, evaluate appropriate algorithmic paradigms and algorithms from these\nparadigms that address the problem including evaluating the tradeoffs among the paradigms and\nalgorithms selected.\n5" <http://example.org/course/X1I1060> .
_:N03cd7bbdb1014dc7b3ad65d330fe9083 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Development_Fundamentals_SDF/SDF-Algorithms.txt> <http://example.org/course/X1I1060> .
_:N03cd7bbdb1014dc7b3ad65d330fe9083 <http://example.org/has_score> "0.70844173"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I1060> .
_:N8c8041a0bda44703be101f2b84890bdb <http://example.org/has_chunk> ".\n2. Given a problem, develop an appropriate automaton that addresses the problem.\n3. Develop a regular expression for a given regular language expressed in natural language.\n4. Explain the difference between regular expressions (Type-3 acceptors) and the regular expressions\n(Type-2 acceptors) used in programming languages.\n5. For each formal model in this unit:\na. Explain its definition comparing its characteristics with the others in this unit,\nb" <http://example.org/course/X1I1060> .
<http://example.org/course/X1I1060> <http://example.org/is_aligned_with> _:N8c8041a0bda44703be101f2b84890bdb <http://example.org/course/X1I1060> .
_:N082afc31e52b4475921b724153cd6adb <http://example.org/has_score> "0.7214934"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I1060> .
_:N03cd7bbdb1014dc7b3ad65d330fe9083 <http://example.org/has_chunk> "Illustrative Learning Outcomes: \nCS Core: \n1. Explain the role of algorithms for writing programs.  \n2. Demonstrate how a problem may be solved by different algorithms, each with different properties. \n3. Explain some common algorithms (e.g., sorting, searching, tree traversal, graph traversal). \n4. Explain the impact on space/time performance of some algorithms." <http://example.org/course/X1I1060> .
_:N8c8041a0bda44703be101f2b84890bdb <http://example.org/has_score> "0.7066189"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I1060> .
<http://example.org/course/X1I1060> <http://example.org/is_aligned_with> _:N082afc31e52b4475921b724153cd6adb <http://example.org/course/X1I1060> .
_:N082afc31e52b4475921b724153cd6adb <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Strategies_Algorithmic_Strategies.txt> <http://example.org/course/X1I1060> .
<http://example.org/course/X1I1060> <http://example.org/is_aligned_with> _:N03cd7bbdb1014dc7b3ad65d330fe9083 <http://example.org/course/X1I1060> .
_:N8c8041a0bda44703be101f2b84890bdb <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Models_Computational_Models_and_Formal_Languages.txt> <http://example.org/course/X1I1060> .
_:N991080e6a6c445cdb345c7e3cdd51daf <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-Augmented_Reality.txt> <http://example.org/course/X3IT020> .
<http://example.org/course/X3IT020> <http://example.org/is_aligned_with> _:N110dce18f94d448a814375bccf5c4660 <http://example.org/course/X3IT020> .
_:N110dce18f94d448a814375bccf5c4660 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://example.org/course/X3IT020> .
_:N110dce18f94d448a814375bccf5c4660 <http://example.org/has_score> "0.654896"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT020> .
_:Ndd3bb6a251544f9dbc623075fd0c99f1 <http://example.org/has_chunk> ". (See also: AI-LRR)\n13. Integration with other programming paradigms such as object-oriented programming.\n14. Advance programming constructs such as difference-lists, creating user defined data structures, set\nof, etc.\nIllustrative learning outcomes:\nKA Core:\n1. Use a logic language to implement a conventional algorithm.\n2. Use a logic language to implement an algorithm employing implicit search using clauses, relations,\nand cuts.\n3" <http://example.org/course/X3IT020> .
<http://example.org/course/X3IT020> <http://example.org/is_aligned_with> _:N991080e6a6c445cdb345c7e3cdd51daf <http://example.org/course/X3IT020> .
_:N991080e6a6c445cdb345c7e3cdd51daf <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nGIT-Augmented Reality: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of GIT-Augmented Reality.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X3IT020> .
_:Ndd3bb6a251544f9dbc623075fd0c99f1 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Logic_Logic_Programming.txt> <http://example.org/course/X3IT020> .
_:N110dce18f94d448a814375bccf5c4660 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://example.org/course/X3IT020> .
_:Ndd3bb6a251544f9dbc623075fd0c99f1 <http://example.org/has_score> "0.6795999"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT020> .
<http://example.org/course/X3IT020> <http://example.org/is_aligned_with> _:Ndd3bb6a251544f9dbc623075fd0c99f1 <http://example.org/course/X3IT020> .
_:N991080e6a6c445cdb345c7e3cdd51daf <http://example.org/has_score> "0.66246194"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT020> .
<http://example.org/course/ZZSKR> <http://example.org/is_aligned_with> _:N669a08893b504eb7b448ed28e3b984c8 <http://example.org/course/ZZSKR> .
_:Nbd1497cb1728467a9152522489a40da4 <http://example.org/has_score> "0.7563561"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZSKR> .
_:Nbd1497cb1728467a9152522489a40da4 <http://example.org/has_chunk> "AI-LRR: Logical Representation and Reasoning\nNon-core:\n77\n1. Review of propositional and predicate logic (See also: MSF-Discrete)\n2. Resolution and theorem proving (propositional logic only)\na. Forward chaining, backward chaining\n3. Knowledge representation issues\na. Description logics\nb. Ontology engineering\n4. Semantic web\n5. Non-monotonic reasoning (e.g., non-classical logics, default reasoning)\n6. Argumentation\n7. Reasoning about action and change (e.g., situation and event calculus)\n8" <http://example.org/course/ZZSKR> .
_:N669a08893b504eb7b448ed28e3b984c8 <http://example.org/has_chunk> "AI-KRR: Fundamental Knowledge Representation and Reasoning\nCS Core:\n1. Types of representations\na. Symbolic, logical\ni. Creating a representation from a natural language problem statement\nb. Learned subsymbolic representations\nc. Graphical models (e.g., naive Bayes, Bayesian network)\n2. Review of probabilistic reasoning, Bayes theorem (See also: MSF-Probability)\n3. Bayesian reasoning\na. Bayesian inference\nKA Core:\n4. Random variables and probability distributions\na. Axioms of probability\nb" <http://example.org/course/ZZSKR> .
<http://example.org/course/ZZSKR> <http://example.org/is_aligned_with> _:Ndf80d4897d464f4190a003d997f85d41 <http://example.org/course/ZZSKR> .
_:Ndf80d4897d464f4190a003d997f85d41 <http://example.org/has_chunk> ".g., situation and event calculus)\n8. Temporal and spatial reasoning\n9. Logic programming\na. Prolog, Answer Set Programming\n10. Rule-based Expert Systems\n11. Semantic networks\n12. Model-based and Case-based reasoning\nIllustrative Learning Outcomes:\n1. Translate a natural language (e.g., English) sentence into a predicate logic statement.\n2. Convert a logic statement into clausal form.\n3. Apply resolution to a set of logic statements to answer a query.\n4" <http://example.org/course/ZZSKR> .
_:N669a08893b504eb7b448ed28e3b984c8 <http://example.org/has_score> "0.71170163"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZSKR> .
<http://example.org/course/ZZSKR> <http://example.org/is_aligned_with> _:Nbd1497cb1728467a9152522489a40da4 <http://example.org/course/ZZSKR> .
_:Ndf80d4897d464f4190a003d997f85d41 <http://example.org/has_score> "0.72814524"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZSKR> .
_:Nbd1497cb1728467a9152522489a40da4 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-LRR_Logical_Representation_and_Reasoning.txt> <http://example.org/course/ZZSKR> .
_:Ndf80d4897d464f4190a003d997f85d41 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-LRR_Logical_Representation_and_Reasoning.txt> <http://example.org/course/ZZSKR> .
_:N669a08893b504eb7b448ed28e3b984c8 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-KRR_Fundamental_Knowledge_Representation_and_Reasoning.txt> <http://example.org/course/ZZSKR> .
_:N359dfc8182d14b9bbf4bef550cc1ba56 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nGIT-Augmented Reality: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of GIT-Augmented Reality.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X3IT070> .
_:N0441ede183a442a58c93b9ebf6c4bd1c <http://example.org/has_score> "0.65159583"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT070> .
_:N359dfc8182d14b9bbf4bef550cc1ba56 <http://example.org/has_score> "0.64861953"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT070> .
<http://example.org/course/X3IT070> <http://example.org/is_aligned_with> _:Nc4fb5179b8cc4934a44ff22627e6cc68 <http://example.org/course/X3IT070> .
_:Nc4fb5179b8cc4934a44ff22627e6cc68 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://example.org/course/X3IT070> .
_:Nc4fb5179b8cc4934a44ff22627e6cc68 <http://example.org/has_score> "0.647673"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT070> .
<http://example.org/course/X3IT070> <http://example.org/is_aligned_with> _:N359dfc8182d14b9bbf4bef550cc1ba56 <http://example.org/course/X3IT070> .
_:N359dfc8182d14b9bbf4bef550cc1ba56 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-Augmented_Reality.txt> <http://example.org/course/X3IT070> .
_:Nc4fb5179b8cc4934a44ff22627e6cc68 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://example.org/course/X3IT070> .
_:N0441ede183a442a58c93b9ebf6c4bd1c <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://example.org/course/X3IT070> .
<http://example.org/course/X3IT070> <http://example.org/is_aligned_with> _:N0441ede183a442a58c93b9ebf6c4bd1c <http://example.org/course/X3IT070> .
_:N0441ede183a442a58c93b9ebf6c4bd1c <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X3IT070> .
_:N741b37596bf944229121ad22f9a1b345 <http://example.org/has_chunk> "FPL-SEP: Society, Ethics, and the Profession\nNon-core:\n1. Impact of English-centric programming languages\n2. Enhancing accessibility and inclusivity for people with disabilities – Supporting assistive\ntechnologies\n3. Human factors related to programming languages and usability\na. Impact of syntax on accessibility\nb. Supporting cultural differences (e.g., currency, decimals, dates)\nc. Neurodiversity\n4. Etymology of terms such as “class,” “master,” and “slave” in programming languages\n5" <http://example.org/course/X1II040> .
_:N6cf32a17840d4fd2a4cf462fb30163f0 <http://example.org/has_score> "0.63148713"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II040> .
<http://example.org/course/X1II040> <http://example.org/is_aligned_with> _:N741b37596bf944229121ad22f9a1b345 <http://example.org/course/X1II040> .
_:N741b37596bf944229121ad22f9a1b345 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-SEP_Society_Ethics_and_the_Profession.txt> <http://example.org/course/X1II040> .
_:N6cf32a17840d4fd2a4cf462fb30163f0 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Constructs_Advanced_Programming_Constructs.txt> <http://example.org/course/X1II040> .
<http://example.org/course/X1II040> <http://example.org/is_aligned_with> _:N6cf32a17840d4fd2a4cf462fb30163f0 <http://example.org/course/X1II040> .
_:N741b37596bf944229121ad22f9a1b345 <http://example.org/has_score> "0.6384863"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II040> .
_:Nff04b138f0b34aa2b1761931cd00288c <http://example.org/has_score> "0.62530947"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II040> .
_:Nff04b138f0b34aa2b1761931cd00288c <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Design_Design_Principles_of_Programming_Languages.txt> <http://example.org/course/X1II040> .
<http://example.org/course/X1II040> <http://example.org/is_aligned_with> _:Nff04b138f0b34aa2b1761931cd00288c <http://example.org/course/X1II040> .
_:N6cf32a17840d4fd2a4cf462fb30163f0 <http://example.org/has_chunk> ". Use various advanced programming constructs and idioms correctly.\n2. Discuss how various advanced programming constructs aim to improve program structure, software\nquality, and programmer productivity.\n3. Discuss how various advanced programming constructs interact with the definition and\nimplementation of other language features." <http://example.org/course/X1II040> .
_:Nff04b138f0b34aa2b1761931cd00288c <http://example.org/has_chunk> ". Formal description of a programming language\n6. Green computing principles (See also: SEP-Sustainability)\nIllustrative Learning Outcomes:\nNon-core:\n1. Understand what constitutes good language design and apply that knowledge to evaluate a real\nprogramming language." <http://example.org/course/X1II040> .
_:N71df90bd44c94e00b07a668f2bd70aa1 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Development_Fundamentals_SDF/SDF-Fundamental_Programming_Concepts_and_Practices.txt> <http://example.org/course/X2I4020> .
_:N34d7072912cc441b83411e39e36a76ab <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Networking_and_Communication_NC/NC-Fundamentals_Fundamentals.txt> <http://example.org/course/X2I4020> .
_:N34d7072912cc441b83411e39e36a76ab <http://example.org/has_score> "0.6965976"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I4020> .
_:N90b74d10973e4425bef0f0867b769489 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Operating_Systems_OS/OS-Protection_Protection_and_Safety.txt> <http://example.org/course/X2I4020> .
_:N71df90bd44c94e00b07a668f2bd70aa1 <http://example.org/has_chunk> ". Libraries and frameworks provided by the language (when/where applicable) \n8. Recursion \n9. Dealing with runtime errors in programs (e.g., exception handling). \n10. Basic concepts of programming errors, testing, and debugging (See also:  SE-Construction, SEC-Coding)  \n11. Documenting/commenting code at the program and module level.(See also:  SE-Construction)   \n12. Develop a security mindset. (See also: SEC-Foundations)" <http://example.org/course/X2I4020> .
<http://example.org/course/X2I4020> <http://example.org/is_aligned_with> _:N71df90bd44c94e00b07a668f2bd70aa1 <http://example.org/course/X2I4020> .
_:N34d7072912cc441b83411e39e36a76ab <http://example.org/has_chunk> ". Layering principles (e.g., encapsulation and hourglass model) (See also: SF-Foundations)\n6. Network elements (e.g., routers, switches, hubs, access points, and hosts)\n7. Basic queueing concepts (e.g., relationship with latency, congestion, service levels, etc.)\nIllustrative Learning Outcomes:\nCS Core:\n1. Articulate the organization of the internet.\n2. List and define the appropriate network terminology\n3. Describe the layered structure of a typical networked architecture.\n4" <http://example.org/course/X2I4020> .
<http://example.org/course/X2I4020> <http://example.org/is_aligned_with> _:N90b74d10973e4425bef0f0867b769489 <http://example.org/course/X2I4020> .
_:N90b74d10973e4425bef0f0867b769489 <http://example.org/has_score> "0.6731353"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I4020> .
_:N90b74d10973e4425bef0f0867b769489 <http://example.org/has_chunk> ". Security methods and devices (See also: SEC-Foundations)\n Example concepts:\na. Rings of protection (history from Multics to virtualized x86)\nb. x86_64 rings -1 and -2 (hypervisor and ME/PSP)\n7. Protection, access control, and authentication (See also: SEC-Foundations, SEC-Crypto)\nIllustrative Learning Outcomes:\nCS Core:\n1. Understand the requirement for protection and security mechanisms in operating systems.\n2. List and describe the attack vectors that leverage OS vulnerabilities.\n3" <http://example.org/course/X2I4020> .
_:N71df90bd44c94e00b07a668f2bd70aa1 <http://example.org/has_score> "0.666131"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I4020> .
<http://example.org/course/X2I4020> <http://example.org/is_aligned_with> _:N34d7072912cc441b83411e39e36a76ab <http://example.org/course/X2I4020> .
_:N90c732d4cbc04f8798c5419e2789ed83 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Project Management: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Project Management.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X2II110> .
_:N90c732d4cbc04f8798c5419e2789ed83 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Project_Management.txt> <http://example.org/course/X2II110> .
_:N0f1d6aa4d28a45eca3a10fc7002bb128 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-Augmented_Reality.txt> <http://example.org/course/X2II110> .
_:N90c732d4cbc04f8798c5419e2789ed83 <http://example.org/has_score> "0.67353106"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II110> .
_:Nf88a2530ef5f4203ada06b110f540ff9 <http://example.org/has_score> "0.67118233"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II110> .
_:N0f1d6aa4d28a45eca3a10fc7002bb128 <http://example.org/has_score> "0.66006756"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II110> .
<http://example.org/course/X2II110> <http://example.org/is_aligned_with> _:Nf88a2530ef5f4203ada06b110f540ff9 <http://example.org/course/X2II110> .
_:Nf88a2530ef5f4203ada06b110f540ff9 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://example.org/course/X2II110> .
_:N0f1d6aa4d28a45eca3a10fc7002bb128 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nGIT-Augmented Reality: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of GIT-Augmented Reality.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X2II110> .
<http://example.org/course/X2II110> <http://example.org/is_aligned_with> _:N0f1d6aa4d28a45eca3a10fc7002bb128 <http://example.org/course/X2II110> .
_:Nf88a2530ef5f4203ada06b110f540ff9 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X2II110> .
<http://example.org/course/X2II110> <http://example.org/is_aligned_with> _:N90c732d4cbc04f8798c5419e2789ed83 <http://example.org/course/X2II110> .
_:Nb2edfb1e690646a6a12c03443e54be1d <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-OOP_Object-Oriented_Programming.txt> <http://example.org/course/X3IOM20> .
_:Nd2d6ae1603f547d1994bd4c645f0dc23 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-Introduction_Fundamental_Issues.txt> <http://example.org/course/X3IOM20> .
_:Nb2edfb1e690646a6a12c03443e54be1d <http://example.org/has_score> "0.67069864"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IOM20> .
_:Nd2d6ae1603f547d1994bd4c645f0dc23 <http://example.org/has_chunk> ".\n3. Differentiate the terms: AI, machine learning, and deep learning.\n4. Enumerate the characteristics of a specific problem." <http://example.org/course/X3IOM20> .
_:N33425698e30a429290d371145e4022df <http://example.org/has_chunk> ". Basic concept of pipelining, overlapped processing stages (See also: AR-Organization) \n6. Basic concept of scaling: performance vs problem size \n \nIllustrative Learning Outcomes:  \nCS Core: \n1. Describe the basic building blocks of computers and their role in the historical development of computer architecture. \n2. Design a simple logic circuit using the fundamental building blocks of logic design to solve a simple problem (e.g., adder). \n3" <http://example.org/course/X3IOM20> .
_:Nd2d6ae1603f547d1994bd4c645f0dc23 <http://example.org/has_score> "0.6643709"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IOM20> .
_:N33425698e30a429290d371145e4022df <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/System_Fundamentals_SF/SF-Overview_of_Computer_Systems.txt> <http://example.org/course/X3IOM20> .
_:Nb2edfb1e690646a6a12c03443e54be1d <http://example.org/has_chunk> "FPL-OOP: Object-Oriented Programming\nCS Core:\n1. Imperative programming as a subset of object-oriented programming.\n2. Object-oriented design:\na. Decomposition into objects carrying state and having behavior.\nb. Class-hierarchy design for modeling.\n3. Definition of classes: fields, methods, and constructors. (See also: SDF-Fundamentals)\n4. Subclasses, inheritance (including multiple inheritance), and method overriding.\n5. Dynamic dispatch: definition of method-call.\n6. Exception handling" <http://example.org/course/X3IOM20> .
<http://example.org/course/X3IOM20> <http://example.org/is_aligned_with> _:N33425698e30a429290d371145e4022df <http://example.org/course/X3IOM20> .
<http://example.org/course/X3IOM20> <http://example.org/is_aligned_with> _:Nb2edfb1e690646a6a12c03443e54be1d <http://example.org/course/X3IOM20> .
<http://example.org/course/X3IOM20> <http://example.org/is_aligned_with> _:Nd2d6ae1603f547d1994bd4c645f0dc23 <http://example.org/course/X3IOM20> .
_:N33425698e30a429290d371145e4022df <http://example.org/has_score> "0.6649017"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IOM20> .
_:Ndf483b9d10dc4cf78334e9f3d444a408 <http://example.org/has_chunk> ". Graph data (link traversal)\nc. Techniques for avoiding inefficient raw data access (e.g., “avg daily price”): materialized views\nand special data structures (e.g., Hyperloglog, bitmap)\nd. Geo-Spatial data (e.g., GIS databases) (See also: SPD-Interactive)\nIllustrative Learning Outcomes:\nCS Core:\n1. Describe the components of the relational data model.\n2. Model 1:1, 1:n, and n:m relationships using the relational data model.\nKA Core:\n3" <http://example.org/course/ZZDDADI> .
<http://example.org/course/ZZDDADI> <http://example.org/is_aligned_with> _:N1f7ec56188fe4811b4ae4551b8dd68b6 <http://example.org/course/ZZDDADI> .
_:N1f7ec56188fe4811b4ae4551b8dd68b6 <http://example.org/has_score> "0.75765765"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZDDADI> .
<http://example.org/course/ZZDDADI> <http://example.org/is_aligned_with> _:Ne21798bff9d041468c5bd9fcf175fb4e <http://example.org/course/ZZDDADI> .
<http://example.org/course/ZZDDADI> <http://example.org/is_aligned_with> _:Ndf483b9d10dc4cf78334e9f3d444a408 <http://example.org/course/ZZDDADI> .
_:N1f7ec56188fe4811b4ae4551b8dd68b6 <http://example.org/has_chunk> ". Normal forms (BCNF)\nc. Denormalization (for efficiency)\nNon-core:\n7. Functional dependency theory\na. Closure of a set of attributes\nb. Canonical Cover\n8. Normalization theory\na. Multi-valued dependency (4NF)\nb. Join dependency (PJNF, 5NF)\nc. Representation theory\nIllustrative Learning Outcomes:\nCS Core:\n1. Describe the defining characteristics behind the relational data model.\n2. Comment on the difference between a foreign key and a superkey.\n3. Enumerate the different types of integrity constraints" <http://example.org/course/ZZDDADI> .
_:Ne21798bff9d041468c5bd9fcf175fb4e <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Date_Management_DM/DM-Relational_Relational_Databases.txt> <http://example.org/course/ZZDDADI> .
_:Ndf483b9d10dc4cf78334e9f3d444a408 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Date_Management_DM/DM-Modeling_Data_Modeling.txt> <http://example.org/course/ZZDDADI> .
_:Ndf483b9d10dc4cf78334e9f3d444a408 <http://example.org/has_score> "0.73233926"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZDDADI> .
_:Ne21798bff9d041468c5bd9fcf175fb4e <http://example.org/has_score> "0.78274876"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZDDADI> .
_:Ne21798bff9d041468c5bd9fcf175fb4e <http://example.org/has_chunk> "DM-Relational: Relational Databases\nCS Core:\n1. Entity and referential integrity: Candidate key, superkeys\n2. Relational database design\nKA Core:\n3. Mapping conceptual schema to a relational schema\n4. Physical database design: file and storage structures (See also: OS-Files)\n5. Introduction to Functional dependency theory\n6. Normalization Theory\na. Decomposition of a schema; lossless-join, and dependency-preservation properties of a\ndecomposition\nb. Normal forms (BCNF)\nc" <http://example.org/course/ZZDDADI> .
_:N1f7ec56188fe4811b4ae4551b8dd68b6 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Date_Management_DM/DM-Relational_Relational_Databases.txt> <http://example.org/course/ZZDDADI> .
_:Nd391e8c829a84f0a8e55da907d10be63 <http://example.org/has_score> "0.6673847"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I2010> .
<http://example.org/course/X1I2010> <http://example.org/is_aligned_with> _:Nd391e8c829a84f0a8e55da907d10be63 <http://example.org/course/X1I2010> .
_:N44c0a184c529470b8f6647c57132a560 <http://example.org/has_chunk> ". CS applications: gradient descent for machine learning, forward and inverse kinematics,\napplications of calculus to probability\nNote: the calculus topics listed above are aligned with computer science goals rather than with\ntraditional calculus courses. For example, multivariate calculus is often a course by itself, but computer\nscience undergraduates only need parts of it for machine learning.\nIllustrative Learning Outcomes:\nKA Core:\n1. Sequences, series, limits\na" <http://example.org/course/X1I2010> .
_:N8c86e5419833489690c312ca5ebc1093 <http://example.org/has_chunk> "MSF-Discrete: Discrete Mathematics\nCS Core:\n1. Sets, relations, functions, cardinality\n2. Recursive mathematical definitions\n3. Proof techniques (induction, proof by contradiction)\n4. Permutations, combinations, counting, pigeonhole principle\n5. Modular arithmetic\n6. Logic: truth tables, connectives (operators), inference rules, formulas, normal forms, simple\npredicate logic\n7. Graphs: basic definitions\n8. Order notation\nIllustrative Learning Outcomes:\nCS Core:\n1" <http://example.org/course/X1I2010> .
_:Nd391e8c829a84f0a8e55da907d10be63 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://example.org/course/X1I2010> .
_:N44c0a184c529470b8f6647c57132a560 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Calculus.txt> <http://example.org/course/X1I2010> .
_:Nd391e8c829a84f0a8e55da907d10be63 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://example.org/course/X1I2010> .
_:N8c86e5419833489690c312ca5ebc1093 <http://example.org/has_score> "0.6695818"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I2010> .
_:N8c86e5419833489690c312ca5ebc1093 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Discrete_Discrete_Mathematics.txt> <http://example.org/course/X1I2010> .
<http://example.org/course/X1I2010> <http://example.org/is_aligned_with> _:N8c86e5419833489690c312ca5ebc1093 <http://example.org/course/X1I2010> .
<http://example.org/course/X1I2010> <http://example.org/is_aligned_with> _:N44c0a184c529470b8f6647c57132a560 <http://example.org/course/X1I2010> .
_:N44c0a184c529470b8f6647c57132a560 <http://example.org/has_score> "0.6533818"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I2010> .
<http://example.org/course/X1II030> <http://example.org/is_aligned_with> _:N3e1392f3db6143d6b4a9e2e9e7828d44 <http://example.org/course/X1II030> .
_:Nd9416f7e470a4121a79b1ec56552254c <http://example.org/has_chunk> ". (See also: AI-LRR)\n13. Integration with other programming paradigms such as object-oriented programming.\n14. Advance programming constructs such as difference-lists, creating user defined data structures, set\nof, etc.\nIllustrative learning outcomes:\nKA Core:\n1. Use a logic language to implement a conventional algorithm.\n2. Use a logic language to implement an algorithm employing implicit search using clauses, relations,\nand cuts.\n3" <http://example.org/course/X1II030> .
_:Ndd033279cc164329b873b33efaafcbf4 <http://example.org/has_score> "0.7077459"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II030> .
_:Nd9416f7e470a4121a79b1ec56552254c <http://example.org/has_score> "0.70625216"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II030> .
_:Ndd033279cc164329b873b33efaafcbf4 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Complexity_Complexity.txt> <http://example.org/course/X1II030> .
<http://example.org/course/X1II030> <http://example.org/is_aligned_with> _:Nd9416f7e470a4121a79b1ec56552254c <http://example.org/course/X1II030> .
_:N3e1392f3db6143d6b4a9e2e9e7828d44 <http://example.org/has_chunk> "AL-Complexity: Complexity\nCS Core:\n1. Complexity Analysis Framework\na. Best, average, and worst-case performance of an algorithm\nb. Empirical and relative (Order of Growth) measurements\nc. Input size and primitive operations\nd. Time and space efficiency\n2. Asymptotic complexity analysis (average and worst-case bounds)\na. Big-O, Big-Omega, and Big-Theta formal notations\nb. Foundational Complexity Classes and Representative Examples/Problems\ni. O(1) Constant (e.g., array access)\nii. O(log2 n) Logarithmic (e" <http://example.org/course/X1II030> .
_:N3e1392f3db6143d6b4a9e2e9e7828d44 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Complexity_Complexity.txt> <http://example.org/course/X1II030> .
_:Nd9416f7e470a4121a79b1ec56552254c <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Logic_Logic_Programming.txt> <http://example.org/course/X1II030> .
<http://example.org/course/X1II030> <http://example.org/is_aligned_with> _:Ndd033279cc164329b873b33efaafcbf4 <http://example.org/course/X1II030> .
_:N3e1392f3db6143d6b4a9e2e9e7828d44 <http://example.org/has_score> "0.7266675"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II030> .
_:Ndd033279cc164329b873b33efaafcbf4 <http://example.org/has_chunk> ". Tractability and intractability\na. P, NP, and NP-Complete Complexity Classes\nb. NP-Complete Problems (e.g., SAT, Knapsack, TSP)\nc. Reductions\n5. Time and space tradeoffs in algorithms\n92\nKA Core:\n6. Little-o, Little-Omega, and Little Theta notations\n7. Formal recursive analysis\n8. Amortized analysis\n9. Turing Machine-based models of complexity\na. Time complexity\ni. P, NP, NP-C, and EXP classes\nii. Cook-Levin theorem\nb. Space Complexity\ni. NSpace and PSpace\nii" <http://example.org/course/X1II030> .
_:Nda7b8979d6ab492ca25f4b8cc110ec84 <http://example.org/has_chunk> ". Increasing accessibility by supporting multiple languages within applications (UTF)\nIllustrative learning outcomes:\nNon-core:\n1. Consciously design programming languages to be inclusive and non-offensive." <http://example.org/course/X3CI020> .
_:Nbd4048675df74e0cb464cfcc81d6abc7 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://example.org/course/X3CI020> .
_:Nbd4048675df74e0cb464cfcc81d6abc7 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://example.org/course/X3CI020> .
<http://example.org/course/X3CI020> <http://example.org/is_aligned_with> _:N34e9f79cad1e4c41b6b358efd89d7834 <http://example.org/course/X3CI020> .
_:N34e9f79cad1e4c41b6b358efd89d7834 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Translation_Language_Translation_and_Execution.txt> <http://example.org/course/X3CI020> .
_:N34e9f79cad1e4c41b6b358efd89d7834 <http://example.org/has_score> "0.63171065"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3CI020> .
_:Nda7b8979d6ab492ca25f4b8cc110ec84 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-SEP_Society_Ethics_and_the_Profession.txt> <http://example.org/course/X3CI020> .
_:Nda7b8979d6ab492ca25f4b8cc110ec84 <http://example.org/has_score> "0.6435982"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3CI020> .
<http://example.org/course/X3CI020> <http://example.org/is_aligned_with> _:Nbd4048675df74e0cb464cfcc81d6abc7 <http://example.org/course/X3CI020> .
<http://example.org/course/X3CI020> <http://example.org/is_aligned_with> _:Nda7b8979d6ab492ca25f4b8cc110ec84 <http://example.org/course/X3CI020> .
_:Nbd4048675df74e0cb464cfcc81d6abc7 <http://example.org/has_score> "0.64057136"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3CI020> .
_:N34e9f79cad1e4c41b6b358efd89d7834 <http://example.org/has_chunk> ". Language translation pipeline: syntax analysis, parsing, optional type-checking, translation/code\ngeneration and optimization, linking, loading, execution\nKA Core:\n9. Run-time representation of core language constructs such as objects (method tables) and functions\nthat can be passed as parameters to and returned from functions (closures)\n10. Secure compiler development (See also: SEC-Foundations, SEC-Coding)\nIllustrative learning outcomes:\nCS Core:\n1" <http://example.org/course/X3CI020> .
_:Ne184d79b71294650a9117f9b607f2db3 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Calculus.txt> <http://example.org/course/X3IO080> .
_:Ne184d79b71294650a9117f9b607f2db3 <http://example.org/has_score> "0.7094965"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO080> .
_:N3acc9f9de8134a7e8e5da864c07e5fe1 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI_Search_Search.txt> <http://example.org/course/X3IO080> .
_:Ne184d79b71294650a9117f9b607f2db3 <http://example.org/has_chunk> ".\nb. Apply the Taylor series to approximations.\n6. Multivariate calculus: partial derivatives, gradient, chain-rule, vector valued functions, applications\nto optimization, convexity, global vs local minima.\na. Compute partial derivatives and gradients.\nb. Work through examples with vector-valued functions with gradient notation.\nc. Explain applications to optimization.\n7. ODEs: definition, Euler method, applications to simulation\na. Apply the Euler method to integration.\nb" <http://example.org/course/X3IO080> .
<http://example.org/course/X3IO080> <http://example.org/is_aligned_with> _:N0976b29c32c045b58d62e452ecfb8536 <http://example.org/course/X3IO080> .
_:N0976b29c32c045b58d62e452ecfb8536 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/X3IO080> .
_:N0976b29c32c045b58d62e452ecfb8536 <http://example.org/has_score> "0.70375514"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO080> .
_:N3acc9f9de8134a7e8e5da864c07e5fe1 <http://example.org/has_chunk> ". What it means to “solve” a game (e.g., checkers)\n15. Implementation of minimax search, beam search\n16. Expectimax search (MDP-solving) and chance nodes\n17. Stochastic search\na. Simulated annealing\nb. Genetic algorithms\nc. Monte-Carlo tree search\nIllustrative Learning Outcomes:\n1. Design the state space representation for a puzzle (e.g., N-queens or 3-jug problem)\n2. Select and implement an appropriate uninformed search algorithm for a problem (e.g" <http://example.org/course/X3IO080> .
<http://example.org/course/X3IO080> <http://example.org/is_aligned_with> _:N3acc9f9de8134a7e8e5da864c07e5fe1 <http://example.org/course/X3IO080> .
_:N0976b29c32c045b58d62e452ecfb8536 <http://example.org/has_chunk> ".\n4. Apply two or more simple statistical learning algorithms to a classification task and measure the\nclassifiers’ accuracy.\n5. Identify overfitting in the context of a problem and learning curves and describe solutions to\noverfitting.\n6. Explain how machine learning works as an optimization/search process.\n7. Implement a statistical learning algorithm and the corresponding optimization process to train the\nclassifier and obtain a prediction on new data.\n8" <http://example.org/course/X3IO080> .
_:N3acc9f9de8134a7e8e5da864c07e5fe1 <http://example.org/has_score> "0.70989895"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO080> .
<http://example.org/course/X3IO080> <http://example.org/is_aligned_with> _:Ne184d79b71294650a9117f9b607f2db3 <http://example.org/course/X3IO080> .
_:Nc5ab59794eba4b6ca701f46abdbeb692 <http://example.org/has_score> "0.7459846"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZVA> .
_:Ne55cb1f460ca4b34bbc6f44263b8e840 <http://example.org/has_chunk> "DM-Analytics: Data Analytics\nKA Core:\n1. Exploratory data techniques (motivation, representation, descriptive statistics, visualizations)\n2. Data science lifecycle: business understanding, data understanding, data preparation, modeling,\nevaluation, deployment, and user acceptance (See also: AI-ML)\n3. Data mining and machine learning algorithms: e.g., classification, clustering, association, regression\n(See also: AI-ML)\n4. Data acquisition and governance (See also: SEC-Governance)\n5" <http://example.org/course/ZZVA> .
_:N10926c667c144990a5c2ad6da46b1f4a <http://example.org/has_score> "0.7637851"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZVA> .
_:Ne55cb1f460ca4b34bbc6f44263b8e840 <http://example.org/has_score> "0.7667128"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZVA> .
<http://example.org/course/ZZVA> <http://example.org/is_aligned_with> _:Ne55cb1f460ca4b34bbc6f44263b8e840 <http://example.org/course/ZZVA> .
_:Ne55cb1f460ca4b34bbc6f44263b8e840 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Date_Management_DM/DM-Analytics_Data_Analytics.txt> <http://example.org/course/ZZVA> .
<http://example.org/course/ZZVA> <http://example.org/is_aligned_with> _:N10926c667c144990a5c2ad6da46b1f4a <http://example.org/course/ZZVA> .
<http://example.org/course/ZZVA> <http://example.org/is_aligned_with> _:Nc5ab59794eba4b6ca701f46abdbeb692 <http://example.org/course/ZZVA> .
_:Nc5ab59794eba4b6ca701f46abdbeb692 <http://example.org/has_chunk> ". Analyze large datasets interactively. \n2. Create a backing track for a musical performance, such as live coding. \n3. Create compelling computational notebooks that construct a narrative for a given journalistic goal/story. \n4. Implement interactive code that uses a dataset and generates exploratory graphics. \n5. Create a program that performs a task using LLM systems. \n6. Contrast a program developed by an AI platform and by a human. \n7" <http://example.org/course/ZZVA> .
_:N10926c667c144990a5c2ad6da46b1f4a <http://example.org/has_chunk> ". Data exploration and visual analytics; how to calculate effect size.\n6. Data management\na. Data storage and data sharing (open science)\nb. Sensitivity and identifiability.\nIllustrative Learning Outcomes:\nCS Core:\n1. Discuss the differences between formative and summative assessment and their role in evaluating\ndesign\nKA Core:\n2. Select appropriate formative or summative evaluation methods at different points throughout the\ndevelopment of a design.\n3" <http://example.org/course/ZZVA> .
_:N10926c667c144990a5c2ad6da46b1f4a <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Human_Computer_Interaction_HCI/HCI-Evaluation_Evaluating_the_Design.txt> <http://example.org/course/ZZVA> .
_:Nc5ab59794eba4b6ca701f46abdbeb692 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Interactive_Computing_Platforms.txt> <http://example.org/course/ZZVA> .
<http://example.org/course/X3IO040> <http://example.org/is_aligned_with> _:Nb78d7c1ead434d819421ae064dabaf6b <http://example.org/course/X3IO040> .
<http://example.org/course/X3IO040> <http://example.org/is_aligned_with> _:Nba1aec404dd74d2281b8ea5efbe3470d <http://example.org/course/X3IO040> .
_:N536b1ded7a104b308a4fe17b896d88a9 <http://example.org/has_chunk> ". \n3. Compare robot-specific languages and techniques with those used for general-purpose software development. \n4. Explain the rationale behind the design of the robotic platform and its interconnections with physical or simulated systems. \n5. Given a high-level application, design a robot software architecture using ROS specifying all components and interconnections (ROS topics) to accomplish that application. \n6. Discuss the constraints a given robotic platform imposes on developers." <http://example.org/course/X3IO040> .
_:N536b1ded7a104b308a4fe17b896d88a9 <http://example.org/has_score> "0.71982765"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO040> .
<http://example.org/course/X3IO040> <http://example.org/is_aligned_with> _:N536b1ded7a104b308a4fe17b896d88a9 <http://example.org/course/X3IO040> .
_:Nba1aec404dd74d2281b8ea5efbe3470d <http://example.org/has_score> "0.760324"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO040> .
_:N536b1ded7a104b308a4fe17b896d88a9 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Robot_Platforms.txt> <http://example.org/course/X3IO040> .
_:Nb78d7c1ead434d819421ae064dabaf6b <http://example.org/has_chunk> "KA Core:  \n1. Types of robotic platforms and devices (See also: AI-Robotics) \n2. Sensors, embedded computation, and effectors (actuators) (See also: GIT-Physical)  \n3. Robot-specific languages and libraries (See also: AI-Robotics) \n4. Robotic software architecture (e.g., using the Robot Operating System (ROS)) \n5. Robotic platform constraints and design considerations (See also: AI-Robotics) \n6. Interconnections with physical or simulated systems (See also: GIT-Physical, GIT-Simulation) \n7" <http://example.org/course/X3IO040> .
_:Nb78d7c1ead434d819421ae064dabaf6b <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Robot_Platforms.txt> <http://example.org/course/X3IO040> .
_:Nba1aec404dd74d2281b8ea5efbe3470d <http://example.org/has_chunk> ". Robotic Algorithms (See also: AI-Robotics, GIT-Animation) \na. Forward kinematics \nb. Inverse kinematics  \nc. Dynamics \nd. Navigation and path planning \ne. Grasping and manipulation  \n8. Safety and interaction considerations (See also: SEP-Professional-Ethics, SEP-Context) \n \nIllustrative Learning Outcomes: \nKA Core: \n1. Design and implement an application on a given robotic platform. \n2. Integrate an Arduino-based robot kit and program it to navigate a maze. \n3" <http://example.org/course/X3IO040> .
_:Nba1aec404dd74d2281b8ea5efbe3470d <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Robot_Platforms.txt> <http://example.org/course/X3IO040> .
_:Nb78d7c1ead434d819421ae064dabaf6b <http://example.org/has_score> "0.6909025"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO040> .
_:N34ae5ad3db464e00909cb6ab061cbe0a <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Parallel_and_Distributed_Computing_PDC/PDC-Fault_Tolerance.txt> <http://example.org/course/X2I4010> .
_:N0a80534bdc7342028eee20619f6d44c8 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://example.org/course/X2I4010> .
_:N4f53a0eb6c964a7bae78205986de64d9 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Software Architecture: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Software Architecture.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X2I4010> .
_:N34ae5ad3db464e00909cb6ab061cbe0a <http://example.org/has_score> "0.6868175"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I4010> .
_:N0a80534bdc7342028eee20619f6d44c8 <http://example.org/has_score> "0.6970567"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I4010> .
_:N0a80534bdc7342028eee20619f6d44c8 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X2I4010> .
_:N4f53a0eb6c964a7bae78205986de64d9 <http://example.org/has_score> "0.6925942"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I4010> .
<http://example.org/course/X2I4010> <http://example.org/is_aligned_with> _:N34ae5ad3db464e00909cb6ab061cbe0a <http://example.org/course/X2I4010> .
_:N4f53a0eb6c964a7bae78205986de64d9 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Software_Architecture.txt> <http://example.org/course/X2I4010> .
_:N34ae5ad3db464e00909cb6ab061cbe0a <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nPDC-Fault Tolerance: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of PDC-Fault Tolerance.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X2I4010> .
<http://example.org/course/X2I4010> <http://example.org/is_aligned_with> _:N0a80534bdc7342028eee20619f6d44c8 <http://example.org/course/X2I4010> .
<http://example.org/course/X2I4010> <http://example.org/is_aligned_with> _:N4f53a0eb6c964a7bae78205986de64d9 <http://example.org/course/X2I4010> .
<http://example.org/course/YG9U17-> <http://example.org/is_aligned_with> _:Ne92d03f9e45b40a1bfd8b5f19609dc05 <http://example.org/course/YG9U17-> .
_:N246b37daf0b6469bbdbcb2b3a147a275 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-Vision_Perception_and_Computer_Vision.txt> <http://example.org/course/YG9U17-> .
_:Ne92d03f9e45b40a1bfd8b5f19609dc05 <http://example.org/has_score> "0.73347163"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/YG9U17-> .
_:Ne92d03f9e45b40a1bfd8b5f19609dc05 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-Vision_Perception_and_Computer_Vision.txt> <http://example.org/course/YG9U17-> .
_:N246b37daf0b6469bbdbcb2b3a147a275 <http://example.org/has_score> "0.7338724"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/YG9U17-> .
<http://example.org/course/YG9U17-> <http://example.org/is_aligned_with> _:N0eeb8dd71b474de2a431aef6e5f21302 <http://example.org/course/YG9U17-> .
_:Ne92d03f9e45b40a1bfd8b5f19609dc05 <http://example.org/has_chunk> ". Statistical techniques\nc. Deep learning techniques\nIllustrative Learning Outcomes:\n1. Summarize the importance of image and object recognition in AI and indicate several significant\napplications of this technology.\n2. List at least three image-segmentation approaches, such as thresholding, edge-based and region-\nbased algorithms, along with their defining characteristics, strengths, and weaknesses.\n3. Implement 2d object recognition based on contour-based and/or region-based shape\nrepresentations.\n4" <http://example.org/course/YG9U17-> .
_:N246b37daf0b6469bbdbcb2b3a147a275 <http://example.org/has_chunk> ".\n9. Evaluate the performance of the underlying feature-extraction, relative to at least one alternative\npossible approach (whether implemented or not) in its contribution to the classification task (8),\nabove.\n83\n10. Describe at least three classification approaches, their prerequisites for applicability, their strengths,\nand their shortcomings.\n11. Implement and evaluate a deep learning solution to problems in computer vision, such as object or\nscene recognition." <http://example.org/course/YG9U17-> .
<http://example.org/course/YG9U17-> <http://example.org/is_aligned_with> _:N246b37daf0b6469bbdbcb2b3a147a275 <http://example.org/course/YG9U17-> .
_:N0eeb8dd71b474de2a431aef6e5f21302 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-Vision_Perception_and_Computer_Vision.txt> <http://example.org/course/YG9U17-> .
_:N0eeb8dd71b474de2a431aef6e5f21302 <http://example.org/has_chunk> "AI-Vision: Perception and Computer Vision\nNon-core:\n1. Computer vision\na. Image acquisition, representation, processing, and properties\nb. Shape representation, object recognition, and segmentation\nc. Motion analysis\nd. Generative models\n2. Audio and speech recognition\n3. Touch and proprioception\n4. Other modalities (e.g., olfaction)\n5. Modularity in recognition\n6. Approaches to pattern recognition (See also: AI-ML)\na. Classification algorithms and measures of classification quality\nb" <http://example.org/course/YG9U17-> .
_:N0eeb8dd71b474de2a431aef6e5f21302 <http://example.org/has_score> "0.79867536"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/YG9U17-> .
_:N7b003d0d592f42558d7a2bc63e6dce7f <http://example.org/has_chunk> "OS-Concurrency: Concurrency\nCS Core:\n1. Thread abstraction relative to concurrency\n2. Race conditions, critical regions (role of interrupts, if needed) (See also: PDC-Programs)\n3. Deadlocks and starvation (See also: PDC-Coordination)\n4. Multiprocessor issues (spin-locks, reentrancy).\n5. Multiprocess concurrency vs multithreading\nKA Core:\n6. Thread creation, states, structures (See also: SF-Foundations)\n7. Thread APIs\n8" <http://example.org/course/X2I3010> .
_:Nb39b9d0849fd49dfb9fb10a075c26d16 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Architecture_and_Organization_AR/AR-Assembly_Assembly_Level_Machine_Organization.txt> <http://example.org/course/X2I3010> .
_:Ne5f869b4d15b498680fd8c2ce90e4e59 <http://example.org/has_chunk> ". \n9. Develop recursive functions. \n10. Develop programs that can handle runtime errors. \n11. Read a given program and explain what it does. \n12. Write comments for a program or a module specifying what it does. \n13. Trace the flow of control during the execution of a program.  \n14. Use appropriate terminology to identify elements of a program (e.g., identifier, operator, operand)." <http://example.org/course/X2I3010> .
<http://example.org/course/X2I3010> <http://example.org/is_aligned_with> _:N7b003d0d592f42558d7a2bc63e6dce7f <http://example.org/course/X2I3010> .
<http://example.org/course/X2I3010> <http://example.org/is_aligned_with> _:Nb39b9d0849fd49dfb9fb10a075c26d16 <http://example.org/course/X2I3010> .
_:Ne5f869b4d15b498680fd8c2ce90e4e59 <http://example.org/has_score> "0.69455045"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I3010> .
_:Nb39b9d0849fd49dfb9fb10a075c26d16 <http://example.org/has_chunk> ".\nKA Core:\n4. Discuss how instructions are represented at the machine level and in the context of a symbolic\nassembler.\n5. Map an example of high-level language patterns into assembly/machine language notations.\n6. Contrast different instruction formats considering aspects such as addresses per instruction and\nvariable-length vs fixed-length formats.\n7. Analyze a subroutine diagram to comment on how subroutine calls are handled at the assembly\nlevel.\n8" <http://example.org/course/X2I3010> .
_:N7b003d0d592f42558d7a2bc63e6dce7f <http://example.org/has_score> "0.68318504"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I3010> .
_:N7b003d0d592f42558d7a2bc63e6dce7f <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Operating_Systems_OS/OS-Concurrency_Concurrency.txt> <http://example.org/course/X2I3010> .
<http://example.org/course/X2I3010> <http://example.org/is_aligned_with> _:Ne5f869b4d15b498680fd8c2ce90e4e59 <http://example.org/course/X2I3010> .
_:Nb39b9d0849fd49dfb9fb10a075c26d16 <http://example.org/has_score> "0.68971646"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I3010> .
_:Ne5f869b4d15b498680fd8c2ce90e4e59 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Development_Fundamentals_SDF/SDF-Fundamental_Programming_Concepts_and_Practices.txt> <http://example.org/course/X2I3010> .
_:N4abf0df154a646f3b167825d77d39d89 <http://example.org/has_score> "0.6529994"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2CI010> .
_:N38a2c0afd5754111b139cd50082d4d61 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Society_Ethics_and_the_Profession_SEP/SEP-Communication.txt> <http://example.org/course/X2CI010> .
_:N20d65e4ac7934c64a5d562391f0fcc26 <http://example.org/has_chunk> ". \n7. Accessibility issues, including legal requirements such as Web Content Accessibility Guidelines (www.w3.org/TR/WCAG21) \n8. Context-aware computing  \n \nIllustrative Learning Outcomes: \nCS Core: \n1. Describe the different ways that computer technology (networks, mobile computing, artificial intelligence) mediates social interaction at the personal and collective levels. \n2" <http://example.org/course/X2CI010> .
_:N20d65e4ac7934c64a5d562391f0fcc26 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Society_Ethics_and_the_Profession_SEP/SEP-Social_Context.txt> <http://example.org/course/X2CI010> .
<http://example.org/course/X2CI010> <http://example.org/is_aligned_with> _:N38a2c0afd5754111b139cd50082d4d61 <http://example.org/course/X2CI010> .
_:N4abf0df154a646f3b167825d77d39d89 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSEC-Incident Response: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SEC-Incident Response.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X2CI010> .
<http://example.org/course/X2CI010> <http://example.org/is_aligned_with> _:N20d65e4ac7934c64a5d562391f0fcc26 <http://example.org/course/X2CI010> .
_:N38a2c0afd5754111b139cd50082d4d61 <http://example.org/has_score> "0.64892536"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2CI010> .
_:N20d65e4ac7934c64a5d562391f0fcc26 <http://example.org/has_score> "0.6605751"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2CI010> .
<http://example.org/course/X2CI010> <http://example.org/is_aligned_with> _:N4abf0df154a646f3b167825d77d39d89 <http://example.org/course/X2CI010> .
_:N4abf0df154a646f3b167825d77d39d89 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Security_SEC/SEC-Incident_Response.txt> <http://example.org/course/X2CI010> .
_:N38a2c0afd5754111b139cd50082d4d61 <http://example.org/has_chunk> "CS Core: \n1. Oral, written, and electronic team and group communication \n2. Technical communication materials (e.g., source code, and documentation, tutorials, reference materials, API documentation) \n3. Communicating with different stakeholders such as customers, leadership, or the public \n4. Team collaboration (including tools) and conflict resolution \n5. Accessibility and inclusivity requirements for addressing professional audiences \n6" <http://example.org/course/X2CI010> .
_:Ne1bb06cf87254d64b062a664db8546d9 <http://example.org/has_chunk> ". K-means\nb. Gaussian mixture models\nc. Expectation maximization (EM)\nd. Self-organizing maps\n25. Graph analysis (e.g., PageRank)\n26. Semi-supervised learning\n27. Graphical models (See also: AI-Probability)\n28. Ensembles\na. Weighted majority\nb. Boosting/bagging\nc. Random forest\nd. Gated ensemble\n29. Learning theory\na. General overview of learning theory / why learning works\nb. VC dimension\nc. Generalization bounds\n74\n30. Reinforcement learning\na. Exploration vs exploitation tradeoff\nb" <http://example.org/course/ZZPGMASRL> .
<http://example.org/course/ZZPGMASRL> <http://example.org/is_aligned_with> _:Ne1bb06cf87254d64b062a664db8546d9 <http://example.org/course/ZZPGMASRL> .
_:Necb789a906ef45809ca4ccc9beac893a <http://example.org/has_chunk> ".\n3. Compute a probabilistic inference in a real-world problem using Bayes’ theorem to determine the\nprobability of a hypothesis given evidence.\n4. Apply Bayes’ rule to determine the probability of a hypothesis given evidence.\n5. Compute the probability of outcomes and test whether outcomes are independent.\n71\nAI-ML: Machine Learning\nCS Core:\n1. Definition and examples of a broad variety of machine learning tasks\na. Supervised learning\ni. Classification\nii. Regression\nb. Reinforcement learning\nc" <http://example.org/course/ZZPGMASRL> .
_:Ne1bb06cf87254d64b062a664db8546d9 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/ZZPGMASRL> .
<http://example.org/course/ZZPGMASRL> <http://example.org/is_aligned_with> _:Necb789a906ef45809ca4ccc9beac893a <http://example.org/course/ZZPGMASRL> .
<http://example.org/course/ZZPGMASRL> <http://example.org/is_aligned_with> _:Nb216f40084d0497f92b6494e54148fd5 <http://example.org/course/ZZPGMASRL> .
_:Necb789a906ef45809ca4ccc9beac893a <http://example.org/has_score> "0.76151353"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZPGMASRL> .
_:Nb216f40084d0497f92b6494e54148fd5 <http://example.org/has_chunk> ". Axioms of probability\nb. Probabilistic inference\nc. Bayes’ Rule (derivation)\nd. Bayesian inference (more complex examples)\n5. Independence\n6. Conditional Independence\n7. Markov chains and Markov models\n8. Utility and decision making\nIllustrative Learning Outcomes:\n1. Given a natural language problem statement, encode it as a symbolic or logical representation.\n2. Explain how we can make decisions under uncertainty, using concepts such as Bayes theorem and\nutility.\n3" <http://example.org/course/ZZPGMASRL> .
_:Ne1bb06cf87254d64b062a664db8546d9 <http://example.org/has_score> "0.7808857"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZPGMASRL> .
_:Necb789a906ef45809ca4ccc9beac893a <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-KRR_Fundamental_Knowledge_Representation_and_Reasoning.txt> <http://example.org/course/ZZPGMASRL> .
_:Nb216f40084d0497f92b6494e54148fd5 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-KRR_Fundamental_Knowledge_Representation_and_Reasoning.txt> <http://example.org/course/ZZPGMASRL> .
_:Nb216f40084d0497f92b6494e54148fd5 <http://example.org/has_score> "0.7660043"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZPGMASRL> .
_:N5ef439117c1f4d31987c8f1339090d39 <http://example.org/has_score> "0.6418674"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZID> .
<http://example.org/course/ZZID> <http://example.org/is_aligned_with> _:Nd622f11a953042bba603f17dd5d5c06f <http://example.org/course/ZZID> .
_:N447ad01b6919481380c67587b408e2ad <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Human_Computer_Interaction_HCI/HCI-Accessibility_Accessibility_and_Inclusive_Design.txt> <http://example.org/course/ZZID> .
_:N447ad01b6919481380c67587b408e2ad <http://example.org/has_chunk> ".\n10. Conceptualize user experience research to identify user needs and generate design insights." <http://example.org/course/ZZID> .
<http://example.org/course/ZZID> <http://example.org/is_aligned_with> _:N5ef439117c1f4d31987c8f1339090d39 <http://example.org/course/ZZID> .
_:Nd622f11a953042bba603f17dd5d5c06f <http://example.org/has_chunk> ". Understanding ethical approval requirements before engaging in user research (See also: SETools, SEP-Ethical-Analysis, SEP-Security, SEP-Privacy, SEP-Professional-Ethics)\nKA Core:\n2. Methods for evaluation with users (See also: SE-Validation)\na. Qualitative methods (qualitative coding and thematic analysis)\nb. Quantitative methods (statistical tests)\nc. Mixed methods (e.g., observation, think-aloud, interview, survey, experiment)\nd. Presentation requirements (e.g., reports, personas)\ne" <http://example.org/course/ZZID> .
_:N447ad01b6919481380c67587b408e2ad <http://example.org/has_score> "0.64066905"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZID> .
_:N5ef439117c1f4d31987c8f1339090d39 <http://example.org/has_chunk> ". Medicine and health\nb. Economics\nc. Education\nd. Vision\ne. Natural language\nf. Robotics\ng. Game play\nh. Data mining (Cross-reference DM/Data Analytics)\n35. Ethics for Machine Learning\na. Continued focus on real data, real scenarios, and case studies (See also: SEP-Context)\nb. In depth exploration of dataset/algorithmic/evaluation bias, data privacy, and fairness (See also:\nSEP-Privacy, SEP-Context)\nc. Trust / explainability\nIllustrative Learning Outcomes:\n1" <http://example.org/course/ZZID> .
<http://example.org/course/ZZID> <http://example.org/is_aligned_with> _:N447ad01b6919481380c67587b408e2ad <http://example.org/course/ZZID> .
_:Nd622f11a953042bba603f17dd5d5c06f <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Human_Computer_Interaction_HCI/HCI-Evaluation_Evaluating_the_Design.txt> <http://example.org/course/ZZID> .
_:Nd622f11a953042bba603f17dd5d5c06f <http://example.org/has_score> "0.6431278"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZID> .
_:N5ef439117c1f4d31987c8f1339090d39 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/ZZID> .
_:Nfe27a558dc6f4bb89f9b5fe51c76be2e <http://example.org/has_score> "0.66155636"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II040> .
_:N9344bad3cd81473e976e0c0eb7b91551 <http://example.org/has_score> "0.6620563"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II040> .
<http://example.org/course/X2II040> <http://example.org/is_aligned_with> _:N45da1bcc19374f6681df1c334ee9cc74 <http://example.org/course/X2II040> .
<http://example.org/course/X2II040> <http://example.org/is_aligned_with> _:Nfe27a558dc6f4bb89f9b5fe51c76be2e <http://example.org/course/X2II040> .
_:N9344bad3cd81473e976e0c0eb7b91551 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Society_Ethics_and_the_Profession_SEP/SEP-Economies_of_Computing.txt> <http://example.org/course/X2II040> .
_:N45da1bcc19374f6681df1c334ee9cc74 <http://example.org/has_score> "0.67956275"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II040> .
_:Nfe27a558dc6f4bb89f9b5fe51c76be2e <http://example.org/has_chunk> ". Discuss why everything in computers are data, including instructions.\n2. Explain how fixed-length number representations can affect accuracy and precision.\n3. Describe how negative integers are stored in sign-magnitude and two’s-complement\nrepresentations.\n4. Discuss how different formats can represent numerical data.\n5. Explain the bit-level representation of non-numeric data, such as characters, strings, records, and\narrays.\n6. Translate numerical data from one format to another.\n7" <http://example.org/course/X2II040> .
<http://example.org/course/X2II040> <http://example.org/is_aligned_with> _:N9344bad3cd81473e976e0c0eb7b91551 <http://example.org/course/X2II040> .
_:N9344bad3cd81473e976e0c0eb7b91551 <http://example.org/has_chunk> ". Ethical concerns surrounding the attention economy and other economies of computing (e.g. informed consent, data collection, use of verbose legalese in user agreements) \n \nIllustrative Learning Outcomes: \nKA Core: \n1. Summarize the social effects of economic models (e.g., the knowledge and attention economies).  \n2. Describe the differences and similarities of competing strategies (e.g., subscription vs freemium vs free).  \n3. Discuss examples of digital divides. \n4" <http://example.org/course/X2II040> .
_:N45da1bcc19374f6681df1c334ee9cc74 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/X2II040> .
_:Nfe27a558dc6f4bb89f9b5fe51c76be2e <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Architecture_and_Organization_AR/AR-Representation_Machine-Level_Data_Representation.txt> <http://example.org/course/X2II040> .
_:N45da1bcc19374f6681df1c334ee9cc74 <http://example.org/has_chunk> ". Medicine and health\nb. Economics\nc. Education\nd. Vision\ne. Natural language\nf. Robotics\ng. Game play\nh. Data mining (Cross-reference DM/Data Analytics)\n35. Ethics for Machine Learning\na. Continued focus on real data, real scenarios, and case studies (See also: SEP-Context)\nb. In depth exploration of dataset/algorithmic/evaluation bias, data privacy, and fairness (See also:\nSEP-Privacy, SEP-Context)\nc. Trust / explainability\nIllustrative Learning Outcomes:\n1" <http://example.org/course/X2II040> .
_:N20ba89c4dc04484d84ca2def7b07ffb4 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-Virtual_Reality.txt> <http://example.org/course/X2II090> .
_:Ncb9534d9b4a7493f8ae131796ee1bd81 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X2II090> .
<http://example.org/course/X2II090> <http://example.org/is_aligned_with> _:Ncb9534d9b4a7493f8ae131796ee1bd81 <http://example.org/course/X2II090> .
_:N794425e5be1d423d8aac5581f6957c75 <http://example.org/has_score> "0.63251287"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II090> .
_:N794425e5be1d423d8aac5581f6957c75 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-Augmented_Reality.txt> <http://example.org/course/X2II090> .
<http://example.org/course/X2II090> <http://example.org/is_aligned_with> _:N794425e5be1d423d8aac5581f6957c75 <http://example.org/course/X2II090> .
_:N20ba89c4dc04484d84ca2def7b07ffb4 <http://example.org/has_score> "0.631073"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II090> .
_:Ncb9534d9b4a7493f8ae131796ee1bd81 <http://example.org/has_score> "0.6304189"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II090> .
_:N794425e5be1d423d8aac5581f6957c75 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nGIT-Augmented Reality: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of GIT-Augmented Reality.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X2II090> .
<http://example.org/course/X2II090> <http://example.org/is_aligned_with> _:N20ba89c4dc04484d84ca2def7b07ffb4 <http://example.org/course/X2II090> .
_:Ncb9534d9b4a7493f8ae131796ee1bd81 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://example.org/course/X2II090> .
_:N20ba89c4dc04484d84ca2def7b07ffb4 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nGIT-Virtual Reality: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of GIT-Virtual Reality.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X2II090> .
_:Nbce2d63a22ab4892bd47ee329d96eb3b <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Project_Management.txt> <http://example.org/course/X4II010> .
_:N831bccac9e8948c5a65d1e7406f6bb51 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://example.org/course/X4II010> .
_:N1c28fe53e9424b24b650372859653f32 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Usability_and_Human_Factors.txt> <http://example.org/course/X4II010> .
<http://example.org/course/X4II010> <http://example.org/is_aligned_with> _:N1c28fe53e9424b24b650372859653f32 <http://example.org/course/X4II010> .
_:Nbce2d63a22ab4892bd47ee329d96eb3b <http://example.org/has_score> "0.6516106"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X4II010> .
_:N831bccac9e8948c5a65d1e7406f6bb51 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X4II010> .
_:N1c28fe53e9424b24b650372859653f32 <http://example.org/has_score> "0.6533136"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X4II010> .
_:N831bccac9e8948c5a65d1e7406f6bb51 <http://example.org/has_score> "0.66754216"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X4II010> .
_:N1c28fe53e9424b24b650372859653f32 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Usability and Human Factors: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Usability and Human Factors.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X4II010> .
<http://example.org/course/X4II010> <http://example.org/is_aligned_with> _:N831bccac9e8948c5a65d1e7406f6bb51 <http://example.org/course/X4II010> .
_:Nbce2d63a22ab4892bd47ee329d96eb3b <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Project Management: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Project Management.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X4II010> .
<http://example.org/course/X4II010> <http://example.org/is_aligned_with> _:Nbce2d63a22ab4892bd47ee329d96eb3b <http://example.org/course/X4II010> .
_:Nc890dd4bcaa64a159d5c5ba71336fc9d <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/X2II010> .
<http://example.org/course/X2II010> <http://example.org/is_aligned_with> _:Nac9b906a068145d18c663d9cd45590f8 <http://example.org/course/X2II010> .
<http://example.org/course/X2II010> <http://example.org/is_aligned_with> _:N700db3fe85f7457a867a3caf3c91850e <http://example.org/course/X2II010> .
_:Nac9b906a068145d18c663d9cd45590f8 <http://example.org/has_chunk> "AI-ML: Machine Learning\nCS Core:\n1. Definition and examples of a broad variety of machine learning tasks\na. Supervised learning\ni. Classification\nii. Regression\nb. Reinforcement learning\nc. Unsupervised learning\ni. Clustering\n2. Fundamental ideas:\na. No free lunch theorem: no one learner can solve all problems; representational design decisions\nhave consequences.\nb. Sources of error and undecidability in machine learning\n3" <http://example.org/course/X2II010> .
<http://example.org/course/X2II010> <http://example.org/is_aligned_with> _:Nc890dd4bcaa64a159d5c5ba71336fc9d <http://example.org/course/X2II010> .
_:Nac9b906a068145d18c663d9cd45590f8 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/X2II010> .
_:N700db3fe85f7457a867a3caf3c91850e <http://example.org/has_score> "0.7075626"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II010> .
_:Nac9b906a068145d18c663d9cd45590f8 <http://example.org/has_score> "0.7566018"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II010> .
_:N700db3fe85f7457a867a3caf3c91850e <http://example.org/has_chunk> ". (See also: AI-LRR)\n13. Integration with other programming paradigms such as object-oriented programming.\n14. Advance programming constructs such as difference-lists, creating user defined data structures, set\nof, etc.\nIllustrative learning outcomes:\nKA Core:\n1. Use a logic language to implement a conventional algorithm.\n2. Use a logic language to implement an algorithm employing implicit search using clauses, relations,\nand cuts.\n3" <http://example.org/course/X2II010> .
_:N700db3fe85f7457a867a3caf3c91850e <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Logic_Logic_Programming.txt> <http://example.org/course/X2II010> .
_:Nc890dd4bcaa64a159d5c5ba71336fc9d <http://example.org/has_chunk> ". Basic introduction to generative neural networks (e.g., large language models)\n9. Ethics for Machine Learning (See also: SEP-Context)\na. Focus on real data, real scenarios, and case studies\nb. Dataset/algorithmic/evaluation bias and unintended consequences\n72\nKA Core:\n10. Formulation of simple machine learning as an optimization problem, such as least squares linear\nregression or logistic regression\na. Objective function\nb. Gradient descent\nc" <http://example.org/course/X2II010> .
_:Nc890dd4bcaa64a159d5c5ba71336fc9d <http://example.org/has_score> "0.71816397"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II010> .
_:Nc3221a15f7cd4add963c9e7cea881341 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Methodologies_Formal_Development_Methodologies.txt> <http://example.org/course/X3IA110> .
_:Nc3221a15f7cd4add963c9e7cea881341 <http://example.org/has_score> "0.6844155"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA110> .
_:N5f5f5391fbc349fd937c7e9579acf597 <http://example.org/has_score> "0.67531604"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA110> .
_:Nc3221a15f7cd4add963c9e7cea881341 <http://example.org/has_chunk> ".\n6. Formal modeling and manual refinement/implementation of software systems.\n7. Use of symbolic testing and fuzzing in software development.\n8. Model checking.\n9. Understanding of situations where formal methods can be effectively applied and how to structure\ndevelopment to maximize their value.\nIllustrative learning outcomes:\nNon-core:\n1. Use formal modeling techniques to develop and validate architectures.\n2" <http://example.org/course/X3IA110> .
<http://example.org/course/X3IA110> <http://example.org/is_aligned_with> _:N310bf7fa13f749b59cab03fdc2a2f737 <http://example.org/course/X3IA110> .
_:N310bf7fa13f749b59cab03fdc2a2f737 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Models_Computational_Models_and_Formal_Languages.txt> <http://example.org/course/X3IA110> .
_:N310bf7fa13f749b59cab03fdc2a2f737 <http://example.org/has_chunk> "AL-Models: Computational Models and Formal Languages\nCS Core:\n1. Formal automata\na. Finite State\nb. Pushdown\nc. Linear Bounded\nd. Turing Machine\n2. Formal languages, grammars and Chomsky Hierarchy\n(See also: FPL-Translation, FPL-Syntax)\na. Regular (Type-3)\ni. Regular Expressions\nb. Context-Free (Type-2)\nc. Context-Sensitive (Type-1)\nd. Recursively Enumerable (Type-0)\n3. Relations among formal automata, languages, and grammars\n4. Decidability, (un)computability, and halting\n5. The Church-Turing thesis\n6" <http://example.org/course/X3IA110> .
_:N310bf7fa13f749b59cab03fdc2a2f737 <http://example.org/has_score> "0.6809301"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA110> .
_:N5f5f5391fbc349fd937c7e9579acf597 <http://example.org/has_chunk> ".\n2. Use proof assisted programming languages to develop fully specified and verified software artifacts.\n3. Use verifier and specification support in programming languages to formally validate system\nproperties.\n4. Integrate symbolic validation tooling into a programming workflow.\n5. Discuss when and how formal methods can be effectively used in the development process." <http://example.org/course/X3IA110> .
<http://example.org/course/X3IA110> <http://example.org/is_aligned_with> _:N5f5f5391fbc349fd937c7e9579acf597 <http://example.org/course/X3IA110> .
<http://example.org/course/X3IA110> <http://example.org/is_aligned_with> _:Nc3221a15f7cd4add963c9e7cea881341 <http://example.org/course/X3IA110> .
_:N5f5f5391fbc349fd937c7e9579acf597 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Methodologies_Formal_Development_Methodologies.txt> <http://example.org/course/X3IA110> .
_:Ne77e8086d2d84c3faaa6c612131258ef <http://example.org/has_score> "0.68083847"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZRMACS> .
<http://example.org/course/ZZRMACS> <http://example.org/is_aligned_with> _:Ndd908d0c990046b492bb91b209f448dd <http://example.org/course/ZZRMACS> .
_:Ndd908d0c990046b492bb91b209f448dd <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Human_Computer_Interaction_HCI/HCI-Evaluation_Evaluating_the_Design.txt> <http://example.org/course/ZZRMACS> .
_:Ne77e8086d2d84c3faaa6c612131258ef <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/ZZRMACS> .
<http://example.org/course/ZZRMACS> <http://example.org/is_aligned_with> _:Ne77e8086d2d84c3faaa6c612131258ef <http://example.org/course/ZZRMACS> .
<http://example.org/course/ZZRMACS> <http://example.org/is_aligned_with> _:N1c8cff00117749c1b3778abadc3ebbd5 <http://example.org/course/ZZRMACS> .
_:Ndd908d0c990046b492bb91b209f448dd <http://example.org/has_score> "0.6643764"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZRMACS> .
_:N1c8cff00117749c1b3778abadc3ebbd5 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI_SEP_Applications_and_Societal_Impact.txt> <http://example.org/course/ZZRMACS> .
_:N1c8cff00117749c1b3778abadc3ebbd5 <http://example.org/has_score> "0.6588634"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZRMACS> .
_:Ne77e8086d2d84c3faaa6c612131258ef <http://example.org/has_chunk> ". Medicine and health\nb. Economics\nc. Education\nd. Vision\ne. Natural language\nf. Robotics\ng. Game play\nh. Data mining (Cross-reference DM/Data Analytics)\n35. Ethics for Machine Learning\na. Continued focus on real data, real scenarios, and case studies (See also: SEP-Context)\nb. In depth exploration of dataset/algorithmic/evaluation bias, data privacy, and fairness (See also:\nSEP-Privacy, SEP-Context)\nc. Trust / explainability\nIllustrative Learning Outcomes:\n1" <http://example.org/course/ZZRMACS> .
_:N1c8cff00117749c1b3778abadc3ebbd5 <http://example.org/has_chunk> ". Human autonomy and oversight/regulations/legal requirements (See also: SEP-Context)\nf. Sustainability (See also: SEP-Sustainability)\nIllustrative Learning Outcomes:\n1. Given a real-world application domain and problem, formulate an AI solution to it, identifying proper\ndata/input, preprocessing, representations, AI techniques, and evaluation metrics/methodology.\n2" <http://example.org/course/ZZRMACS> .
_:Ndd908d0c990046b492bb91b209f448dd <http://example.org/has_chunk> ". Understanding ethical approval requirements before engaging in user research (See also: SETools, SEP-Ethical-Analysis, SEP-Security, SEP-Privacy, SEP-Professional-Ethics)\nKA Core:\n2. Methods for evaluation with users (See also: SE-Validation)\na. Qualitative methods (qualitative coding and thematic analysis)\nb. Quantitative methods (statistical tests)\nc. Mixed methods (e.g., observation, think-aloud, interview, survey, experiment)\nd. Presentation requirements (e.g., reports, personas)\ne" <http://example.org/course/ZZRMACS> .
<http://example.org/course/X1II020> <http://example.org/is_aligned_with> _:N449cc32a26954467a39e75e902fcc564 <http://example.org/course/X1II020> .
<http://example.org/course/X1II020> <http://example.org/is_aligned_with> _:N2f71692b0016472082127e25707456bb <http://example.org/course/X1II020> .
_:N449cc32a26954467a39e75e902fcc564 <http://example.org/has_chunk> ". Axioms of probability\nb. Probabilistic inference\nc. Bayes’ Rule (derivation)\nd. Bayesian inference (more complex examples)\n5. Independence\n6. Conditional Independence\n7. Markov chains and Markov models\n8. Utility and decision making\nIllustrative Learning Outcomes:\n1. Given a natural language problem statement, encode it as a symbolic or logical representation.\n2. Explain how we can make decisions under uncertainty, using concepts such as Bayes theorem and\nutility.\n3" <http://example.org/course/X1II020> .
_:N449cc32a26954467a39e75e902fcc564 <http://example.org/has_score> "0.66722775"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II020> .
_:N2f71692b0016472082127e25707456bb <http://example.org/has_score> "0.6636027"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II020> .
_:N31d2d748fe814aa9aeffb9c5605a07ad <http://example.org/has_score> "0.68666744"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II020> .
<http://example.org/course/X1II020> <http://example.org/is_aligned_with> _:N31d2d748fe814aa9aeffb9c5605a07ad <http://example.org/course/X1II020> .
_:N2f71692b0016472082127e25707456bb <http://example.org/has_chunk> ". Translate a prose description of a probabilistic process into a formal setting of sample spaces,\noutcome probabilities, and events.\nb. Calculate the probability of simple events.\nc. Determine whether two events are independent.\nd. Compute conditional probabilities, including through applying (and explaining) Bayes' Rule.\n2. Discrete random variables and distributions\na. Define the concept of a random variable and indicator random variable.\nb. Determine whether two random variables are independent.\nc" <http://example.org/course/X1II020> .
_:N2f71692b0016472082127e25707456bb <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Probability_Probability.txt> <http://example.org/course/X1II020> .
_:N449cc32a26954467a39e75e902fcc564 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-KRR_Fundamental_Knowledge_Representation_and_Reasoning.txt> <http://example.org/course/X1II020> .
_:N31d2d748fe814aa9aeffb9c5605a07ad <http://example.org/has_chunk> ".\nc. Model a variety of real-world problems in computer science using appropriate forms of graphs\nand trees, such as representing a network topology, the organization of a hierarchical file\nsystem, or a social network.\nd. Show how concepts from graphs and trees appear in data structures, algorithms, proof\ntechniques (structural induction), and counting" <http://example.org/course/X1II020> .
_:N31d2d748fe814aa9aeffb9c5605a07ad <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Discrete_Discrete_Mathematics.txt> <http://example.org/course/X1II020> .
_:Nf47c3a5f75264d598756eedbee26cf68 <http://example.org/has_score> "0.7375828"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT010> .
_:Nf47c3a5f75264d598756eedbee26cf68 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Logic_Logic_Programming.txt> <http://example.org/course/X3IT010> .
_:N681dd96c40694215ad98aff2b30310c2 <http://example.org/has_score> "0.7165141"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT010> .
_:N21e1981d089842ab85c1ac707cec2c56 <http://example.org/has_score> "0.72293603"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT010> .
<http://example.org/course/X3IT010> <http://example.org/is_aligned_with> _:N681dd96c40694215ad98aff2b30310c2 <http://example.org/course/X3IT010> .
_:N21e1981d089842ab85c1ac707cec2c56 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://example.org/course/X3IT010> .
_:N21e1981d089842ab85c1ac707cec2c56 <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://example.org/course/X3IT010> .
<http://example.org/course/X3IT010> <http://example.org/is_aligned_with> _:Nf47c3a5f75264d598756eedbee26cf68 <http://example.org/course/X3IT010> .
_:Nf47c3a5f75264d598756eedbee26cf68 <http://example.org/has_chunk> ". (See also: AI-LRR)\n13. Integration with other programming paradigms such as object-oriented programming.\n14. Advance programming constructs such as difference-lists, creating user defined data structures, set\nof, etc.\nIllustrative learning outcomes:\nKA Core:\n1. Use a logic language to implement a conventional algorithm.\n2. Use a logic language to implement an algorithm employing implicit search using clauses, relations,\nand cuts.\n3" <http://example.org/course/X3IT010> .
_:N681dd96c40694215ad98aff2b30310c2 <http://example.org/has_chunk> "FPL-Pragmatics: Language Pragmatics\nNon-core:\n1. Effect of technology needs and software requirements on programming language development and\nevolution\n2. Problem domains and programming paradigm\n3. Criteria for good programming language design\na. Principles of language design such as orthogonality\nb. Defining control and iteration constructs\nc. Modularization of large software\n4. Evaluation order, precedence, and associativity\n5. Eager vs delayed evaluation\n6. Defining control and iteration constructs\n7" <http://example.org/course/X3IT010> .
<http://example.org/course/X3IT010> <http://example.org/is_aligned_with> _:N21e1981d089842ab85c1ac707cec2c56 <http://example.org/course/X3IT010> .
_:N681dd96c40694215ad98aff2b30310c2 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Pragmatics_Language_Pragmatics.txt> <http://example.org/course/X3IT010> .
_:Nafd9b5cb7a464de2904e489c459cf45b <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Calculus.txt> <http://example.org/course/X2II100> .
_:Nafd9b5cb7a464de2904e489c459cf45b <http://example.org/has_chunk> ". CS applications: gradient descent for machine learning, forward and inverse kinematics,\napplications of calculus to probability\nNote: the calculus topics listed above are aligned with computer science goals rather than with\ntraditional calculus courses. For example, multivariate calculus is often a course by itself, but computer\nscience undergraduates only need parts of it for machine learning.\nIllustrative Learning Outcomes:\nKA Core:\n1. Sequences, series, limits\na" <http://example.org/course/X2II100> .
_:N19de50e53e6f46a5b47f7fea67c9015c <http://example.org/has_chunk> "Illustrative Learning Outcomes: \nCS Core: \n1. Explain/understand some of the intellectual property issues relating to programs.  \n2. Explain/understand when code developed by others can be used and proper ways of disclosing their use. \n3. Explain/understand the responsibility of programmers when developing code for an overall solution (which may be developed by a team). \n4. Explain/understand one or more codes of conduct applicable to programmers." <http://example.org/course/X2II100> .
_:N19de50e53e6f46a5b47f7fea67c9015c <http://example.org/has_score> "0.68259454"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II100> .
<http://example.org/course/X2II100> <http://example.org/is_aligned_with> _:Nafd9b5cb7a464de2904e489c459cf45b <http://example.org/course/X2II100> .
_:N178e04c8a1c747c3af88ef6de995346c <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nGIT-3D Modeling: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of GIT-3D Modeling.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X2II100> .
<http://example.org/course/X2II100> <http://example.org/is_aligned_with> _:N178e04c8a1c747c3af88ef6de995346c <http://example.org/course/X2II100> .
_:N178e04c8a1c747c3af88ef6de995346c <http://example.org/has_score> "0.68083835"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II100> .
_:Nafd9b5cb7a464de2904e489c459cf45b <http://example.org/has_score> "0.6814131"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II100> .
_:N178e04c8a1c747c3af88ef6de995346c <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Graphics_and_Interactive_Techniques_GIT/GIT-3D_Modeling.txt> <http://example.org/course/X2II100> .
_:N19de50e53e6f46a5b47f7fea67c9015c <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Development_Fundamentals_SDF/SDF-Society_Ethics_and_the_Profession.txt> <http://example.org/course/X2II100> .
<http://example.org/course/X2II100> <http://example.org/is_aligned_with> _:N19de50e53e6f46a5b47f7fea67c9015c <http://example.org/course/X2II100> .
<http://example.org/course/X3IA020> <http://example.org/is_aligned_with> _:N238b90f1cf094fbabef19d222e24edec <http://example.org/course/X3IA020> .
_:N238b90f1cf094fbabef19d222e24edec <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Web_Platforms.txt> <http://example.org/course/X3IA020> .
_:N57a9ef203a864052a53ad9cc9f369ce8 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Interactive_Computing_Platforms.txt> <http://example.org/course/X3IA020> .
_:N238b90f1cf094fbabef19d222e24edec <http://example.org/has_score> "0.7009734"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA020> .
_:N57a9ef203a864052a53ad9cc9f369ce8 <http://example.org/has_score> "0.6968716"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA020> .
_:N6add2ecd22544f94bb542075df2c5e71 <http://example.org/has_score> "0.71942484"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA020> .
_:N238b90f1cf094fbabef19d222e24edec <http://example.org/has_chunk> ". Serverless, cloud computing on demand \n10. Storage solutions (See also: DM-Relational, DM-NoSQL) \na. Relational Databases \nb. NoSQL databases \n \nIllustrative Learning Outcomes: \nKA Core: \n1. Design and implement a web-based application using a microservice architecture design. \n2. Describe the constraints, such as hosting, services, and scalability, related to web platforms. \n3. Compare and contrast web programming with general-purpose programming.  \n4" <http://example.org/course/X3IA020> .
<http://example.org/course/X3IA020> <http://example.org/is_aligned_with> _:N57a9ef203a864052a53ad9cc9f369ce8 <http://example.org/course/X3IA020> .
_:N57a9ef203a864052a53ad9cc9f369ce8 <http://example.org/has_chunk> "Non-core: \n1. Data Analysis Platforms \na. Jupyter notebooks; Google Colab; R; SPSS; Observable. \nb. Cloud SQL/data analysis platforms (e.g., BigQuery) (See also: DM-Querying) \ni. Apache Spark \nii. Data Visualizations (See also: GIT-Visualization) \nc. Interactive presentations backed by data \nd. Design tools requiring low-latency feedback loops \ni. Rendering tools \nii. Graphic design tools \n2. Prompt programming  \na. Generative AI (e.g" <http://example.org/course/X3IA020> .
<http://example.org/course/X3IA020> <http://example.org/is_aligned_with> _:N6add2ecd22544f94bb542075df2c5e71 <http://example.org/course/X3IA020> .
_:N6add2ecd22544f94bb542075df2c5e71 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Date_Management_DM/DM-Core_Core_Database_System_Concepts.txt> <http://example.org/course/X3IA020> .
_:N6add2ecd22544f94bb542075df2c5e71 <http://example.org/has_chunk> ".\n3. Follow a query as it is processed by the components of a (relational) database system.\n4. Defend the value of data independence.\n5. Compose a simple select-project-join query in SQL.\n6. Enumerate the four properties of a correct transaction manager.\n7. Describe the advantages for eliminating duplicate repeated data.\n8. Outline how MapReduce uses parallelism to process data efficiently.\n9. Evaluate the differences between structured and semi/unstructured databases." <http://example.org/course/X3IA020> .
_:Nfde9ab8214664a839edee1b1d763c0bb <http://example.org/has_score> "0.71092606"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZTASPM> .
_:N9b0ea0129a534aa795747f34047cb4e2 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-NLP_Natural_Language_Processing.txt> <http://example.org/course/ZZTASPM> .
<http://example.org/course/ZZTASPM> <http://example.org/is_aligned_with> _:Nfde9ab8214664a839edee1b1d763c0bb <http://example.org/course/ZZTASPM> .
_:N9b0ea0129a534aa795747f34047cb4e2 <http://example.org/has_score> "0.72855633"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZTASPM> .
<http://example.org/course/ZZTASPM> <http://example.org/is_aligned_with> _:N9b0ea0129a534aa795747f34047cb4e2 <http://example.org/course/ZZTASPM> .
_:N9b0ea0129a534aa795747f34047cb4e2 <http://example.org/has_chunk> ". Examples of use: POS tagging and morphology\n8. Information retrieval (See also: DM-Unstructured)\na. Vector space model\ni. TF & IDF\nb. Precision and recall\n9. Information extraction\n10. Language translation\n11. Text classification, categorization\na. Bag of words model\n12. Deep learning for NLP (See also: AI-ML)\na. RNNs\nb. Transformers\nc. Multi-modal embeddings (e.g., images + text)\nd. Generative language models\nIllustrative Learning Outcomes:\n1" <http://example.org/course/ZZTASPM> .
<http://example.org/course/ZZTASPM> <http://example.org/is_aligned_with> _:N8983df73653740f9886cb055b3b4b912 <http://example.org/course/ZZTASPM> .
_:Nfde9ab8214664a839edee1b1d763c0bb <http://example.org/has_chunk> ". Describe the differences among the three main styles of learning (supervised, reinforcement, and\nunsupervised) and determine which is appropriate to a particular problem domain.\n2. Differentiate the terms of AI, machine learning, and deep learning.\n3. Frame an application as a classification problem, including the available input features and output\nto be predicted (e.g., identifying alphabetic characters from pixel grid input).\n4" <http://example.org/course/ZZTASPM> .
_:Nfde9ab8214664a839edee1b1d763c0bb <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/ZZTASPM> .
_:N8983df73653740f9886cb055b3b4b912 <http://example.org/has_score> "0.7010278"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZTASPM> .
_:N8983df73653740f9886cb055b3b4b912 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-NLP_Natural_Language_Processing.txt> <http://example.org/course/ZZTASPM> .
_:N8983df73653740f9886cb055b3b4b912 <http://example.org/has_chunk> ". Define and contrast deterministic and stochastic grammars, providing examples to show the\nadequacy of each.\n2. Simulate, apply, or implement classic and stochastic algorithms for parsing natural language.\n3. Identify the challenges of representing meaning.\n4. List the advantages of using standard corpora. Identify examples of current corpora for a variety of\nNLP tasks.\n5. Identify techniques for information retrieval, language translation, and text classification.\n6" <http://example.org/course/ZZTASPM> .
<http://example.org/course/X1II070> <http://example.org/is_aligned_with> _:Nf1f03a24a9854c1ab32065996d691c6f <http://example.org/course/X1II070> .
_:N526724457aad4bcd87f752a99d140438 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Calculus.txt> <http://example.org/course/X1II070> .
_:N526724457aad4bcd87f752a99d140438 <http://example.org/has_score> "0.7096773"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II070> .
<http://example.org/course/X1II070> <http://example.org/is_aligned_with> _:N113351f9ac00473ca865f10c8cfb37d9 <http://example.org/course/X1II070> .
_:Nf1f03a24a9854c1ab32065996d691c6f <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Calculus.txt> <http://example.org/course/X1II070> .
_:N113351f9ac00473ca865f10c8cfb37d9 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Calculus.txt> <http://example.org/course/X1II070> .
_:N113351f9ac00473ca865f10c8cfb37d9 <http://example.org/has_score> "0.71043766"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II070> .
_:N113351f9ac00473ca865f10c8cfb37d9 <http://example.org/has_chunk> ".\nb. Apply the Taylor series to approximations.\n6. Multivariate calculus: partial derivatives, gradient, chain-rule, vector valued functions, applications\nto optimization, convexity, global vs local minima.\na. Compute partial derivatives and gradients.\nb. Work through examples with vector-valued functions with gradient notation.\nc. Explain applications to optimization.\n7. ODEs: definition, Euler method, applications to simulation\na. Apply the Euler method to integration.\nb" <http://example.org/course/X1II070> .
<http://example.org/course/X1II070> <http://example.org/is_aligned_with> _:N526724457aad4bcd87f752a99d140438 <http://example.org/course/X1II070> .
_:Nf1f03a24a9854c1ab32065996d691c6f <http://example.org/has_chunk> ". CS applications: gradient descent for machine learning, forward and inverse kinematics,\napplications of calculus to probability\nNote: the calculus topics listed above are aligned with computer science goals rather than with\ntraditional calculus courses. For example, multivariate calculus is often a course by itself, but computer\nscience undergraduates only need parts of it for machine learning.\nIllustrative Learning Outcomes:\nKA Core:\n1. Sequences, series, limits\na" <http://example.org/course/X1II070> .
_:N526724457aad4bcd87f752a99d140438 <http://example.org/has_chunk> ". Taylor series\n6. Multivariate calculus: partial derivatives, gradient, chain-rule, vector valued functions,\n7. Optimization: convexity, global vs local minima, gradient descent, constrained optimization, and\nLagrange multipliers.\n8. Ordinary Differential Equations (ODEs): definition, Euler method, applications to simulation, Monte\nCarlo integration\n9" <http://example.org/course/X1II070> .
_:Nf1f03a24a9854c1ab32065996d691c6f <http://example.org/has_score> "0.7081332"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II070> .
<http://example.org/course/X3IO050> <http://example.org/is_aligned_with> _:Ne1dcc8fcbefb4025955602dfabd4419e <http://example.org/course/X3IO050> .
_:Ne1dcc8fcbefb4025955602dfabd4419e <http://example.org/has_score> "0.7228517"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO050> .
_:N1d650b5082f4492a873e70a9f9bb0597 <http://example.org/has_chunk> ".\n4. Apply two or more simple statistical learning algorithms to a classification task and measure the\nclassifiers’ accuracy.\n5. Identify overfitting in the context of a problem and learning curves and describe solutions to\noverfitting.\n6. Explain how machine learning works as an optimization/search process.\n7. Implement a statistical learning algorithm and the corresponding optimization process to train the\nclassifier and obtain a prediction on new data.\n8" <http://example.org/course/X3IO050> .
_:N035c3f2b26c84c08a042a74471588600 <http://example.org/has_chunk> ". K-means\nb. Gaussian mixture models\nc. Expectation maximization (EM)\nd. Self-organizing maps\n25. Graph analysis (e.g., PageRank)\n26. Semi-supervised learning\n27. Graphical models (See also: AI-Probability)\n28. Ensembles\na. Weighted majority\nb. Boosting/bagging\nc. Random forest\nd. Gated ensemble\n29. Learning theory\na. General overview of learning theory / why learning works\nb. VC dimension\nc. Generalization bounds\n74\n30. Reinforcement learning\na. Exploration vs exploitation tradeoff\nb" <http://example.org/course/X3IO050> .
_:Ne1dcc8fcbefb4025955602dfabd4419e <http://example.org/has_chunk> ".\n9. Explain how tree balance affects the efficiency of binary search tree operations.\n10. Explain to a non-technical audience the significance of tractable versus intractable algorithms using\nan intuitive explanation of Big-O complexity.\n11. Explain the significance of NP-Completeness.\n12. Explain how NP-Hard is a lower bound and NP is an upper bound for NP-Completeness.\n13. Explain examples of NP-complete problems.\nKA Core:\n14" <http://example.org/course/X3IO050> .
_:N035c3f2b26c84c08a042a74471588600 <http://example.org/has_score> "0.73098576"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO050> .
_:N1d650b5082f4492a873e70a9f9bb0597 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/X3IO050> .
_:N035c3f2b26c84c08a042a74471588600 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-ML_Machine_Learning.txt> <http://example.org/course/X3IO050> .
_:Ne1dcc8fcbefb4025955602dfabd4419e <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Complexity_Complexity.txt> <http://example.org/course/X3IO050> .
<http://example.org/course/X3IO050> <http://example.org/is_aligned_with> _:N035c3f2b26c84c08a042a74471588600 <http://example.org/course/X3IO050> .
<http://example.org/course/X3IO050> <http://example.org/is_aligned_with> _:N1d650b5082f4492a873e70a9f9bb0597 <http://example.org/course/X3IO050> .
_:N1d650b5082f4492a873e70a9f9bb0597 <http://example.org/has_score> "0.7343019"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IO050> .
_:N6214c0284ff947b2b00d5a98632085c7 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Translation_Language_Translation_and_Execution.txt> <http://example.org/course/X2II060> .
_:N153bf74e5dad4bc487a41ea248597fd0 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-NLP_Natural_Language_Processing.txt> <http://example.org/course/X2II060> .
_:N46d4fd872f4243b99317e14c621d2305 <http://example.org/has_chunk> ". Understand the importance of writing concise and accurate technical documents following well-defined standards for format and for including appropriate tables, figures, and references.  \n2. Analyze written technical documentation for technical accuracy, concision, lack of ambiguity, and awareness of audience.  \n3. Compose and deliver an audience-aware, accessible, and organized formal presentation.  \n4. Plan interactions (e.g" <http://example.org/course/X2II060> .
<http://example.org/course/X2II060> <http://example.org/is_aligned_with> _:N153bf74e5dad4bc487a41ea248597fd0 <http://example.org/course/X2II060> .
_:N153bf74e5dad4bc487a41ea248597fd0 <http://example.org/has_chunk> ". Examples of use: POS tagging and morphology\n8. Information retrieval (See also: DM-Unstructured)\na. Vector space model\ni. TF & IDF\nb. Precision and recall\n9. Information extraction\n10. Language translation\n11. Text classification, categorization\na. Bag of words model\n12. Deep learning for NLP (See also: AI-ML)\na. RNNs\nb. Transformers\nc. Multi-modal embeddings (e.g., images + text)\nd. Generative language models\nIllustrative Learning Outcomes:\n1" <http://example.org/course/X2II060> .
<http://example.org/course/X2II060> <http://example.org/is_aligned_with> _:N46d4fd872f4243b99317e14c621d2305 <http://example.org/course/X2II060> .
_:N46d4fd872f4243b99317e14c621d2305 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Society_Ethics_and_the_Profession_SEP/SEP-Communication.txt> <http://example.org/course/X2II060> .
_:N46d4fd872f4243b99317e14c621d2305 <http://example.org/has_score> "0.6182"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II060> .
<http://example.org/course/X2II060> <http://example.org/is_aligned_with> _:N6214c0284ff947b2b00d5a98632085c7 <http://example.org/course/X2II060> .
_:N6214c0284ff947b2b00d5a98632085c7 <http://example.org/has_score> "0.62604153"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II060> .
_:N153bf74e5dad4bc487a41ea248597fd0 <http://example.org/has_score> "0.6204762"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2II060> .
_:N6214c0284ff947b2b00d5a98632085c7 <http://example.org/has_chunk> ". Language translation pipeline: syntax analysis, parsing, optional type-checking, translation/code\ngeneration and optimization, linking, loading, execution\nKA Core:\n9. Run-time representation of core language constructs such as objects (method tables) and functions\nthat can be passed as parameters to and returned from functions (closures)\n10. Secure compiler development (See also: SEC-Foundations, SEC-Coding)\nIllustrative learning outcomes:\nCS Core:\n1" <http://example.org/course/X2II060> .
<http://example.org/course/X1I2020> <http://example.org/is_aligned_with> _:Ne493e1a5a97f437bbba2f056b0e52761 <http://example.org/course/X1I2020> .
_:Ne493e1a5a97f437bbba2f056b0e52761 <http://example.org/has_chunk> ".\nc. Model a variety of real-world problems in computer science using appropriate forms of graphs\nand trees, such as representing a network topology, the organization of a hierarchical file\nsystem, or a social network.\nd. Show how concepts from graphs and trees appear in data structures, algorithms, proof\ntechniques (structural induction), and counting" <http://example.org/course/X1I2020> .
_:Ne493e1a5a97f437bbba2f056b0e52761 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Discrete_Discrete_Mathematics.txt> <http://example.org/course/X1I2020> .
_:N771e1513da154644aa876a13b19a6bbb <http://example.org/has_score> "0.694231"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I2020> .
_:N9def9cfcc645469883aabec8043cfc7e <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-SEP_Society_Ethics_and_the_Profession.txt> <http://example.org/course/X1I2020> .
_:N771e1513da154644aa876a13b19a6bbb <http://example.org/has_chunk> ".\ng. Explain what it means for a proof in propositional (or predicate) logic to be valid.\n7. Graphs\na. Illustrate by example the basic terminology of graph theory, and some of the properties and\nspecial cases of types of graphs, including trees.\nb. Demonstrate different traversal methods for trees and graphs, including pre-, post-, and in-order\ntraversal of trees, along with breadth-first and depth-first search for graphs.\nc" <http://example.org/course/X1I2020> .
_:N9def9cfcc645469883aabec8043cfc7e <http://example.org/has_score> "0.6903001"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I2020> .
<http://example.org/course/X1I2020> <http://example.org/is_aligned_with> _:N9def9cfcc645469883aabec8043cfc7e <http://example.org/course/X1I2020> .
_:Ne493e1a5a97f437bbba2f056b0e52761 <http://example.org/has_score> "0.72177756"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I2020> .
<http://example.org/course/X1I2020> <http://example.org/is_aligned_with> _:N771e1513da154644aa876a13b19a6bbb <http://example.org/course/X1I2020> .
_:N9def9cfcc645469883aabec8043cfc7e <http://example.org/has_chunk> ". Develop algorithmic solutions to real-world societal problems, such as routing an ambulance to a\nhospital.\n2. Explain the impact that an algorithm may have on the environment and society when used to solve\na real-world problem while considering its sustainability and that it can affect different societal\ngroups in different ways.\n3. Prepare a presentation that justifies the selection of appropriate data structures and/or algorithms to\nsolve a given real-world problem.\n4" <http://example.org/course/X1I2020> .
_:N771e1513da154644aa876a13b19a6bbb <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Discrete_Discrete_Mathematics.txt> <http://example.org/course/X1I2020> .
<http://example.org/course/X2I5010> <http://example.org/is_aligned_with> _:N3cbbf4dee1ab48bf94f00ee15dd23be6 <http://example.org/course/X2I5010> .
_:N5710bd948cf149d6b9b4c9a18b6ead30 <http://example.org/has_score> "0.7307234"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I5010> .
_:N9de2319c842349948b5986074ca9c572 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-KRR_Fundamental_Knowledge_Representation_and_Reasoning.txt> <http://example.org/course/X2I5010> .
_:N3cbbf4dee1ab48bf94f00ee15dd23be6 <http://example.org/has_chunk> ". Translate a prose description of a probabilistic process into a formal setting of sample spaces,\noutcome probabilities, and events.\nb. Calculate the probability of simple events.\nc. Determine whether two events are independent.\nd. Compute conditional probabilities, including through applying (and explaining) Bayes' Rule.\n2. Discrete random variables and distributions\na. Define the concept of a random variable and indicator random variable.\nb. Determine whether two random variables are independent.\nc" <http://example.org/course/X2I5010> .
_:N3cbbf4dee1ab48bf94f00ee15dd23be6 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Probability_Probability.txt> <http://example.org/course/X2I5010> .
_:N3cbbf4dee1ab48bf94f00ee15dd23be6 <http://example.org/has_score> "0.7392469"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I5010> .
_:N9de2319c842349948b5986074ca9c572 <http://example.org/has_score> "0.7199458"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I5010> .
_:N5710bd948cf149d6b9b4c9a18b6ead30 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-KRR_Fundamental_Knowledge_Representation_and_Reasoning.txt> <http://example.org/course/X2I5010> .
_:N9de2319c842349948b5986074ca9c572 <http://example.org/has_chunk> ".\n3. Compute a probabilistic inference in a real-world problem using Bayes’ theorem to determine the\nprobability of a hypothesis given evidence.\n4. Apply Bayes’ rule to determine the probability of a hypothesis given evidence.\n5. Compute the probability of outcomes and test whether outcomes are independent.\n71\nAI-ML: Machine Learning\nCS Core:\n1. Definition and examples of a broad variety of machine learning tasks\na. Supervised learning\ni. Classification\nii. Regression\nb. Reinforcement learning\nc" <http://example.org/course/X2I5010> .
<http://example.org/course/X2I5010> <http://example.org/is_aligned_with> _:N5710bd948cf149d6b9b4c9a18b6ead30 <http://example.org/course/X2I5010> .
_:N5710bd948cf149d6b9b4c9a18b6ead30 <http://example.org/has_chunk> ". Axioms of probability\nb. Probabilistic inference\nc. Bayes’ Rule (derivation)\nd. Bayesian inference (more complex examples)\n5. Independence\n6. Conditional Independence\n7. Markov chains and Markov models\n8. Utility and decision making\nIllustrative Learning Outcomes:\n1. Given a natural language problem statement, encode it as a symbolic or logical representation.\n2. Explain how we can make decisions under uncertainty, using concepts such as Bayes theorem and\nutility.\n3" <http://example.org/course/X2I5010> .
<http://example.org/course/X2I5010> <http://example.org/is_aligned_with> _:N9de2319c842349948b5986074ca9c572 <http://example.org/course/X2I5010> .
<http://example.org/course/X1II010> <http://example.org/is_aligned_with> _:Ne4777f7ec0234fc68ee551738b1a1c59 <http://example.org/course/X1II010> .
_:Na48e07c735844d21a577d9336055b5f0 <http://example.org/has_score> "0.7398335"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II010> .
_:N2bdcc82309e0477d8e6017ae272bccf1 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Discrete_Discrete_Mathematics.txt> <http://example.org/course/X1II010> .
_:Ne4777f7ec0234fc68ee551738b1a1c59 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Date_Management_DM/DM-Modeling_Data_Modeling.txt> <http://example.org/course/X1II010> .
<http://example.org/course/X1II010> <http://example.org/is_aligned_with> _:Na48e07c735844d21a577d9336055b5f0 <http://example.org/course/X1II010> .
<http://example.org/course/X1II010> <http://example.org/is_aligned_with> _:N2bdcc82309e0477d8e6017ae272bccf1 <http://example.org/course/X1II010> .
_:Ne4777f7ec0234fc68ee551738b1a1c59 <http://example.org/has_chunk> ". Graph data (link traversal)\nc. Techniques for avoiding inefficient raw data access (e.g., “avg daily price”): materialized views\nand special data structures (e.g., Hyperloglog, bitmap)\nd. Geo-Spatial data (e.g., GIS databases) (See also: SPD-Interactive)\nIllustrative Learning Outcomes:\nCS Core:\n1. Describe the components of the relational data model.\n2. Model 1:1, 1:n, and n:m relationships using the relational data model.\nKA Core:\n3" <http://example.org/course/X1II010> .
_:Na48e07c735844d21a577d9336055b5f0 <http://example.org/has_chunk> ".\nc. Model a variety of real-world problems in computer science using appropriate forms of graphs\nand trees, such as representing a network topology, the organization of a hierarchical file\nsystem, or a social network.\nd. Show how concepts from graphs and trees appear in data structures, algorithms, proof\ntechniques (structural induction), and counting" <http://example.org/course/X1II010> .
_:N2bdcc82309e0477d8e6017ae272bccf1 <http://example.org/has_chunk> ".\ng. Explain what it means for a proof in propositional (or predicate) logic to be valid.\n7. Graphs\na. Illustrate by example the basic terminology of graph theory, and some of the properties and\nspecial cases of types of graphs, including trees.\nb. Demonstrate different traversal methods for trees and graphs, including pre-, post-, and in-order\ntraversal of trees, along with breadth-first and depth-first search for graphs.\nc" <http://example.org/course/X1II010> .
_:Na48e07c735844d21a577d9336055b5f0 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Discrete_Discrete_Mathematics.txt> <http://example.org/course/X1II010> .
_:N2bdcc82309e0477d8e6017ae272bccf1 <http://example.org/has_score> "0.7220062"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II010> .
_:Ne4777f7ec0234fc68ee551738b1a1c59 <http://example.org/has_score> "0.7156061"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II010> .
<http://example.org/course/X3IA090> <http://example.org/is_aligned_with> _:N80b10d7610584376817de309598b3152 <http://example.org/course/X3IA090> .
<http://example.org/course/X3IA090> <http://example.org/is_aligned_with> _:N87b0e57a77264f7e919fa6b5b55a2c70 <http://example.org/course/X3IA090> .
_:N87b0e57a77264f7e919fa6b5b55a2c70 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-SEP_Society_Ethics_and_the_Profession.txt> <http://example.org/course/X3IA090> .
_:N80b10d7610584376817de309598b3152 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Architecture_and_Organization_AR/AR-Representation_Machine-Level_Data_Representation.txt> <http://example.org/course/X3IA090> .
<http://example.org/course/X3IA090> <http://example.org/is_aligned_with> _:Nddc69d2595464b41ad0e875936a17e03 <http://example.org/course/X3IA090> .
_:Nddc69d2595464b41ad0e875936a17e03 <http://example.org/has_chunk> ". Examples of use: POS tagging and morphology\n8. Information retrieval (See also: DM-Unstructured)\na. Vector space model\ni. TF & IDF\nb. Precision and recall\n9. Information extraction\n10. Language translation\n11. Text classification, categorization\na. Bag of words model\n12. Deep learning for NLP (See also: AI-ML)\na. RNNs\nb. Transformers\nc. Multi-modal embeddings (e.g., images + text)\nd. Generative language models\nIllustrative Learning Outcomes:\n1" <http://example.org/course/X3IA090> .
_:Nddc69d2595464b41ad0e875936a17e03 <http://example.org/has_score> "0.6108629"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA090> .
_:N87b0e57a77264f7e919fa6b5b55a2c70 <http://example.org/has_score> "0.62090874"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA090> .
_:N80b10d7610584376817de309598b3152 <http://example.org/has_chunk> "AR-Representation: Machine-Level Data Representation\nCS Core:\n1. Overview and history of computer architecture (See also: SPD-Game)\n2. Bits, bytes, and words\n3. Unsigned, signed and two’s complement representations\n4. Numeric data representation and number bases\na. Fixed-point\nb. Floating-point\n5. Representation of non-numeric data\n6. Representation of records, arrays and UTF data types (See also: AL-Foundational)\nIllustrative Learning Outcomes:\nCS Core:\n1" <http://example.org/course/X3IA090> .
_:N80b10d7610584376817de309598b3152 <http://example.org/has_score> "0.6107998"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IA090> .
_:Nddc69d2595464b41ad0e875936a17e03 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-NLP_Natural_Language_Processing.txt> <http://example.org/course/X3IA090> .
_:N87b0e57a77264f7e919fa6b5b55a2c70 <http://example.org/has_chunk> ". Increasing accessibility by supporting multiple languages within applications (UTF)\nIllustrative learning outcomes:\nNon-core:\n1. Consciously design programming languages to be inclusive and non-offensive." <http://example.org/course/X3IA090> .
_:Ne40a5af407cc49e69baec4c30be70ae6 <http://example.org/has_chunk> ". Examples of use: POS tagging and morphology\n8. Information retrieval (See also: DM-Unstructured)\na. Vector space model\ni. TF & IDF\nb. Precision and recall\n9. Information extraction\n10. Language translation\n11. Text classification, categorization\na. Bag of words model\n12. Deep learning for NLP (See also: AI-ML)\na. RNNs\nb. Transformers\nc. Multi-modal embeddings (e.g., images + text)\nd. Generative language models\nIllustrative Learning Outcomes:\n1" <http://example.org/course/X4II020> .
_:Nfdac36f7259c4bc6b4cd66b56c46c948 <http://example.org/has_score> "0.6141864"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X4II020> .
_:Nfdac36f7259c4bc6b4cd66b56c46c948 <http://example.org/has_chunk> "AR-Representation: Machine-Level Data Representation\nCS Core:\n1. Overview and history of computer architecture (See also: SPD-Game)\n2. Bits, bytes, and words\n3. Unsigned, signed and two’s complement representations\n4. Numeric data representation and number bases\na. Fixed-point\nb. Floating-point\n5. Representation of non-numeric data\n6. Representation of records, arrays and UTF data types (See also: AL-Foundational)\nIllustrative Learning Outcomes:\nCS Core:\n1" <http://example.org/course/X4II020> .
_:N23f0099c8edb46198653a43a6aef8b2f <http://example.org/has_chunk> ". Techniques for learning and mastering a platform-specific programming language \n \nIllustrative Learning Outcomes: \nCS Core: \n1. List the constraints of mobile programming. \n2. List the characteristics of scripting languages. \n3. Describe the three-tier model of web programming.  \n4. Describe how the state is maintained in web programming." <http://example.org/course/X4II020> .
_:Ne40a5af407cc49e69baec4c30be70ae6 <http://example.org/has_score> "0.62039906"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X4II020> .
<http://example.org/course/X4II020> <http://example.org/is_aligned_with> _:Nfdac36f7259c4bc6b4cd66b56c46c948 <http://example.org/course/X4II020> .
<http://example.org/course/X4II020> <http://example.org/is_aligned_with> _:Ne40a5af407cc49e69baec4c30be70ae6 <http://example.org/course/X4II020> .
<http://example.org/course/X4II020> <http://example.org/is_aligned_with> _:N23f0099c8edb46198653a43a6aef8b2f <http://example.org/course/X4II020> .
_:Nfdac36f7259c4bc6b4cd66b56c46c948 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Architecture_and_Organization_AR/AR-Representation_Machine-Level_Data_Representation.txt> <http://example.org/course/X4II020> .
_:N23f0099c8edb46198653a43a6aef8b2f <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Common_Aspects.txt> <http://example.org/course/X4II020> .
_:Ne40a5af407cc49e69baec4c30be70ae6 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-NLP_Natural_Language_Processing.txt> <http://example.org/course/X4II020> .
_:N23f0099c8edb46198653a43a6aef8b2f <http://example.org/has_score> "0.6246344"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X4II020> .
_:N27f98b6f53254de8b52aa103318f249d <http://example.org/has_chunk> ". Examples of use: POS tagging and morphology\n8. Information retrieval (See also: DM-Unstructured)\na. Vector space model\ni. TF & IDF\nb. Precision and recall\n9. Information extraction\n10. Language translation\n11. Text classification, categorization\na. Bag of words model\n12. Deep learning for NLP (See also: AI-ML)\na. RNNs\nb. Transformers\nc. Multi-modal embeddings (e.g., images + text)\nd. Generative language models\nIllustrative Learning Outcomes:\n1" <http://example.org/course/X2I5020> .
_:N27f98b6f53254de8b52aa103318f249d <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-NLP_Natural_Language_Processing.txt> <http://example.org/course/X2I5020> .
<http://example.org/course/X2I5020> <http://example.org/is_aligned_with> _:N89a986aef8684ec18c4d53e9df7cbca9 <http://example.org/course/X2I5020> .
_:Nfbf52332e13f43209b3b4b10cfd17576 <http://example.org/has_chunk> ". \n7. Accessibility issues, including legal requirements such as Web Content Accessibility Guidelines (www.w3.org/TR/WCAG21) \n8. Context-aware computing  \n \nIllustrative Learning Outcomes: \nCS Core: \n1. Describe the different ways that computer technology (networks, mobile computing, artificial intelligence) mediates social interaction at the personal and collective levels. \n2" <http://example.org/course/X2I5020> .
_:Nfbf52332e13f43209b3b4b10cfd17576 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Society_Ethics_and_the_Profession_SEP/SEP-Social_Context.txt> <http://example.org/course/X2I5020> .
<http://example.org/course/X2I5020> <http://example.org/is_aligned_with> _:N27f98b6f53254de8b52aa103318f249d <http://example.org/course/X2I5020> .
_:Nfbf52332e13f43209b3b4b10cfd17576 <http://example.org/has_score> "0.6580124"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I5020> .
_:N89a986aef8684ec18c4d53e9df7cbca9 <http://example.org/has_chunk> ". Analyze large datasets interactively. \n2. Create a backing track for a musical performance, such as live coding. \n3. Create compelling computational notebooks that construct a narrative for a given journalistic goal/story. \n4. Implement interactive code that uses a dataset and generates exploratory graphics. \n5. Create a program that performs a task using LLM systems. \n6. Contrast a program developed by an AI platform and by a human. \n7" <http://example.org/course/X2I5020> .
_:N89a986aef8684ec18c4d53e9df7cbca9 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Interactive_Computing_Platforms.txt> <http://example.org/course/X2I5020> .
<http://example.org/course/X2I5020> <http://example.org/is_aligned_with> _:Nfbf52332e13f43209b3b4b10cfd17576 <http://example.org/course/X2I5020> .
_:N27f98b6f53254de8b52aa103318f249d <http://example.org/has_score> "0.65894157"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I5020> .
_:N89a986aef8684ec18c4d53e9df7cbca9 <http://example.org/has_score> "0.6711078"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I5020> .
_:N7cd2dbb2c374488a92f80981c75d3f21 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Networking_and_Communication_NC/NC-Security_Network_Security.txt> <http://example.org/course/ZZMC> .
_:N0984b358d1314ebda3967b5be3561a4d <http://example.org/has_chunk> "Pages: 255-256\nHOURS\n    CS Core = 3\n    KA Core = 2\n\nSEC-Security Foundations: Principles of Secure Computing\nCS Core:\n1. Fundamental security principles (Confidentiality, Integrity, Availability).\n2. Threat models and risk assessment.\n3. Cryptographic techniques for data protection.\n4. Secure coding practices.\n5. Authentication and access control mechanisms.\n\nKA Core:\n6. Network security concepts and protocols.\n7. Incident response and forensics.\n8. Advanced cryptographic methods." <http://example.org/course/ZZMC> .
_:N0984b358d1314ebda3967b5be3561a4d <http://example.org/has_score> "0.6879742"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZMC> .
<http://example.org/course/ZZMC> <http://example.org/is_aligned_with> _:N7cd2dbb2c374488a92f80981c75d3f21 <http://example.org/course/ZZMC> .
_:N7cd2dbb2c374488a92f80981c75d3f21 <http://example.org/has_score> "0.6935851"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZMC> .
_:N6cc2df72c779430e8edd9023cc964d84 <http://example.org/has_chunk> ". Security methods and devices (See also: SEC-Foundations)\n Example concepts:\na. Rings of protection (history from Multics to virtualized x86)\nb. x86_64 rings -1 and -2 (hypervisor and ME/PSP)\n7. Protection, access control, and authentication (See also: SEC-Foundations, SEC-Crypto)\nIllustrative Learning Outcomes:\nCS Core:\n1. Understand the requirement for protection and security mechanisms in operating systems.\n2. List and describe the attack vectors that leverage OS vulnerabilities.\n3" <http://example.org/course/ZZMC> .
_:N6cc2df72c779430e8edd9023cc964d84 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Operating_Systems_OS/OS-Protection_Protection_and_Safety.txt> <http://example.org/course/ZZMC> .
<http://example.org/course/ZZMC> <http://example.org/is_aligned_with> _:N0984b358d1314ebda3967b5be3561a4d <http://example.org/course/ZZMC> .
<http://example.org/course/ZZMC> <http://example.org/is_aligned_with> _:N6cc2df72c779430e8edd9023cc964d84 <http://example.org/course/ZZMC> .
_:N7cd2dbb2c374488a92f80981c75d3f21 <http://example.org/has_chunk> ". Cryptography (e.g. SSL, TLS, symmetric/asymmetric)\nb. Architectures for secure networks (e.g., secure channels, secure routing protocols, secure\nDNS, VPNs, DMZ, Zero Trust Network Access, hyper network security, anonymous\ncommunication protocols, isolation)\nc. Network monitoring, intrusion detection, firewalls, spoofing and DoS protection, honeypots,\ntracebacks, BGP Sec, RPKI\nIllustrative Learning Outcomes:\nKA Core:\n1. Describe some of the threat models of network security. \n2" <http://example.org/course/ZZMC> .
_:N0984b358d1314ebda3967b5be3561a4d <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Security_SEC/SEC-Security_Foundations.txt> <http://example.org/course/ZZMC> .
_:N6cc2df72c779430e8edd9023cc964d84 <http://example.org/has_score> "0.6934532"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/ZZMC> .
_:N870031933fc74720b0ba9b5129a54d71 <http://example.org/has_chunk> ". \n7. Accessibility issues, including legal requirements such as Web Content Accessibility Guidelines (www.w3.org/TR/WCAG21) \n8. Context-aware computing  \n \nIllustrative Learning Outcomes: \nCS Core: \n1. Describe the different ways that computer technology (networks, mobile computing, artificial intelligence) mediates social interaction at the personal and collective levels. \n2" <http://example.org/course/X3ITM50> .
_:N92d41633f9e84fe3875a05b73ac8edcf <http://example.org/has_score> "0.64658195"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3ITM50> .
<http://example.org/course/X3ITM50> <http://example.org/is_aligned_with> _:Nf873e0b9249f4968a174efd9733075da <http://example.org/course/X3ITM50> .
_:N870031933fc74720b0ba9b5129a54d71 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Society_Ethics_and_the_Profession_SEP/SEP-Social_Context.txt> <http://example.org/course/X3ITM50> .
_:Nf873e0b9249f4968a174efd9733075da <http://example.org/has_score> "0.6517818"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3ITM50> .
_:N870031933fc74720b0ba9b5129a54d71 <http://example.org/has_score> "0.65343755"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3ITM50> .
<http://example.org/course/X3ITM50> <http://example.org/is_aligned_with> _:N870031933fc74720b0ba9b5129a54d71 <http://example.org/course/X3ITM50> .
_:Nf873e0b9249f4968a174efd9733075da <http://example.org/has_chunk> ". Layering principles (e.g., encapsulation and hourglass model) (See also: SF-Foundations)\n6. Network elements (e.g., routers, switches, hubs, access points, and hosts)\n7. Basic queueing concepts (e.g., relationship with latency, congestion, service levels, etc.)\nIllustrative Learning Outcomes:\nCS Core:\n1. Articulate the organization of the internet.\n2. List and define the appropriate network terminology\n3. Describe the layered structure of a typical networked architecture.\n4" <http://example.org/course/X3ITM50> .
_:N92d41633f9e84fe3875a05b73ac8edcf <http://example.org/has_chunk> ". Basic concept of pipelining, overlapped processing stages (See also: AR-Organization) \n6. Basic concept of scaling: performance vs problem size \n \nIllustrative Learning Outcomes:  \nCS Core: \n1. Describe the basic building blocks of computers and their role in the historical development of computer architecture. \n2. Design a simple logic circuit using the fundamental building blocks of logic design to solve a simple problem (e.g., adder). \n3" <http://example.org/course/X3ITM50> .
_:N92d41633f9e84fe3875a05b73ac8edcf <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/System_Fundamentals_SF/SF-Overview_of_Computer_Systems.txt> <http://example.org/course/X3ITM50> .
_:Nf873e0b9249f4968a174efd9733075da <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Networking_and_Communication_NC/NC-Fundamentals_Fundamentals.txt> <http://example.org/course/X3ITM50> .
<http://example.org/course/X3ITM50> <http://example.org/is_aligned_with> _:N92d41633f9e84fe3875a05b73ac8edcf <http://example.org/course/X3ITM50> .
<http://example.org/course/X3IOM30> <http://example.org/is_aligned_with> _:N0e35682538e040a5bd5ad843098d0cbf <http://example.org/course/X3IOM30> .
<http://example.org/course/X3IOM30> <http://example.org/is_aligned_with> _:Na4578d4764284ff8b112d5b901c4865c <http://example.org/course/X3IOM30> .
_:Na4578d4764284ff8b112d5b901c4865c <http://example.org/has_chunk> "NC-Routing: Routing and Forwarding\nKA Core:\n1. Routing paradigms and hierarchy (e.g., intra/inter domain, centralized and decentralized, source\nrouting, virtual circuits, QoS)\n2. Forwarding methods (e.g., forwarding tables and matching algorithms)\n3. IP and Scalability issues (e.g., NAT, CIDR, BGP, different versions of IP)\nIllustrative Learning Outcomes:\nKA Core:\n1. Describe various routing paradigms and hierarchies.\n2. Describe how packets are forwarded in an IP network.\n3" <http://example.org/course/X3IOM30> .
_:N23cf0e04d3fd47858c7bb10bafb9b4e9 <http://example.org/has_score> "0.6798993"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IOM30> .
<http://example.org/course/X3IOM30> <http://example.org/is_aligned_with> _:N23cf0e04d3fd47858c7bb10bafb9b4e9 <http://example.org/course/X3IOM30> .
_:N0e35682538e040a5bd5ad843098d0cbf <http://example.org/has_chunk> ". Layering principles (e.g., encapsulation and hourglass model) (See also: SF-Foundations)\n6. Network elements (e.g., routers, switches, hubs, access points, and hosts)\n7. Basic queueing concepts (e.g., relationship with latency, congestion, service levels, etc.)\nIllustrative Learning Outcomes:\nCS Core:\n1. Articulate the organization of the internet.\n2. List and define the appropriate network terminology\n3. Describe the layered structure of a typical networked architecture.\n4" <http://example.org/course/X3IOM30> .
_:N0e35682538e040a5bd5ad843098d0cbf <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Networking_and_Communication_NC/NC-Fundamentals_Fundamentals.txt> <http://example.org/course/X3IOM30> .
_:Na4578d4764284ff8b112d5b901c4865c <http://example.org/has_score> "0.7053264"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IOM30> .
_:N0e35682538e040a5bd5ad843098d0cbf <http://example.org/has_score> "0.67459184"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IOM30> .
_:N23cf0e04d3fd47858c7bb10bafb9b4e9 <http://example.org/has_chunk> ". Develop algorithmic solutions to real-world societal problems, such as routing an ambulance to a\nhospital.\n2. Explain the impact that an algorithm may have on the environment and society when used to solve\na real-world problem while considering its sustainability and that it can affect different societal\ngroups in different ways.\n3. Prepare a presentation that justifies the selection of appropriate data structures and/or algorithms to\nsolve a given real-world problem.\n4" <http://example.org/course/X3IOM30> .
_:N23cf0e04d3fd47858c7bb10bafb9b4e9 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-SEP_Society_Ethics_and_the_Profession.txt> <http://example.org/course/X3IOM30> .
_:Na4578d4764284ff8b112d5b901c4865c <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Networking_and_Communication_NC/NC-Routing_Routing_and_Forwarding.txt> <http://example.org/course/X3IOM30> .
_:N0dc5eacd687b4cbeadb6a81cbd03a8af <http://example.org/has_score> "0.7209712"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I1040> .
_:N0dc5eacd687b4cbeadb6a81cbd03a8af <http://example.org/has_chunk> ". Cloud Hosting \nb. Scalability (e.g., Autoscaling, Clusters) \nc. Cost estimation for services \n8. Data management (See also: DM-Core) \na. Data residency: where the data is located and what paths can be taken to access it \nb. Data integrity: guaranteeing data is accessible and that data is deleted when required \n9. Architecture \na. Monoliths vs Microservices \nb. Micro-frontends \nc. Event-Driven vs RESTful architectures: advantages and disadvantages \nd. Serverless, cloud computing on demand \n10" <http://example.org/course/X1I1040> .
_:N0cc922466e7f497e85538b1a1bed1042 <http://example.org/has_chunk> "KA Core: \n1. Web programming languages (e.g., HTML5, JavaScript, PHP, CSS) \n2. Web platforms, frameworks, or meta-frameworks \na. Cloud services \nb. API, Web Components \n3. Software as a Service (SaaS) \n4. Web standards such as document object model, accessibility (See also: HCI-Accessibility) \n5. Security and Privacy Considerations (See also: SEP-Security) \n \nNon-core:  \n6. Analyzing requirements for web applications \n7. Computing services (See also: DM-NoSQL) \na. Cloud Hosting \nb. Scalability (e.g" <http://example.org/course/X1I1040> .
_:N564c232a7a5c4e57920805985b567910 <http://example.org/has_chunk> ". Serverless, cloud computing on demand \n10. Storage solutions (See also: DM-Relational, DM-NoSQL) \na. Relational Databases \nb. NoSQL databases \n \nIllustrative Learning Outcomes: \nKA Core: \n1. Design and implement a web-based application using a microservice architecture design. \n2. Describe the constraints, such as hosting, services, and scalability, related to web platforms. \n3. Compare and contrast web programming with general-purpose programming.  \n4" <http://example.org/course/X1I1040> .
<http://example.org/course/X1I1040> <http://example.org/is_aligned_with> _:N0cc922466e7f497e85538b1a1bed1042 <http://example.org/course/X1I1040> .
_:N564c232a7a5c4e57920805985b567910 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Web_Platforms.txt> <http://example.org/course/X1I1040> .
_:N564c232a7a5c4e57920805985b567910 <http://example.org/has_score> "0.75895864"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I1040> .
_:N0cc922466e7f497e85538b1a1bed1042 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Web_Platforms.txt> <http://example.org/course/X1I1040> .
<http://example.org/course/X1I1040> <http://example.org/is_aligned_with> _:N0dc5eacd687b4cbeadb6a81cbd03a8af <http://example.org/course/X1I1040> .
<http://example.org/course/X1I1040> <http://example.org/is_aligned_with> _:N564c232a7a5c4e57920805985b567910 <http://example.org/course/X1I1040> .
_:N0dc5eacd687b4cbeadb6a81cbd03a8af <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Specialized_Platform_Development_SPD/SPD-Web_Platforms.txt> <http://example.org/course/X1I1040> .
_:N0cc922466e7f497e85538b1a1bed1042 <http://example.org/has_score> "0.74505407"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1I1040> .
_:N52aa34223822475eb4cf9e0f4900f44c <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Formalism_Formal_Semantics.txt> <http://example.org/course/X2I2010> .
_:N52aa34223822475eb4cf9e0f4900f44c <http://example.org/has_score> "0.6975482"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I2010> .
<http://example.org/course/X2I2010> <http://example.org/is_aligned_with> _:Ne1e029a76cbc4719a5f76cd565f60e40 <http://example.org/course/X2I2010> .
_:N52aa34223822475eb4cf9e0f4900f44c <http://example.org/has_chunk> ". Parametricity\nIllustrative learning outcomes:\nNon-core:\n1. Construct formal semantics for a small language.\n2. Write a lambda-calculus program and show its evaluation to a normal form.\n3. Discuss the different approaches of operational, denotational, and axiomatic semantics.\n4. Use induction to prove properties of all programs in a language.\n5. Use induction to prove properties of all programs in a language that is well-typed according to a\nformally defined type system.\n6" <http://example.org/course/X2I2010> .
_:Ne1e029a76cbc4719a5f76cd565f60e40 <http://example.org/has_score> "0.701411"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I2010> .
_:Nda9ddb9a17884aac988e8df0b9ce096b <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Models_Computational_Models_and_Formal_Languages.txt> <http://example.org/course/X2I2010> .
_:Ne1e029a76cbc4719a5f76cd565f60e40 <http://example.org/has_chunk> ".\n3. Explain side-effect using global and nonlocal variables and how to fix such programs.\n4. Explain how programs that process other programs treat the other programs as their input data.\n5. Describe a grammar and an abstract syntax tree for a small language.\n6. Describe the benefits of having program representations other than strings of source code.\n7. Implement a program to process some representation of code for some purpose, such as an\ninterpreter, an expression optimizer, or a documentation generator" <http://example.org/course/X2I2010> .
<http://example.org/course/X2I2010> <http://example.org/is_aligned_with> _:Nda9ddb9a17884aac988e8df0b9ce096b <http://example.org/course/X2I2010> .
_:Nda9ddb9a17884aac988e8df0b9ce096b <http://example.org/has_chunk> ".\n2. Given a problem, develop an appropriate automaton that addresses the problem.\n3. Develop a regular expression for a given regular language expressed in natural language.\n4. Explain the difference between regular expressions (Type-3 acceptors) and the regular expressions\n(Type-2 acceptors) used in programming languages.\n5. For each formal model in this unit:\na. Explain its definition comparing its characteristics with the others in this unit,\nb" <http://example.org/course/X2I2010> .
_:Ne1e029a76cbc4719a5f76cd565f60e40 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Abstraction_Program_Abstraction_and_Representation.txt> <http://example.org/course/X2I2010> .
<http://example.org/course/X2I2010> <http://example.org/is_aligned_with> _:N52aa34223822475eb4cf9e0f4900f44c <http://example.org/course/X2I2010> .
_:Nda9ddb9a17884aac988e8df0b9ce096b <http://example.org/has_score> "0.6972381"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X2I2010> .
_:Na536d6ec15ee4b8286ba99e0c1e71b31 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Architecture_and_Organization_AR/AR-Representation_Machine-Level_Data_Representation.txt> <http://example.org/course/X1II060> .
_:Na536d6ec15ee4b8286ba99e0c1e71b31 <http://example.org/has_chunk> "AR-Representation: Machine-Level Data Representation\nCS Core:\n1. Overview and history of computer architecture (See also: SPD-Game)\n2. Bits, bytes, and words\n3. Unsigned, signed and two’s complement representations\n4. Numeric data representation and number bases\na. Fixed-point\nb. Floating-point\n5. Representation of non-numeric data\n6. Representation of records, arrays and UTF data types (See also: AL-Foundational)\nIllustrative Learning Outcomes:\nCS Core:\n1" <http://example.org/course/X1II060> .
_:Nee8e344cc66a41bfba929e07cf0dec52 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Networking_and_Communication_NC/NC-Fundamentals_Fundamentals.txt> <http://example.org/course/X1II060> .
<http://example.org/course/X1II060> <http://example.org/is_aligned_with> _:N6b98b96781684a1a96a42b8b2b605dd6 <http://example.org/course/X1II060> .
<http://example.org/course/X1II060> <http://example.org/is_aligned_with> _:Na536d6ec15ee4b8286ba99e0c1e71b31 <http://example.org/course/X1II060> .
_:Nee8e344cc66a41bfba929e07cf0dec52 <http://example.org/has_score> "0.62078583"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II060> .
_:N6b98b96781684a1a96a42b8b2b605dd6 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Software_Engineering_SE/SE-Formal_Methods.txt> <http://example.org/course/X1II060> .
_:Na536d6ec15ee4b8286ba99e0c1e71b31 <http://example.org/has_score> "0.6176576"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II060> .
_:N6b98b96781684a1a96a42b8b2b605dd6 <http://example.org/has_chunk> "Pages: TBD\nHOURS\n    CS Core = TBD\n    KA Core = TBD\n\nSE-Formal Methods: Core Concepts\nCS Core:\n1. Placeholder topic 1\n2. Placeholder topic 2\n3. Placeholder topic 3\n\nKA Core:\n4. Placeholder advanced topic 1\n5. Placeholder advanced topic 2\n\nIllustrative Learning Outcomes:\n1. Explain key concepts of SE-Formal Methods.\n2. Apply principles in practical scenarios.\n3. Analyze the importance of this topic in computing." <http://example.org/course/X1II060> .
<http://example.org/course/X1II060> <http://example.org/is_aligned_with> _:Nee8e344cc66a41bfba929e07cf0dec52 <http://example.org/course/X1II060> .
_:N6b98b96781684a1a96a42b8b2b605dd6 <http://example.org/has_score> "0.62665683"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1II060> .
_:Nee8e344cc66a41bfba929e07cf0dec52 <http://example.org/has_chunk> ". Layering principles (e.g., encapsulation and hourglass model) (See also: SF-Foundations)\n6. Network elements (e.g., routers, switches, hubs, access points, and hosts)\n7. Basic queueing concepts (e.g., relationship with latency, congestion, service levels, etc.)\nIllustrative Learning Outcomes:\nCS Core:\n1. Articulate the organization of the internet.\n2. List and define the appropriate network terminology\n3. Describe the layered structure of a typical networked architecture.\n4" <http://example.org/course/X1II060> .
_:N8a286d549d974f2c87d13fd5c93789b4 <http://example.org/has_score> "0.679895"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1MC060> .
<http://example.org/course/X1MC060> <http://example.org/is_aligned_with> _:Ne97cf6ef0c3549a9aff81086c5cc331c <http://example.org/course/X1MC060> .
_:Ne97cf6ef0c3549a9aff81086c5cc331c <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Models_Computational_Models_and_Formal_Languages.txt> <http://example.org/course/X1MC060> .
_:N484d16916b8b4d658f472753ab2c8243 <http://example.org/has_score> "0.6847631"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1MC060> .
_:Ne97cf6ef0c3549a9aff81086c5cc331c <http://example.org/has_score> "0.67617536"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X1MC060> .
_:N8a286d549d974f2c87d13fd5c93789b4 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Calculus.txt> <http://example.org/course/X1MC060> .
_:Ne97cf6ef0c3549a9aff81086c5cc331c <http://example.org/has_chunk> ".\n2. Given a problem, develop an appropriate automaton that addresses the problem.\n3. Develop a regular expression for a given regular language expressed in natural language.\n4. Explain the difference between regular expressions (Type-3 acceptors) and the regular expressions\n(Type-2 acceptors) used in programming languages.\n5. For each formal model in this unit:\na. Explain its definition comparing its characteristics with the others in this unit,\nb" <http://example.org/course/X1MC060> .
_:N484d16916b8b4d658f472753ab2c8243 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Mathematical_and_Statistical_Foundations_MSF/MSF-Linear_Linear_Algebra.txt> <http://example.org/course/X1MC060> .
<http://example.org/course/X1MC060> <http://example.org/is_aligned_with> _:N8a286d549d974f2c87d13fd5c93789b4 <http://example.org/course/X1MC060> .
_:N8a286d549d974f2c87d13fd5c93789b4 <http://example.org/has_chunk> ". CS applications: gradient descent for machine learning, forward and inverse kinematics,\napplications of calculus to probability\nNote: the calculus topics listed above are aligned with computer science goals rather than with\ntraditional calculus courses. For example, multivariate calculus is often a course by itself, but computer\nscience undergraduates only need parts of it for machine learning.\nIllustrative Learning Outcomes:\nKA Core:\n1. Sequences, series, limits\na" <http://example.org/course/X1MC060> .
_:N484d16916b8b4d658f472753ab2c8243 <http://example.org/has_chunk> ".\n3. Solving equations, row-reduction\na. Formulate, solve, apply, and interpret properties of linear systems.\nb. Perform row operations on a matrix.\nc. Relate an augmented matrix to a system of linear equations.\nd. Solve linear systems of equations using the language of matrices.\ne. Translate word problems into linear equations.\nf. Perform Gaussian elimination.\n4. Linear independence, span, basis\na. Define subspace of a vector space.\nb. List examples of subspaces of a vector space.\nc" <http://example.org/course/X1MC060> .
<http://example.org/course/X1MC060> <http://example.org/is_aligned_with> _:N484d16916b8b4d658f472753ab2c8243 <http://example.org/course/X1MC060> .
_:Nadccc8965df5408bb21407baa5a56362 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Models_Computational_Models_and_Formal_Languages.txt> <http://example.org/course/X3IT030> .
_:N50474c3bf8354768b8e7dc30404a6c16 <http://example.org/has_score> "0.6873642"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT030> .
<http://example.org/course/X3IT030> <http://example.org/is_aligned_with> _:N47c1cc2fbb9a4520a2670bfc28126abe <http://example.org/course/X3IT030> .
_:Nadccc8965df5408bb21407baa5a56362 <http://example.org/has_score> "0.6758119"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT030> .
_:N47c1cc2fbb9a4520a2670bfc28126abe <http://example.org/has_chunk> ". Examples of use: POS tagging and morphology\n8. Information retrieval (See also: DM-Unstructured)\na. Vector space model\ni. TF & IDF\nb. Precision and recall\n9. Information extraction\n10. Language translation\n11. Text classification, categorization\na. Bag of words model\n12. Deep learning for NLP (See also: AI-ML)\na. RNNs\nb. Transformers\nc. Multi-modal embeddings (e.g., images + text)\nd. Generative language models\nIllustrative Learning Outcomes:\n1" <http://example.org/course/X3IT030> .
_:N50474c3bf8354768b8e7dc30404a6c16 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Foundations_of_Programming_Languages_FPL/FPL-Logic_Logic_Programming.txt> <http://example.org/course/X3IT030> .
<http://example.org/course/X3IT030> <http://example.org/is_aligned_with> _:Nadccc8965df5408bb21407baa5a56362 <http://example.org/course/X3IT030> .
<http://example.org/course/X3IT030> <http://example.org/is_aligned_with> _:N50474c3bf8354768b8e7dc30404a6c16 <http://example.org/course/X3IT030> .
_:N47c1cc2fbb9a4520a2670bfc28126abe <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-NLP_Natural_Language_Processing.txt> <http://example.org/course/X3IT030> .
_:N47c1cc2fbb9a4520a2670bfc28126abe <http://example.org/has_score> "0.67495275"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT030> .
_:Nadccc8965df5408bb21407baa5a56362 <http://example.org/has_chunk> ".\n2. Given a problem, develop an appropriate automaton that addresses the problem.\n3. Develop a regular expression for a given regular language expressed in natural language.\n4. Explain the difference between regular expressions (Type-3 acceptors) and the regular expressions\n(Type-2 acceptors) used in programming languages.\n5. For each formal model in this unit:\na. Explain its definition comparing its characteristics with the others in this unit,\nb" <http://example.org/course/X3IT030> .
_:N50474c3bf8354768b8e7dc30404a6c16 <http://example.org/has_chunk> ". (See also: AI-LRR)\n13. Integration with other programming paradigms such as object-oriented programming.\n14. Advance programming constructs such as difference-lists, creating user defined data structures, set\nof, etc.\nIllustrative learning outcomes:\nKA Core:\n1. Use a logic language to implement a conventional algorithm.\n2. Use a logic language to implement an algorithm employing implicit search using clauses, relations,\nand cuts.\n3" <http://example.org/course/X3IT030> .
<http://example.org/course/X3IT060> <http://example.org/is_aligned_with> _:Nde5fb7c05d8d479691318393ee46e5bf <http://example.org/course/X3IT060> .
_:Nae1dd93ec861422d82c000a716f9e577 <http://example.org/has_score> "0.6492717"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT060> .
_:N0337a4ff01564c5d8269a12402435c1a <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Algorithmic_Foundations_AL/AL-Models_Computational_Models_and_Formal_Languages.txt> <http://example.org/course/X3IT060> .
_:Nde5fb7c05d8d479691318393ee46e5bf <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-NLP_Natural_Language_Processing.txt> <http://example.org/course/X3IT060> .
<http://example.org/course/X3IT060> <http://example.org/is_aligned_with> _:Nae1dd93ec861422d82c000a716f9e577 <http://example.org/course/X3IT060> .
_:Nde5fb7c05d8d479691318393ee46e5bf <http://example.org/has_score> "0.65995896"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT060> .
_:N0337a4ff01564c5d8269a12402435c1a <http://example.org/has_score> "0.6438263"^^<http://www.w3.org/2001/XMLSchema#float> <http://example.org/course/X3IT060> .
_:N0337a4ff01564c5d8269a12402435c1a <http://example.org/has_chunk> ".\n2. Given a problem, develop an appropriate automaton that addresses the problem.\n3. Develop a regular expression for a given regular language expressed in natural language.\n4. Explain the difference between regular expressions (Type-3 acceptors) and the regular expressions\n(Type-2 acceptors) used in programming languages.\n5. For each formal model in this unit:\na. Explain its definition comparing its characteristics with the others in this unit,\nb" <http://example.org/course/X3IT060> .
_:Nde5fb7c05d8d479691318393ee46e5bf <http://example.org/has_chunk> ". Examples of use: POS tagging and morphology\n8. Information retrieval (See also: DM-Unstructured)\na. Vector space model\ni. TF & IDF\nb. Precision and recall\n9. Information extraction\n10. Language translation\n11. Text classification, categorization\na. Bag of words model\n12. Deep learning for NLP (See also: AI-ML)\na. RNNs\nb. Transformers\nc. Multi-modal embeddings (e.g., images + text)\nd. Generative language models\nIllustrative Learning Outcomes:\n1" <http://example.org/course/X3IT060> .
_:Nae1dd93ec861422d82c000a716f9e577 <http://example.org/has_chunk> ". Define and contrast deterministic and stochastic grammars, providing examples to show the\nadequacy of each.\n2. Simulate, apply, or implement classic and stochastic algorithms for parsing natural language.\n3. Identify the challenges of representing meaning.\n4. List the advantages of using standard corpora. Identify examples of current corpora for a variety of\nNLP tasks.\n5. Identify techniques for information retrieval, language translation, and text classification.\n6" <http://example.org/course/X3IT060> .
<http://example.org/course/X3IT060> <http://example.org/is_aligned_with> _:N0337a4ff01564c5d8269a12402435c1a <http://example.org/course/X3IT060> .
_:Nae1dd93ec861422d82c000a716f9e577 <http://example.org/has_source> <file:///workspaces/SLM-EXP/data/BodyOfKnowledge/Artificial_Intelligence_AI/AI-NLP_Natural_Language_Processing.txt> <http://example.org/course/X3IT060> .

